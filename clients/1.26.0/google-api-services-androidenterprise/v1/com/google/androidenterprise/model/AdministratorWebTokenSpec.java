/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.androidenterprise.model;

/**
 * Specification for a token used to generate iframes. The token specifies what data the admin is
 * allowed to modify and the URI the iframe is allowed to communiate with.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google Play EMM API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class AdministratorWebTokenSpec extends com.google.api.client.json.GenericJson {

  /**
   * Identifies what kind of resource this is. Value: the fixed string
   * "androidenterprise#administratorWebTokenSpec".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String kind;

  /**
   * The URI of the parent frame hosting the iframe. To prevent XSS, the iframe may not be hosted at
   * other URIs. This URI must be https.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String parent;

  /**
   * The list of permissions the admin is granted within the iframe. The admin will only be allowed
   * to view an iframe if they have all of the permissions associated with it. The only valid value
   * is "approveApps" that will allow the admin to access the iframe in "approve" mode.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> permission;

  /**
   * Identifies what kind of resource this is. Value: the fixed string
   * "androidenterprise#administratorWebTokenSpec".
   * @return value or {@code null} for none
   */
  public java.lang.String getKind() {
    return kind;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string
   * "androidenterprise#administratorWebTokenSpec".
   * @param kind kind or {@code null} for none
   */
  public AdministratorWebTokenSpec setKind(java.lang.String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The URI of the parent frame hosting the iframe. To prevent XSS, the iframe may not be hosted at
   * other URIs. This URI must be https.
   * @return value or {@code null} for none
   */
  public java.lang.String getParent() {
    return parent;
  }

  /**
   * The URI of the parent frame hosting the iframe. To prevent XSS, the iframe may not be hosted at
   * other URIs. This URI must be https.
   * @param parent parent or {@code null} for none
   */
  public AdministratorWebTokenSpec setParent(java.lang.String parent) {
    this.parent = parent;
    return this;
  }

  /**
   * The list of permissions the admin is granted within the iframe. The admin will only be allowed
   * to view an iframe if they have all of the permissions associated with it. The only valid value
   * is "approveApps" that will allow the admin to access the iframe in "approve" mode.
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getPermission() {
    return permission;
  }

  /**
   * The list of permissions the admin is granted within the iframe. The admin will only be allowed
   * to view an iframe if they have all of the permissions associated with it. The only valid value
   * is "approveApps" that will allow the admin to access the iframe in "approve" mode.
   * @param permission permission or {@code null} for none
   */
  public AdministratorWebTokenSpec setPermission(java.util.List<java.lang.String> permission) {
    this.permission = permission;
    return this;
  }

  @Override
  public AdministratorWebTokenSpec set(String fieldName, Object value) {
    return (AdministratorWebTokenSpec) super.set(fieldName, value);
  }

  @Override
  public AdministratorWebTokenSpec clone() {
    return (AdministratorWebTokenSpec) super.clone();
  }

}
