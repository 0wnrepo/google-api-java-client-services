/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.videointelligence.v1beta1.model;

/**
 * Video context and/or feature-specific parameters.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Cloud Video Intelligence API. For a detailed
 * explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudVideointelligenceV1beta1VideoContext extends com.google.api.client.json.GenericJson {

  /**
   * If label detection has been requested, what labels should be detected in addition to video-
   * level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String labelDetectionMode;

  /**
   * Model to use for label detection. Supported values: "latest" and "stable" (the default).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String labelDetectionModel;

  /**
   * Model to use for safe search detection. Supported values: "latest" and "stable" (the default).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String safeSearchDetectionModel;

  /**
   * Video segments to annotate. The segments may overlap and are not required to be contiguous or
   * span the whole video. If unspecified, each video is treated as a single segment.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<GoogleCloudVideointelligenceV1beta1VideoSegment> segments;

  static {
    // hack to force ProGuard to consider GoogleCloudVideointelligenceV1beta1VideoSegment used, since otherwise it would be stripped out
    // see https://github.com/google/google-api-java-client/issues/543
    com.google.api.client.util.Data.nullOf(GoogleCloudVideointelligenceV1beta1VideoSegment.class);
  }

  /**
   * Model to use for shot change detection. Supported values: "latest" and "stable" (the default).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String shotChangeDetectionModel;

  /**
   * Whether the video has been shot from a stationary (i.e. non-moving) camera. When set to true,
   * might improve detection accuracy for moving objects.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean stationaryCamera;

  /**
   * If label detection has been requested, what labels should be detected in addition to video-
   * level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`.
   * @return value or {@code null} for none
   */
  public java.lang.String getLabelDetectionMode() {
    return labelDetectionMode;
  }

  /**
   * If label detection has been requested, what labels should be detected in addition to video-
   * level labels or segment-level labels. If unspecified, defaults to `SHOT_MODE`.
   * @param labelDetectionMode labelDetectionMode or {@code null} for none
   */
  public GoogleCloudVideointelligenceV1beta1VideoContext setLabelDetectionMode(java.lang.String labelDetectionMode) {
    this.labelDetectionMode = labelDetectionMode;
    return this;
  }

  /**
   * Model to use for label detection. Supported values: "latest" and "stable" (the default).
   * @return value or {@code null} for none
   */
  public java.lang.String getLabelDetectionModel() {
    return labelDetectionModel;
  }

  /**
   * Model to use for label detection. Supported values: "latest" and "stable" (the default).
   * @param labelDetectionModel labelDetectionModel or {@code null} for none
   */
  public GoogleCloudVideointelligenceV1beta1VideoContext setLabelDetectionModel(java.lang.String labelDetectionModel) {
    this.labelDetectionModel = labelDetectionModel;
    return this;
  }

  /**
   * Model to use for safe search detection. Supported values: "latest" and "stable" (the default).
   * @return value or {@code null} for none
   */
  public java.lang.String getSafeSearchDetectionModel() {
    return safeSearchDetectionModel;
  }

  /**
   * Model to use for safe search detection. Supported values: "latest" and "stable" (the default).
   * @param safeSearchDetectionModel safeSearchDetectionModel or {@code null} for none
   */
  public GoogleCloudVideointelligenceV1beta1VideoContext setSafeSearchDetectionModel(java.lang.String safeSearchDetectionModel) {
    this.safeSearchDetectionModel = safeSearchDetectionModel;
    return this;
  }

  /**
   * Video segments to annotate. The segments may overlap and are not required to be contiguous or
   * span the whole video. If unspecified, each video is treated as a single segment.
   * @return value or {@code null} for none
   */
  public java.util.List<GoogleCloudVideointelligenceV1beta1VideoSegment> getSegments() {
    return segments;
  }

  /**
   * Video segments to annotate. The segments may overlap and are not required to be contiguous or
   * span the whole video. If unspecified, each video is treated as a single segment.
   * @param segments segments or {@code null} for none
   */
  public GoogleCloudVideointelligenceV1beta1VideoContext setSegments(java.util.List<GoogleCloudVideointelligenceV1beta1VideoSegment> segments) {
    this.segments = segments;
    return this;
  }

  /**
   * Model to use for shot change detection. Supported values: "latest" and "stable" (the default).
   * @return value or {@code null} for none
   */
  public java.lang.String getShotChangeDetectionModel() {
    return shotChangeDetectionModel;
  }

  /**
   * Model to use for shot change detection. Supported values: "latest" and "stable" (the default).
   * @param shotChangeDetectionModel shotChangeDetectionModel or {@code null} for none
   */
  public GoogleCloudVideointelligenceV1beta1VideoContext setShotChangeDetectionModel(java.lang.String shotChangeDetectionModel) {
    this.shotChangeDetectionModel = shotChangeDetectionModel;
    return this;
  }

  /**
   * Whether the video has been shot from a stationary (i.e. non-moving) camera. When set to true,
   * might improve detection accuracy for moving objects.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getStationaryCamera() {
    return stationaryCamera;
  }

  /**
   * Whether the video has been shot from a stationary (i.e. non-moving) camera. When set to true,
   * might improve detection accuracy for moving objects.
   * @param stationaryCamera stationaryCamera or {@code null} for none
   */
  public GoogleCloudVideointelligenceV1beta1VideoContext setStationaryCamera(java.lang.Boolean stationaryCamera) {
    this.stationaryCamera = stationaryCamera;
    return this;
  }

  @Override
  public GoogleCloudVideointelligenceV1beta1VideoContext set(String fieldName, Object value) {
    return (GoogleCloudVideointelligenceV1beta1VideoContext) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudVideointelligenceV1beta1VideoContext clone() {
    return (GoogleCloudVideointelligenceV1beta1VideoContext) super.clone();
  }

}
