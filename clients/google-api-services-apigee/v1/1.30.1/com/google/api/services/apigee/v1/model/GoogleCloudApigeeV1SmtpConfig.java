/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apigee.v1.model;

/**
 * Model definition for GoogleCloudApigeeV1SmtpConfig.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Apigee API. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class GoogleCloudApigeeV1SmtpConfig extends com.google.api.client.json.GenericJson {

  /**
   * Authorization type. Valid values include SSL, TLS, or blank (no auth).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String authType;

  /**
   * Email address used as the sender.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String fromEmail;

  /**
   * Host URL of the SMTP server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String host;

  /**
   * ID of the SMTP configuration.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer id;

  /**
   * SMTP password.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String password;

  /**
   * Port number for the SMTP server. Supported values include: 465 (SSL), 587 (TLS), and 25 (open,
   * no authorization).
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String port;

  /**
   * Boolean flag that specifies whether to use a secure connection to the SMTP server.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean secure;

  /**
   * SMTP secure password.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String securePassword;

  /**
   * ID of the portal.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String siteId;

  /**
   * SMTP username.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String username;

  /**
   * Authorization type. Valid values include SSL, TLS, or blank (no auth).
   * @return value or {@code null} for none
   */
  public java.lang.String getAuthType() {
    return authType;
  }

  /**
   * Authorization type. Valid values include SSL, TLS, or blank (no auth).
   * @param authType authType or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setAuthType(java.lang.String authType) {
    this.authType = authType;
    return this;
  }

  /**
   * Email address used as the sender.
   * @return value or {@code null} for none
   */
  public java.lang.String getFromEmail() {
    return fromEmail;
  }

  /**
   * Email address used as the sender.
   * @param fromEmail fromEmail or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setFromEmail(java.lang.String fromEmail) {
    this.fromEmail = fromEmail;
    return this;
  }

  /**
   * Host URL of the SMTP server.
   * @return value or {@code null} for none
   */
  public java.lang.String getHost() {
    return host;
  }

  /**
   * Host URL of the SMTP server.
   * @param host host or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setHost(java.lang.String host) {
    this.host = host;
    return this;
  }

  /**
   * ID of the SMTP configuration.
   * @return value or {@code null} for none
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * ID of the SMTP configuration.
   * @param id id or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setId(java.lang.Integer id) {
    this.id = id;
    return this;
  }

  /**
   * SMTP password.
   * @return value or {@code null} for none
   */
  public java.lang.String getPassword() {
    return password;
  }

  /**
   * SMTP password.
   * @param password password or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setPassword(java.lang.String password) {
    this.password = password;
    return this;
  }

  /**
   * Port number for the SMTP server. Supported values include: 465 (SSL), 587 (TLS), and 25 (open,
   * no authorization).
   * @return value or {@code null} for none
   */
  public java.lang.String getPort() {
    return port;
  }

  /**
   * Port number for the SMTP server. Supported values include: 465 (SSL), 587 (TLS), and 25 (open,
   * no authorization).
   * @param port port or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setPort(java.lang.String port) {
    this.port = port;
    return this;
  }

  /**
   * Boolean flag that specifies whether to use a secure connection to the SMTP server.
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getSecure() {
    return secure;
  }

  /**
   * Boolean flag that specifies whether to use a secure connection to the SMTP server.
   * @param secure secure or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setSecure(java.lang.Boolean secure) {
    this.secure = secure;
    return this;
  }

  /**
   * SMTP secure password.
   * @return value or {@code null} for none
   */
  public java.lang.String getSecurePassword() {
    return securePassword;
  }

  /**
   * SMTP secure password.
   * @param securePassword securePassword or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setSecurePassword(java.lang.String securePassword) {
    this.securePassword = securePassword;
    return this;
  }

  /**
   * ID of the portal.
   * @return value or {@code null} for none
   */
  public java.lang.String getSiteId() {
    return siteId;
  }

  /**
   * ID of the portal.
   * @param siteId siteId or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setSiteId(java.lang.String siteId) {
    this.siteId = siteId;
    return this;
  }

  /**
   * SMTP username.
   * @return value or {@code null} for none
   */
  public java.lang.String getUsername() {
    return username;
  }

  /**
   * SMTP username.
   * @param username username or {@code null} for none
   */
  public GoogleCloudApigeeV1SmtpConfig setUsername(java.lang.String username) {
    this.username = username;
    return this;
  }

  @Override
  public GoogleCloudApigeeV1SmtpConfig set(String fieldName, Object value) {
    return (GoogleCloudApigeeV1SmtpConfig) super.set(fieldName, value);
  }

  @Override
  public GoogleCloudApigeeV1SmtpConfig clone() {
    return (GoogleCloudApigeeV1SmtpConfig) super.clone();
  }

}
