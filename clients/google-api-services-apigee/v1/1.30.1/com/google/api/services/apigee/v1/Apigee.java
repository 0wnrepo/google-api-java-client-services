/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/googleapis/google-api-java-client-services/
 * Modify at your own risk.
 */

package com.google.api.services.apigee.v1;

/**
 * Service definition for Apigee (v1).
 *
 * <p>
 * The Apigee API lets you programmatically manage Apigee hybrid with a set of RESTful operations, including:  Create, edit, and delete API proxies  Manage users  Deploy and undeploy proxy revisions  Configure environmentsFor information on using the APIs described in this section, see Get started using the APIs.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://cloud.google.com/apigee-api-management/" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link ApigeeRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Apigee extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.30.9 of the Apigee API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://apigee.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "";

  /**
   * The default encoded batch path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.23
   */
  public static final String DEFAULT_BATCH_PATH = "batch";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Apigee(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Apigee(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Hybrid collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Apigee apigee = new Apigee(...);}
   *   {@code Apigee.Hybrid.List request = apigee.hybrid().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Hybrid hybrid() {
    return new Hybrid();
  }

  /**
   * The "hybrid" collection of methods.
   */
  public class Hybrid {

    /**
     * An accessor for creating requests from the Issuers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Issuers.List request = apigee.issuers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Issuers issuers() {
      return new Issuers();
    }

    /**
     * The "issuers" collection of methods.
     */
    public class Issuers {

      /**
       * Lists hybrid services and its trusted issuers service account ids. This api is authenticated and
       * unauthorized(allow all the users) and used by runtime authn-authz service to query control
       * plane's issuer service account ids.
       *
       * Create a request for the method "issuers.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name Required. Must be of the form `hybrid/issuers`.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListHybridIssuersResponse> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^hybrid/issuers$");

        /**
         * Lists hybrid services and its trusted issuers service account ids. This api is authenticated
         * and unauthorized(allow all the users) and used by runtime authn-authz service to query control
         * plane's issuer service account ids.
         *
         * Create a request for the method "issuers.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Must be of the form `hybrid/issuers`.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListHybridIssuersResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^hybrid/issuers$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Must be of the form `hybrid/issuers`. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Must be of the form `hybrid/issuers`.
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. Must be of the form `hybrid/issuers`. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^hybrid/issuers$");
          }
          this.name = name;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
  }

  /**
   * An accessor for creating requests from the Organizations collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Apigee apigee = new Apigee(...);}
   *   {@code Apigee.Organizations.List request = apigee.organizations().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Organizations organizations() {
    return new Organizations();
  }

  /**
   * The "organizations" collection of methods.
   */
  public class Organizations {

    /**
     * Creates an Apigee organization. See [Create an organization](/hybrid/precog-provision).
     *
     * Create a request for the method "organizations.create".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
     * @return the request
     */
    public Create create(com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

      private static final String REST_PATH = "v1/organizations";

      /**
       * Creates an Apigee organization. See [Create an organization](/hybrid/precog-provision).
       *
       * Create a request for the method "organizations.create".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
       * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
       * @since 1.13
       */
      protected Create(com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
      }

      @Override
      public Create set$Xgafv(java.lang.String $Xgafv) {
        return (Create) super.set$Xgafv($Xgafv);
      }

      @Override
      public Create setAccessToken(java.lang.String accessToken) {
        return (Create) super.setAccessToken(accessToken);
      }

      @Override
      public Create setAlt(java.lang.String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setCallback(java.lang.String callback) {
        return (Create) super.setCallback(callback);
      }

      @Override
      public Create setFields(java.lang.String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(java.lang.String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(java.lang.String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(java.lang.String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUploadType(java.lang.String uploadType) {
        return (Create) super.setUploadType(uploadType);
      }

      @Override
      public Create setUploadProtocol(java.lang.String uploadProtocol) {
        return (Create) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the GCP project in which to associate the Apigee organization. Pass the
       * information as a query parameter using the following structure in your request: `projects/`
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Name of the GCP project in which to associate the Apigee organization. Pass the
     information as a query parameter using the following structure in your request: `projects/`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. Name of the GCP project in which to associate the Apigee organization. Pass the
       * information as a query parameter using the following structure in your request: `projects/`
       */
      public Create setParent(java.lang.String parent) {
        this.parent = parent;
        return this;
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Gets the profile for an Apigee organization. See
     * [Organizations](/hybrid/terminology#organizations).
     *
     * Create a request for the method "organizations.get".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param name Required. Apigee organization name in the following format:
      `organizations/{org}`
     * @return the request
     */
    public Get get(java.lang.String name) throws java.io.IOException {
      Get result = new Get(name);
      initialize(result);
      return result;
    }

    public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Gets the profile for an Apigee organization. See
       * [Organizations](/hybrid/terminology#organizations).
       *
       * Create a request for the method "organizations.get".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Apigee organization name in the following format:
      `organizations/{org}`
       * @since 1.13
       */
      protected Get(java.lang.String name) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get set$Xgafv(java.lang.String $Xgafv) {
        return (Get) super.set$Xgafv($Xgafv);
      }

      @Override
      public Get setAccessToken(java.lang.String accessToken) {
        return (Get) super.setAccessToken(accessToken);
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setCallback(java.lang.String callback) {
        return (Get) super.setCallback(callback);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUploadType(java.lang.String uploadType) {
        return (Get) super.setUploadType(uploadType);
      }

      @Override
      public Get setUploadProtocol(java.lang.String uploadProtocol) {
        return (Get) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Apigee organization name in the following format: `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Apigee organization name in the following format: `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Apigee organization name in the following format: `organizations/{org}`
       */
      public Get setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Gets metrics for an organization.
     *
     * Create a request for the method "organizations.getMetrics".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetMetrics#execute()} method to invoke the remote operation.
     *
     * @param parent Required. Name of the Apigee organization. Use the following structure in
    your request:
     *        `organizations/{org}`
     * @return the request
     */
    public GetMetrics getMetrics(java.lang.String parent) throws java.io.IOException {
      GetMetrics result = new GetMetrics(parent);
      initialize(result);
      return result;
    }

    public class GetMetrics extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Metrics> {

      private static final String REST_PATH = "v1/{+parent}/metrics";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Gets metrics for an organization.
       *
       * Create a request for the method "organizations.getMetrics".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetMetrics#execute()} method to invoke the remote operation. <p>
       * {@link
       * GetMetrics#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in
    your request:
     *        `organizations/{org}`
       * @since 1.13
       */
      protected GetMetrics(java.lang.String parent) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Metrics.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetMetrics set$Xgafv(java.lang.String $Xgafv) {
        return (GetMetrics) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetMetrics setAccessToken(java.lang.String accessToken) {
        return (GetMetrics) super.setAccessToken(accessToken);
      }

      @Override
      public GetMetrics setAlt(java.lang.String alt) {
        return (GetMetrics) super.setAlt(alt);
      }

      @Override
      public GetMetrics setCallback(java.lang.String callback) {
        return (GetMetrics) super.setCallback(callback);
      }

      @Override
      public GetMetrics setFields(java.lang.String fields) {
        return (GetMetrics) super.setFields(fields);
      }

      @Override
      public GetMetrics setKey(java.lang.String key) {
        return (GetMetrics) super.setKey(key);
      }

      @Override
      public GetMetrics setOauthToken(java.lang.String oauthToken) {
        return (GetMetrics) super.setOauthToken(oauthToken);
      }

      @Override
      public GetMetrics setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetMetrics) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetMetrics setQuotaUser(java.lang.String quotaUser) {
        return (GetMetrics) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetMetrics setUploadType(java.lang.String uploadType) {
        return (GetMetrics) super.setUploadType(uploadType);
      }

      @Override
      public GetMetrics setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetMetrics) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Name of the Apigee organization. Use the following structure in your request:
     `organizations/{org}`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      public GetMetrics setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public GetMetrics set(String parameterName, Object value) {
        return (GetMetrics) super.set(parameterName, value);
      }
    }
    /**
     * Lists details for all portals.
     *
     * Create a request for the method "organizations.getSites".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetSites#execute()} method to invoke the remote operation.
     *
     * @param parent Required. Name of the Apigee organization. Use the following structure in your
    request:
     *        `organizations/{org}`
     * @return the request
     */
    public GetSites getSites(java.lang.String parent) throws java.io.IOException {
      GetSites result = new GetSites(parent);
      initialize(result);
      return result;
    }

    public class GetSites extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteListResponse> {

      private static final String REST_PATH = "v1/{+parent}/sites";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Lists details for all portals.
       *
       * Create a request for the method "organizations.getSites".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetSites#execute()} method to invoke the remote operation. <p>
       * {@link
       * GetSites#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in your
    request:
     *        `organizations/{org}`
       * @since 1.13
       */
      protected GetSites(java.lang.String parent) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteListResponse.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetSites set$Xgafv(java.lang.String $Xgafv) {
        return (GetSites) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetSites setAccessToken(java.lang.String accessToken) {
        return (GetSites) super.setAccessToken(accessToken);
      }

      @Override
      public GetSites setAlt(java.lang.String alt) {
        return (GetSites) super.setAlt(alt);
      }

      @Override
      public GetSites setCallback(java.lang.String callback) {
        return (GetSites) super.setCallback(callback);
      }

      @Override
      public GetSites setFields(java.lang.String fields) {
        return (GetSites) super.setFields(fields);
      }

      @Override
      public GetSites setKey(java.lang.String key) {
        return (GetSites) super.setKey(key);
      }

      @Override
      public GetSites setOauthToken(java.lang.String oauthToken) {
        return (GetSites) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSites setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSites) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSites setQuotaUser(java.lang.String quotaUser) {
        return (GetSites) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSites setUploadType(java.lang.String uploadType) {
        return (GetSites) super.setUploadType(uploadType);
      }

      @Override
      public GetSites setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetSites) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Name of the Apigee organization. Use the following structure in your request:
     `organizations/{org}`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      public GetSites setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String domain;

      /**

       */
      public java.lang.String getDomain() {
        return domain;
      }

      public GetSites setDomain(java.lang.String domain) {
        this.domain = domain;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String zmsId;

      /**

       */
      public java.lang.String getZmsId() {
        return zmsId;
      }

      public GetSites setZmsId(java.lang.String zmsId) {
        this.zmsId = zmsId;
        return this;
      }

      @Override
      public GetSites set(String parameterName, Object value) {
        return (GetSites) super.set(parameterName, value);
      }
    }
    /**
     * Lists the service accounts with the permissions required to allow the Synchronizer to download
     * environment data from the control plane.
     *
     * An ETag is returned in the response to `getSyncAuthorization`. Pass that ETag when calling
     * [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct version.
     * If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization
     * is overwritten indiscriminately.
     *
     * For more information, see [Enable Synchronizer access](/hybrid/install-sa-keys).
     *
     * Create a request for the method "organizations.getSyncAuthorization".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetSyncAuthorization#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. Name of the Apigee organization. Use the following structure in your
    request:
     *        `organizations/{org}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest}
     * @return the request
     */
    public GetSyncAuthorization getSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest content) throws java.io.IOException {
      GetSyncAuthorization result = new GetSyncAuthorization(name, content);
      initialize(result);
      return result;
    }

    public class GetSyncAuthorization extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization> {

      private static final String REST_PATH = "v1/{+name}:getSyncAuthorization";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Lists the service accounts with the permissions required to allow the Synchronizer to download
       * environment data from the control plane.
       *
       * An ETag is returned in the response to `getSyncAuthorization`. Pass that ETag when calling
       * [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct
       * version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing
       * authorization is overwritten indiscriminately.
       *
       * For more information, see [Enable Synchronizer access](/hybrid/install-sa-keys).
       *
       * Create a request for the method "organizations.getSyncAuthorization".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetSyncAuthorization#execute()} method to invoke the remote
       * operation. <p> {@link GetSyncAuthorization#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Name of the Apigee organization. Use the following structure in your
    request:
     *        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest}
       * @since 1.13
       */
      protected GetSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetSyncAuthorizationRequest content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public GetSyncAuthorization set$Xgafv(java.lang.String $Xgafv) {
        return (GetSyncAuthorization) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetSyncAuthorization setAccessToken(java.lang.String accessToken) {
        return (GetSyncAuthorization) super.setAccessToken(accessToken);
      }

      @Override
      public GetSyncAuthorization setAlt(java.lang.String alt) {
        return (GetSyncAuthorization) super.setAlt(alt);
      }

      @Override
      public GetSyncAuthorization setCallback(java.lang.String callback) {
        return (GetSyncAuthorization) super.setCallback(callback);
      }

      @Override
      public GetSyncAuthorization setFields(java.lang.String fields) {
        return (GetSyncAuthorization) super.setFields(fields);
      }

      @Override
      public GetSyncAuthorization setKey(java.lang.String key) {
        return (GetSyncAuthorization) super.setKey(key);
      }

      @Override
      public GetSyncAuthorization setOauthToken(java.lang.String oauthToken) {
        return (GetSyncAuthorization) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSyncAuthorization setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSyncAuthorization) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSyncAuthorization setQuotaUser(java.lang.String quotaUser) {
        return (GetSyncAuthorization) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSyncAuthorization setUploadType(java.lang.String uploadType) {
        return (GetSyncAuthorization) super.setUploadType(uploadType);
      }

      @Override
      public GetSyncAuthorization setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetSyncAuthorization) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Name of the Apigee organization. Use the following structure in your request:
     `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      public GetSyncAuthorization setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public GetSyncAuthorization set(String parameterName, Object value) {
        return (GetSyncAuthorization) super.set(parameterName, value);
      }
    }
    /**
     * Gets the current state of the portal application.
     *
     * Create a request for the method "organizations.getSystem".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link GetSystem#execute()} method to invoke the remote operation.
     *
     * @param parent Required. Name of the Apigee organization. Use the following structure in
    your request:
     *        `organizations/{org}`
     * @return the request
     */
    public GetSystem getSystem(java.lang.String parent) throws java.io.IOException {
      GetSystem result = new GetSystem(parent);
      initialize(result);
      return result;
    }

    public class GetSystem extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SystemState> {

      private static final String REST_PATH = "v1/{+parent}/system";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Gets the current state of the portal application.
       *
       * Create a request for the method "organizations.getSystem".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link GetSystem#execute()} method to invoke the remote operation. <p>
       * {@link
       * GetSystem#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in
    your request:
     *        `organizations/{org}`
       * @since 1.13
       */
      protected GetSystem(java.lang.String parent) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SystemState.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetSystem set$Xgafv(java.lang.String $Xgafv) {
        return (GetSystem) super.set$Xgafv($Xgafv);
      }

      @Override
      public GetSystem setAccessToken(java.lang.String accessToken) {
        return (GetSystem) super.setAccessToken(accessToken);
      }

      @Override
      public GetSystem setAlt(java.lang.String alt) {
        return (GetSystem) super.setAlt(alt);
      }

      @Override
      public GetSystem setCallback(java.lang.String callback) {
        return (GetSystem) super.setCallback(callback);
      }

      @Override
      public GetSystem setFields(java.lang.String fields) {
        return (GetSystem) super.setFields(fields);
      }

      @Override
      public GetSystem setKey(java.lang.String key) {
        return (GetSystem) super.setKey(key);
      }

      @Override
      public GetSystem setOauthToken(java.lang.String oauthToken) {
        return (GetSystem) super.setOauthToken(oauthToken);
      }

      @Override
      public GetSystem setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetSystem) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetSystem setQuotaUser(java.lang.String quotaUser) {
        return (GetSystem) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetSystem setUploadType(java.lang.String uploadType) {
        return (GetSystem) super.setUploadType(uploadType);
      }

      @Override
      public GetSystem setUploadProtocol(java.lang.String uploadProtocol) {
        return (GetSystem) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Name of the Apigee organization. Use the following structure in your request:
     `organizations/{org}`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      public GetSystem setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public GetSystem set(String parameterName, Object value) {
        return (GetSystem) super.set(parameterName, value);
      }
    }
    /**
     * Lists the Apigee organizations and associated GCP projects that you have permission to access.
     * See [Organizations](/hybrid/terminology#organizations).
     *
     * Create a request for the method "organizations.list".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param parent Required. Apigee organization name in the following format:
      `organizations/{org}`
     * @return the request
     */
    public List list(java.lang.String parent) throws java.io.IOException {
      List result = new List(parent);
      initialize(result);
      return result;
    }

    public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOrganizationsResponse> {

      private static final String REST_PATH = "v1/{+parent}";

      private final java.util.regex.Pattern PARENT_PATTERN =
          java.util.regex.Pattern.compile("^organizations$");

      /**
       * Lists the Apigee organizations and associated GCP projects that you have permission to access.
       * See [Organizations](/hybrid/terminology#organizations).
       *
       * Create a request for the method "organizations.list".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param parent Required. Apigee organization name in the following format:
      `organizations/{org}`
       * @since 1.13
       */
      protected List(java.lang.String parent) {
        super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOrganizationsResponse.class);
        this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations$");
        }
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List set$Xgafv(java.lang.String $Xgafv) {
        return (List) super.set$Xgafv($Xgafv);
      }

      @Override
      public List setAccessToken(java.lang.String accessToken) {
        return (List) super.setAccessToken(accessToken);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setCallback(java.lang.String callback) {
        return (List) super.setCallback(callback);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUploadType(java.lang.String uploadType) {
        return (List) super.setUploadType(uploadType);
      }

      @Override
      public List setUploadProtocol(java.lang.String uploadProtocol) {
        return (List) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Apigee organization name in the following format: `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String parent;

      /** Required. Apigee organization name in the following format: `organizations/{org}`
       */
      public java.lang.String getParent() {
        return parent;
      }

      /**
       * Required. Apigee organization name in the following format: `organizations/{org}`
       */
      public List setParent(java.lang.String parent) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
              "Parameter parent must conform to the pattern " +
              "^organizations$");
        }
        this.parent = parent;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Sets the permissions required to allow the Synchronizer to download environment data from the
     * control plane. You must call this API to enable proper functioning of hybrid.
     *
     * Pass the ETag when calling `setSyncAuthorization` to ensure that you are updating the correct
     * version. To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass the
     * ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten
     * indiscriminately.
     *
     * For more information, see [Enable Synchronizer access](/hybrid/install-sa-keys).
     *
     * Create a request for the method "organizations.setSyncAuthorization".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link SetSyncAuthorization#execute()} method to invoke the remote
     * operation.
     *
     * @param name Required. Name of the Apigee organization. Use the following structure in your
    request:
     *        `organizations/{org}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization}
     * @return the request
     */
    public SetSyncAuthorization setSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization content) throws java.io.IOException {
      SetSyncAuthorization result = new SetSyncAuthorization(name, content);
      initialize(result);
      return result;
    }

    public class SetSyncAuthorization extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization> {

      private static final String REST_PATH = "v1/{+name}:setSyncAuthorization";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Sets the permissions required to allow the Synchronizer to download environment data from the
       * control plane. You must call this API to enable proper functioning of hybrid.
       *
       * Pass the ETag when calling `setSyncAuthorization` to ensure that you are updating the correct
       * version. To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass
       * the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten
       * indiscriminately.
       *
       * For more information, see [Enable Synchronizer access](/hybrid/install-sa-keys).
       *
       * Create a request for the method "organizations.setSyncAuthorization".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link SetSyncAuthorization#execute()} method to invoke the remote
       * operation. <p> {@link SetSyncAuthorization#initialize(com.google.api.client.googleapis.services
       * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param name Required. Name of the Apigee organization. Use the following structure in your
    request:
     *        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization}
       * @since 1.13
       */
      protected SetSyncAuthorization(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization content) {
        super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SyncAuthorization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public SetSyncAuthorization set$Xgafv(java.lang.String $Xgafv) {
        return (SetSyncAuthorization) super.set$Xgafv($Xgafv);
      }

      @Override
      public SetSyncAuthorization setAccessToken(java.lang.String accessToken) {
        return (SetSyncAuthorization) super.setAccessToken(accessToken);
      }

      @Override
      public SetSyncAuthorization setAlt(java.lang.String alt) {
        return (SetSyncAuthorization) super.setAlt(alt);
      }

      @Override
      public SetSyncAuthorization setCallback(java.lang.String callback) {
        return (SetSyncAuthorization) super.setCallback(callback);
      }

      @Override
      public SetSyncAuthorization setFields(java.lang.String fields) {
        return (SetSyncAuthorization) super.setFields(fields);
      }

      @Override
      public SetSyncAuthorization setKey(java.lang.String key) {
        return (SetSyncAuthorization) super.setKey(key);
      }

      @Override
      public SetSyncAuthorization setOauthToken(java.lang.String oauthToken) {
        return (SetSyncAuthorization) super.setOauthToken(oauthToken);
      }

      @Override
      public SetSyncAuthorization setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (SetSyncAuthorization) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public SetSyncAuthorization setQuotaUser(java.lang.String quotaUser) {
        return (SetSyncAuthorization) super.setQuotaUser(quotaUser);
      }

      @Override
      public SetSyncAuthorization setUploadType(java.lang.String uploadType) {
        return (SetSyncAuthorization) super.setUploadType(uploadType);
      }

      @Override
      public SetSyncAuthorization setUploadProtocol(java.lang.String uploadProtocol) {
        return (SetSyncAuthorization) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Name of the Apigee organization. Use the following structure in your request:
     `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Name of the Apigee organization. Use the following structure in your request:
       * `organizations/{org}`
       */
      public SetSyncAuthorization setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public SetSyncAuthorization set(String parameterName, Object value) {
        return (SetSyncAuthorization) super.set(parameterName, value);
      }
    }
    /**
     * Updates the properties for an Apigee organization. No other fields in the organization profile
     * will be updated.
     *
     * Create a request for the method "organizations.update".
     *
     * This request holds the parameters needed by the apigee server.  After setting any optional
     * parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param name Required. Apigee organization name in the following format:
      `organizations/{org}`
     * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
     * @return the request
     */
    public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) throws java.io.IOException {
      Update result = new Update(name, content);
      initialize(result);
      return result;
    }

    public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization> {

      private static final String REST_PATH = "v1/{+name}";

      private final java.util.regex.Pattern NAME_PATTERN =
          java.util.regex.Pattern.compile("^organizations/[^/]+$");

      /**
       * Updates the properties for an Apigee organization. No other fields in the organization profile
       * will be updated.
       *
       * Create a request for the method "organizations.update".
       *
       * This request holds the parameters needed by the the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param name Required. Apigee organization name in the following format:
      `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization}
       * @since 1.13
       */
      protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization content) {
        super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Organization.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
      }

      @Override
      public Update set$Xgafv(java.lang.String $Xgafv) {
        return (Update) super.set$Xgafv($Xgafv);
      }

      @Override
      public Update setAccessToken(java.lang.String accessToken) {
        return (Update) super.setAccessToken(accessToken);
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setCallback(java.lang.String callback) {
        return (Update) super.setCallback(callback);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUploadType(java.lang.String uploadType) {
        return (Update) super.setUploadType(uploadType);
      }

      @Override
      public Update setUploadProtocol(java.lang.String uploadProtocol) {
        return (Update) super.setUploadProtocol(uploadProtocol);
      }

      /**
       * Required. Apigee organization name in the following format: `organizations/{org}`
       */
      @com.google.api.client.util.Key
      private java.lang.String name;

      /** Required. Apigee organization name in the following format: `organizations/{org}`
       */
      public java.lang.String getName() {
        return name;
      }

      /**
       * Required. Apigee organization name in the following format: `organizations/{org}`
       */
      public Update setName(java.lang.String name) {
        if (!getSuppressPatternChecks()) {
          com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
              "Parameter name must conform to the pattern " +
              "^organizations/[^/]+$");
        }
        this.name = name;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

    /**
     * An accessor for creating requests from the Apiproducts collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Apiproducts.List request = apigee.apiproducts().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apiproducts apiproducts() {
      return new Apiproducts();
    }

    /**
     * The "apiproducts" collection of methods.
     */
    public class Apiproducts {

      /**
       * Updates or creates API product attributes. This API **replaces** the current list of attributes
       * with the attributes specified in the request body. In this way, you can update existing
       * attributes, add new attributes, or delete existing attributes by omitting them from the request
       * body.
       *
       * OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API
       * products) are cached for 180 seconds (current default). Any custom attributes associated with
       * entities also get cached for at least 180 seconds after entity is accessed during runtime. In
       * this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token
       * in less than 180 seconds.
       *
       * Create a request for the method "apiproducts.attributes".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Attributes#execute()} method to invoke the remote operation.
       *
       * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
       * @return the request
       */
      public Attributes attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) throws java.io.IOException {
        Attributes result = new Attributes(name, content);
        initialize(result);
        return result;
      }

      public class Attributes extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

        private static final String REST_PATH = "v1/{+name}/attributes";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Updates or creates API product attributes. This API **replaces** the current list of attributes
         * with the attributes specified in the request body. In this way, you can update existing
         * attributes, add new attributes, or delete existing attributes by omitting them from the request
         * body.
         *
         * OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API
         * products) are cached for 180 seconds (current default). Any custom attributes associated with
         * entities also get cached for at least 180 seconds after entity is accessed during runtime. In
         * this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access
         * token in less than 180 seconds.
         *
         * Create a request for the method "apiproducts.attributes".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Attributes#execute()} method to invoke the remote operation. <p>
         * {@link
         * Attributes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
         * @since 1.13
         */
        protected Attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public Attributes set$Xgafv(java.lang.String $Xgafv) {
          return (Attributes) super.set$Xgafv($Xgafv);
        }

        @Override
        public Attributes setAccessToken(java.lang.String accessToken) {
          return (Attributes) super.setAccessToken(accessToken);
        }

        @Override
        public Attributes setAlt(java.lang.String alt) {
          return (Attributes) super.setAlt(alt);
        }

        @Override
        public Attributes setCallback(java.lang.String callback) {
          return (Attributes) super.setCallback(callback);
        }

        @Override
        public Attributes setFields(java.lang.String fields) {
          return (Attributes) super.setFields(fields);
        }

        @Override
        public Attributes setKey(java.lang.String key) {
          return (Attributes) super.setKey(key);
        }

        @Override
        public Attributes setOauthToken(java.lang.String oauthToken) {
          return (Attributes) super.setOauthToken(oauthToken);
        }

        @Override
        public Attributes setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Attributes) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Attributes setQuotaUser(java.lang.String quotaUser) {
          return (Attributes) super.setQuotaUser(quotaUser);
        }

        @Override
        public Attributes setUploadType(java.lang.String uploadType) {
          return (Attributes) super.setUploadType(uploadType);
        }

        @Override
        public Attributes setUploadProtocol(java.lang.String uploadProtocol) {
          return (Attributes) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /**** Required.** API product name in the following form:
      ** organizations/organization_ID/apiproducts/api_product_name
      **

         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        public Attributes setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Attributes set(String parameterName, Object value) {
          return (Attributes) super.set(parameterName, value);
        }
      }
      /**
       * Creates an API product in an organization. You create API products after you have proxied backend
       * services using API proxies. An API product is a collection of API resources combined with quota
       * settings and metadata that you can use to deliver customized and productized API bundles to your
       * developer community. This metadata can include:
       *
       * - Scope - Environments - API proxies - Extensible profile
       *
       * API products enable you repackage APIs on-the-fly, without having to do any additional coding or
       * configuration. Apigee recommends that you start with a simple API product including only required
       * elements. You then provision credentials to apps to enable them to start testing your APIs.
       *
       * After you have authentication and authorization working against a simple API product, you can
       * iterate to create finer grained API products, defining different sets of API resources for each
       * API product.
       *
       * WARNING:
       *
       * - If you don't specify an API proxy in the request body, any app associated with the product can
       * make calls to any API in your entire organization. - If you don't specify an environment in the
       * request body, the product allows access to all environments.
       *
       * For more information, see {{what_api_product}}
       *
       * Create a request for the method "apiproducts.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the API product will
      be created. Must be in the
       *        following form:
      organizations/organization_ID
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+parent}/apiproducts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an API product in an organization. You create API products after you have proxied
         * backend services using API proxies. An API product is a collection of API resources combined
         * with quota settings and metadata that you can use to deliver customized and productized API
         * bundles to your developer community. This metadata can include:
         *
         * - Scope - Environments - API proxies - Extensible profile
         *
         * API products enable you repackage APIs on-the-fly, without having to do any additional coding
         * or configuration. Apigee recommends that you start with a simple API product including only
         * required elements. You then provision credentials to apps to enable them to start testing your
         * APIs.
         *
         * After you have authentication and authorization working against a simple API product, you can
         * iterate to create finer grained API products, defining different sets of API resources for each
         * API product.
         *
         * WARNING:
         *
         * - If you don't specify an API proxy in the request body, any app associated with the product
         * can make calls to any API in your entire organization. - If you don't specify an environment in
         * the request body, the product allows access to all environments.
         *
         * For more information, see {{what_api_product}}
         *
         * Create a request for the method "apiproducts.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the API product will
      be created. Must be in the
       *        following form:
      organizations/organization_ID
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the API product will be created. Must
         * be in the following form: organizations/organization_ID
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the API product will be created. Must be in the
       following form: organizations/organization_ID
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the API product will be created. Must
         * be in the following form: organizations/organization_ID
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an API product from an organization.
       *
       * Deleting an API product causes app requests to the resource URIs defined in the API product to
       * fail.
       *
       * Ensure that you create a new API product to serve existing apps, unless your intention is to
       * disable access to the resources defined in the API product.
       *
       * The API product name required in the request URL is the internal name of the product, not the
       * display name. While they may be the same, it depends on whether the API product was created via
       * the UI or the API. View the list of API products to verify the internal name.
       *
       * Create a request for the method "apiproducts.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Deletes an API product from an organization.
         *
         * Deleting an API product causes app requests to the resource URIs defined in the API product to
         * fail.
         *
         * Ensure that you create a new API product to serve existing apps, unless your intention is to
         * disable access to the resources defined in the API product.
         *
         * The API product name required in the request URL is the internal name of the product, not the
         * display name. While they may be the same, it depends on whether the API product was created via
         * the UI or the API. View the list of API products to verify the internal name.
         *
         * Create a request for the method "apiproducts.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. API product name in the following form:
       organizations/organization_ID/apiproducts/api_product_name
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets configuration details for an API product.
       *
       * The API product name required in the request URL is the internal name of the product, not the
       * display name. While they may be the same, it depends on whether the API product was created via
       * the UI or the API. View the list of API products to verify the internal name.
       *
       * Create a request for the method "apiproducts.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Gets configuration details for an API product.
         *
         * The API product name required in the request URL is the internal name of the product, not the
         * display name. While they may be the same, it depends on whether the API product was created via
         * the UI or the API. View the list of API products to verify the internal name.
         *
         * Create a request for the method "apiproducts.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /**** Required.** API product name in the following form:
      ** organizations/organization_ID/apiproducts/api_product_name
      **

         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all API product names for an organization. Filter the list by passing an `attributename`
       * and `attibutevalue`.
       *
       * The limit on the number of API products returned by the API is 1000. You can paginate the list of
       * API products returned using the `startKey` and `count` query parameters.
       *
       * Create a request for the method "apiproducts.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent **Required.** The parent organization name in the following form:
      organizations/organization_ID
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProductsResponse> {

        private static final String REST_PATH = "v1/{+parent}/apiproducts";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all API product names for an organization. Filter the list by passing an `attributename`
         * and `attibutevalue`.
         *
         * The limit on the number of API products returned by the API is 1000. You can paginate the list
         * of API products returned using the `startKey` and `count` query parameters.
         *
         * Create a request for the method "apiproducts.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent **Required.** The parent organization name in the following form:
      organizations/organization_ID
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProductsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * **Required.** The parent organization name in the following form:
         * organizations/organization_ID
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /**** Required.** The parent organization name in the following form: organizations/organization_ID
      **

         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * **Required.** The parent organization name in the following form:
         * organizations/organization_ID
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** The name of the attribute to search. */
        @com.google.api.client.util.Key
        private java.lang.String attributename;

        /** The name of the attribute to search.
         */
        public java.lang.String getAttributename() {
          return attributename;
        }

        /** The name of the attribute to search. */
        public List setAttributename(java.lang.String attributename) {
          this.attributename = attributename;
          return this;
        }

        /** The value of the attribute. */
        @com.google.api.client.util.Key
        private java.lang.String attributevalue;

        /** The value of the attribute.
         */
        public java.lang.String getAttributevalue() {
          return attributevalue;
        }

        /** The value of the attribute. */
        public List setAttributevalue(java.lang.String attributevalue) {
          this.attributevalue = attributevalue;
          return this;
        }

        /**
         * Enter the number of API products you want returned in the API call. The limit is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Long count;

        /** Enter the number of API products you want returned in the API call. The limit is 1000.
         */
        public java.lang.Long getCount() {
          return count;
        }

        /**
         * Enter the number of API products you want returned in the API call. The limit is 1000.
         */
        public List setCount(java.lang.Long count) {
          this.count = count;
          return this;
        }

        /** Set to `true` to get expanded details about each API. */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Set to `true` to get expanded details about each API.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /** Set to `true` to get expanded details about each API. */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /**
         * Gets a list of API products starting with a specific API product in the list. For
         * example, if you're returning 50 API products at a time (using the `count` query
         * parameter), you can view products 50-99 by entering the name of the 50th API product in
         * the first API (without using `startKey`). Product name is case sensitive.
         */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /** Gets a list of API products starting with a specific API product in the list. For example, if
       you're returning 50 API products at a time (using the `count` query parameter), you can view
       products 50-99 by entering the name of the 50th API product in the first API (without using
       `startKey`). Product name is case sensitive.
         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /**
         * Gets a list of API products starting with a specific API product in the list. For
         * example, if you're returning 50 API products at a time (using the `count` query
         * parameter), you can view products 50-99 by entering the name of the 50th API product in
         * the first API (without using `startKey`). Product name is case sensitive.
         */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing API product. You must include all required values, whether or not you are
       * updating them, as well as any optional values that you are updating.
       *
       * The API product name required in the request URL is the internal name of the product, not the
       * Display Name. While they may be the same, it depends on whether the API product was created via
       * UI or API. View the list of API products to identify their internal names.
       *
       * Create a request for the method "apiproducts.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

        /**
         * Updates an existing API product. You must include all required values, whether or not you are
         * updating them, as well as any optional values that you are updating.
         *
         * The API product name required in the request URL is the internal name of the product, not the
         * Display Name. While they may be the same, it depends on whether the API product was created via
         * UI or API. View the list of API products to identify their internal names.
         *
         * Create a request for the method "apiproducts.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name **Required.** API product name in the following form:
       *        organizations/organization_ID/apiproducts/api_product_name
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProduct.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /**** Required.** API product name in the following form:
      ** organizations/organization_ID/apiproducts/api_product_name
      **

         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * **Required.** API product name in the following form:
         * organizations/organization_ID/apiproducts/api_product_name
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apiproducts/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Attributes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Attributes.List request = apigee.attributes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Attributes attributes() {
        return new Attributes();
      }

      /**
       * The "attributes" collection of methods.
       */
      public class Attributes {

        /**
         * Deletes an API product attribute.
         *
         * Create a request for the method "attributes.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");

          /**
           * Deletes an API product attribute.
           *
           * Create a request for the method "attributes.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /**** Required.** API product name in the following form:
        ** organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
        **

           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns the value of an API product attribute.
         *
         * Create a request for the method "attributes.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");

          /**
           * Returns the value of an API product attribute.
           *
           * Create a request for the method "attributes.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /**** Required.** API product name in the following form:
        ** organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
        **

           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns a list of all API product attributes.
         *
         * Create a request for the method "attributes.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization name. Must be in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

          private static final String REST_PATH = "v1/{+parent}/attributes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+$");

          /**
           * Returns a list of all API product attributes.
           *
           * Create a request for the method "attributes.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization name. Must be in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent organization name. Must be in the following form:
           * organizations/organization_ID/apiproducts/api_product_name
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization name. Must be in the following form:
         organizations/organization_ID/apiproducts/api_product_name
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent organization name. Must be in the following form:
           * organizations/organization_ID/apiproducts/api_product_name
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the value of an API product attribute. Limitations are:
         *
         * OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API
         * products) are cached for 180 seconds (current default). Any custom attributes associated with
         * entities also get cached for at least 180 seconds after entity is accessed during runtime. In
         * this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token
         * in less than 180 seconds.
         *
         * Create a request for the method "attributes.updateApiProductAttribute".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateApiProductAttribute#execute()} method to invoke the remote
         * operation.
         *
         * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
         * @return the request
         */
        public UpdateApiProductAttribute updateApiProductAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) throws java.io.IOException {
          UpdateApiProductAttribute result = new UpdateApiProductAttribute(name, content);
          initialize(result);
          return result;
        }

        public class UpdateApiProductAttribute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");

          /**
           * Updates the value of an API product attribute. Limitations are:
           *
           * OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API
           * products) are cached for 180 seconds (current default). Any custom attributes associated with
           * entities also get cached for at least 180 seconds after entity is accessed during runtime. In
           * this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access
           * token in less than 180 seconds.
           *
           * Create a request for the method "attributes.updateApiProductAttribute".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateApiProductAttribute#execute()} method to invoke the remote
           * operation. <p> {@link UpdateApiProductAttribute#initialize(com.google.api.client.googleapis.ser
           * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name **Required.** API product name in the following form:
         *        organizations/organization_ID/apiproducts/api_product_name
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
           * @since 1.13
           */
          protected UpdateApiProductAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public UpdateApiProductAttribute set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateApiProductAttribute) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateApiProductAttribute setAccessToken(java.lang.String accessToken) {
            return (UpdateApiProductAttribute) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateApiProductAttribute setAlt(java.lang.String alt) {
            return (UpdateApiProductAttribute) super.setAlt(alt);
          }

          @Override
          public UpdateApiProductAttribute setCallback(java.lang.String callback) {
            return (UpdateApiProductAttribute) super.setCallback(callback);
          }

          @Override
          public UpdateApiProductAttribute setFields(java.lang.String fields) {
            return (UpdateApiProductAttribute) super.setFields(fields);
          }

          @Override
          public UpdateApiProductAttribute setKey(java.lang.String key) {
            return (UpdateApiProductAttribute) super.setKey(key);
          }

          @Override
          public UpdateApiProductAttribute setOauthToken(java.lang.String oauthToken) {
            return (UpdateApiProductAttribute) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateApiProductAttribute setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateApiProductAttribute) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateApiProductAttribute setQuotaUser(java.lang.String quotaUser) {
            return (UpdateApiProductAttribute) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateApiProductAttribute setUploadType(java.lang.String uploadType) {
            return (UpdateApiProductAttribute) super.setUploadType(uploadType);
          }

          @Override
          public UpdateApiProductAttribute setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateApiProductAttribute) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /**** Required.** API product name in the following form:
        ** organizations/organization_ID/apiproducts/api_product_name
        **

           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * **Required.** API product name in the following form:
           * organizations/organization_ID/apiproducts/api_product_name
           */
          public UpdateApiProductAttribute setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public UpdateApiProductAttribute set(String parameterName, Object value) {
            return (UpdateApiProductAttribute) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Apis collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Apis.List request = apigee.apis().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apis apis() {
      return new Apis();
    }

    /**
     * The "apis" collection of methods.
     */
    public class Apis {

      /**
       * Creates an API proxy. The API proxy created will not be accessible at runtime until it is
       * deployed to an environment.
       *
       * Create a new API proxy by setting the `name` query parameter to the name of the API proxy.
       *
       * Import an API proxy configuration bundle stored in zip format on your local machine to your
       * organization by doing the following:
       *
       * * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter
       * to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name
       * of API proxy   configuration bundle stored in zip format on your local machine using   the `file`
       * form field.
       *
       * **Note**: To validate the API proxy configuration bundle only   without importing it, set the
       * `action` query   parameter to `validate`.
       *
       * When importing an API proxy configuration bundle, if the API proxy does not exist, it will be
       * created. If the API proxy exists, then a new revision is created. Invalid API proxy
       * configurations are rejected, and a list of validation errors is returned to the client.
       *
       * Create a request for the method "apis.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in the following format:
        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision> {

        private static final String REST_PATH = "v1/{+parent}/apis";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an API proxy. The API proxy created will not be accessible at runtime until it is
         * deployed to an environment.
         *
         * Create a new API proxy by setting the `name` query parameter to the name of the API proxy.
         *
         * Import an API proxy configuration bundle stored in zip format on your local machine to your
         * organization by doing the following:
         *
         * * Set the `name` query parameter to the name of the API proxy. * Set the `action` query
         * parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a
         * file the name of API proxy   configuration bundle stored in zip format on your local machine
         * using   the `file` form field.
         *
         * **Note**: To validate the API proxy configuration bundle only   without importing it, set the
         * `action` query   parameter to `validate`.
         *
         * When importing an API proxy configuration bundle, if the API proxy does not exist, it will be
         * created. If the API proxy exists, then a new revision is created. Invalid API proxy
         * configurations are rejected, and a list of validation errors is returned to the client.
         *
         * Create a request for the method "apis.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in the following format:
        `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in the following format: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in the following format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in the following format: `organizations/{org}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Action to perform when importing an API proxy configuration bundle. Set this parameter to
         * one of the following values:
         *
         * * `import` to import the API proxy configuration bundle. * `validate` to validate the API
         * proxy configuration bundle without importing it.
         */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Action to perform when importing an API proxy configuration bundle. Set this parameter to one of
       the following values:

       * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy
       configuration bundle without importing it.
         */
        public java.lang.String getAction() {
          return action;
        }

        /**
         * Action to perform when importing an API proxy configuration bundle. Set this parameter to
         * one of the following values:
         *
         * * `import` to import the API proxy configuration bundle. * `validate` to validate the API
         * proxy configuration bundle without importing it.
         */
        public Create setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        /** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._- */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-
         */
        public java.lang.String getName() {
          return name;
        }

        /** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._- */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        /**
         * Ignored. All uploads are validated regardless of the value of this field. Maintained for
         * compatibility with Apigee Edge API.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean validate;

        /** Ignored. All uploads are validated regardless of the value of this field. Maintained for
       compatibility with Apigee Edge API.
         */
        public java.lang.Boolean getValidate() {
          return validate;
        }

        /**
         * Ignored. All uploads are validated regardless of the value of this field. Maintained for
         * compatibility with Apigee Edge API.
         */
        public Create setValidate(java.lang.Boolean validate) {
          this.validate = validate;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API
       * proxy must be undeployed before you can delete it.
       *
       * Create a request for the method "apis.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API proxy in the following format:
        `organizations/{org}/apis/{api}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

        /**
         * Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API
         * proxy must be undeployed before you can delete it.
         *
         * Create a request for the method "apis.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the API proxy in the following format:
        `organizations/{org}/apis/{api}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets an API proxy including a list of existing revisions.
       *
       * Create a request for the method "apis.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the API proxy in the following format:
        `organizations/{org}/apis/{api}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

        /**
         * Gets an API proxy including a list of existing revisions.
         *
         * Create a request for the method "apis.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the API proxy in the following format:
        `organizations/{org}/apis/{api}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxy.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apis/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the names of all API proxies in an organization. The names returned correspond to the names
       * defined in the configuration files for each API proxy.
       *
       * Create a request for the method "apis.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in the following format:
        `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProxiesResponse> {

        private static final String REST_PATH = "v1/{+parent}/apis";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists the names of all API proxies in an organization. The names returned correspond to the
         * names defined in the configuration files for each API proxy.
         *
         * Create a request for the method "apis.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in the following format:
        `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiProxiesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in the following format: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in the following format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in the following format: `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Flag that specifies whether to include API proxy metadata in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeMetaData;

        /** Flag that specifies whether to include API proxy metadata in the response.
         */
        public java.lang.Boolean getIncludeMetaData() {
          return includeMetaData;
        }

        /** Flag that specifies whether to include API proxy metadata in the response. */
        public List setIncludeMetaData(java.lang.Boolean includeMetaData) {
          this.includeMetaData = includeMetaData;
          return this;
        }

        /** Flag that specifies whether to include a list of revisions in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeRevisions;

        /** Flag that specifies whether to include a list of revisions in the response.
         */
        public java.lang.Boolean getIncludeRevisions() {
          return includeRevisions;
        }

        /** Flag that specifies whether to include a list of revisions in the response. */
        public List setIncludeRevisions(java.lang.Boolean includeRevisions) {
          this.includeRevisions = includeRevisions;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Lists all deployments of an API proxy.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the API proxy for which to return deployment information in the
        following format:
         *        `organizations/{org}/apis/{api}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * Lists all deployments of an API proxy.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the API proxy for which to return deployment information in the
        following format:
         *        `organizations/{org}/apis/{api}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API proxy for which to return deployment information in the
           * following format: `organizations/{org}/apis/{api}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the API proxy for which to return deployment information in the following format:
         `organizations/{org}/apis/{api}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the API proxy for which to return deployment information in the
           * following format: `organizations/{org}/apis/{api}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Keyvaluemaps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Keyvaluemaps.List request = apigee.keyvaluemaps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keyvaluemaps keyvaluemaps() {
        return new Keyvaluemaps();
      }

      /**
       * The "keyvaluemaps" collection of methods.
       */
      public class Keyvaluemaps {

        /**
         * Creates a key value map in an api proxy.
         *
         * Create a request for the method "keyvaluemaps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to create the key value map.
        Must be of the form
         *        `organizations/{organization}/apis/{api}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * Creates a key value map in an api proxy.
           *
           * Create a request for the method "keyvaluemaps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to create the key value map.
        Must be of the form
         *        `organizations/{organization}/apis/{api}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to create the key value map. Must be of
           * the form `organizations/{organization}/apis/{api}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to create the key value map. Must be of the form
         `organizations/{organization}/apis/{api}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to create the key value map. Must be of
           * the form `organizations/{organization}/apis/{api}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a key value map in an api proxy.
         *
         * Create a request for the method "keyvaluemaps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the key value map.
        Must be of the form
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");

          /**
           * Delete a key value map in an api proxy.
           *
           * Create a request for the method "keyvaluemaps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the key value map.
        Must be of the form
         *        `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the key value map. Must be of the form
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the key value map. Must be of the form
         `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the key value map. Must be of the form
           * `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * List key value maps in an api proxy.
         *
         * Create a request for the method "keyvaluemaps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to list key value maps.
        Must be of the form
         *        `organizations/{organization}/apis/{api}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Apis.Keyvaluemaps.List.> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * List key value maps in an api proxy.
           *
           * Create a request for the method "keyvaluemaps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to list key value maps.
        Must be of the form
         *        `organizations/{organization}/apis/{api}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Apis.Keyvaluemaps.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to list key value maps. Must be of the
           * form `organizations/{organization}/apis/{api}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to list key value maps. Must be of the form
         `organizations/{organization}/apis/{api}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to list key value maps. Must be of the
           * form `organizations/{organization}/apis/{api}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Revisions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Revisions revisions() {
        return new Revisions();
      }

      /**
       * The "revisions" collection of methods.
       */
      public class Revisions {

        /**
         * Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated
         * with it. The API proxy revision must be undeployed before you can delete it.
         *
         * Create a request for the method "revisions.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. API proxy revision in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

          /**
           * Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated
           * with it. The API proxy revision must be undeployed before you can delete it.
           *
           * Create a request for the method "revisions.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. API proxy revision in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. API proxy revision in the following format:
         `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an API proxy revision.
         *
         * To download the API proxy configuration bundle for the specified revision as a zip file, do the
         * following:
         *
         * Set the `format` query parameter to `bundle`. Set the `Accept` header to `application/zip`.
         *
         * If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it
         * displays to `stdout`. Then, develop the API proxy configuration locally and upload the updated
         * API proxy configuration revision, as described in
         * [updateApiProxyRevision](updateApiProxyRevision).
         *
         * Create a request for the method "revisions.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. API proxy revision in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

          /**
           * Gets an API proxy revision.
           *
           * To download the API proxy configuration bundle for the specified revision as a zip file, do the
           * following:
           *
           *  * Set the `format` query parameter to `bundle`.  * Set the `Accept` header to
           * `application/zip`.
           *
           * If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it
           * displays to `stdout`. Then, develop the API proxy configuration locally and upload the updated
           * API proxy configuration revision, as described in
           * [updateApiProxyRevision](updateApiProxyRevision).
           *
           * Create a request for the method "revisions.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. API proxy revision in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. API proxy revision in the following format:
         `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. API proxy revision in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Format used when downloading the API proxy configuration revision. Set to `bundle` to
           * download the API proxy configuration revision as a zip file.
           */
          @com.google.api.client.util.Key
          private java.lang.String format;

          /** Format used when downloading the API proxy configuration revision. Set to `bundle` to download the
         API proxy configuration revision as a zip file.
           */
          public java.lang.String getFormat() {
            return format;
          }

          /**
           * Format used when downloading the API proxy configuration revision. Set to `bundle` to
           * download the API proxy configuration revision as a zip file.
           */
          public Get setFormat(java.lang.String format) {
            this.format = format;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all revisions for an API proxy.
         *
         * Create a request for the method "revisions.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the API proxy in the following format:
          `organizations/{org}/apis/{api}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Apis.Revisions.List.> {

          private static final String REST_PATH = "v1/{+parent}/revisions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+$");

          /**
           * Lists all revisions for an API proxy.
           *
           * Create a request for the method "revisions.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the API proxy in the following format:
          `organizations/{org}/apis/{api}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Apis.Revisions.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API proxy in the following format:
           * `organizations/{org}/apis/{api}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the API proxy in the following format:
           * `organizations/{org}/apis/{api}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip
         * file from your local machine.
         *
         * You can update only API proxy revisions that have never been deployed. After deployment, an API
         * proxy revision becomes immutable, even if it is undeployed.
         *
         * Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`.
         *
         * Create a request for the method "revisions.updateApiProxyRevision".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateApiProxyRevision#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. API proxy revision to update in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public UpdateApiProxyRevision updateApiProxyRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          UpdateApiProxyRevision result = new UpdateApiProxyRevision(name, content);
          initialize(result);
          return result;
        }

        public class UpdateApiProxyRevision extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

          /**
           * Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip
           * file from your local machine.
           *
           * You can update only API proxy revisions that have never been deployed. After deployment, an API
           * proxy revision becomes immutable, even if it is undeployed.
           *
           * Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`.
           *
           * Create a request for the method "revisions.updateApiProxyRevision".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateApiProxyRevision#execute()} method to invoke the remote
           * operation. <p> {@link UpdateApiProxyRevision#initialize(com.google.api.client.googleapis.servic
           * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. API proxy revision to update in the following format:
         *        `organizations/{org}/apis/{api}/revisions/{rev}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected UpdateApiProxyRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiProxyRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public UpdateApiProxyRevision set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateApiProxyRevision) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateApiProxyRevision setAccessToken(java.lang.String accessToken) {
            return (UpdateApiProxyRevision) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateApiProxyRevision setAlt(java.lang.String alt) {
            return (UpdateApiProxyRevision) super.setAlt(alt);
          }

          @Override
          public UpdateApiProxyRevision setCallback(java.lang.String callback) {
            return (UpdateApiProxyRevision) super.setCallback(callback);
          }

          @Override
          public UpdateApiProxyRevision setFields(java.lang.String fields) {
            return (UpdateApiProxyRevision) super.setFields(fields);
          }

          @Override
          public UpdateApiProxyRevision setKey(java.lang.String key) {
            return (UpdateApiProxyRevision) super.setKey(key);
          }

          @Override
          public UpdateApiProxyRevision setOauthToken(java.lang.String oauthToken) {
            return (UpdateApiProxyRevision) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateApiProxyRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateApiProxyRevision) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateApiProxyRevision setQuotaUser(java.lang.String quotaUser) {
            return (UpdateApiProxyRevision) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateApiProxyRevision setUploadType(java.lang.String uploadType) {
            return (UpdateApiProxyRevision) super.setUploadType(uploadType);
          }

          @Override
          public UpdateApiProxyRevision setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateApiProxyRevision) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. API proxy revision to update in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. API proxy revision to update in the following format:
         `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. API proxy revision to update in the following format:
           * `organizations/{org}/apis/{api}/revisions/{rev}`
           */
          public UpdateApiProxyRevision setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. Maintained
           * for compatibility with Apigee Edge API.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validate;

          /** Ignored. All uploads are validated regardless of the value of this field. Maintained for
         compatibility with Apigee Edge API.
           */
          public java.lang.Boolean getValidate() {
            return validate;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. Maintained
           * for compatibility with Apigee Edge API.
           */
          public UpdateApiProxyRevision setValidate(java.lang.Boolean validate) {
            this.validate = validate;
            return this;
          }

          @Override
          public UpdateApiProxyRevision set(String parameterName, Object value) {
            return (UpdateApiProxyRevision) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of an API proxy revision.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the API proxy revision for which to return deployment information
          in the following
           *        format:
            `organizations/{org}/apis/{api}/revisions/{rev}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Lists all deployments of an API proxy revision.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the API proxy revision for which to return deployment information
          in the following
           *        format:
            `organizations/{org}/apis/{api}/revisions/{rev}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the API proxy revision for which to return deployment information in the
           following format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Apps collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Apps apps() {
      return new Apps();
    }

    /**
     * The "apps" collection of methods.
     */
    public class Apps {

      /**
       * Gets the app profile for the specified app ID.
       *
       * Create a request for the method "apps.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. App ID in the following format:
       `organizations/{org}/apps/{app}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1App> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/apps/[^/]+$");

        /**
         * Gets the app profile for the specified app ID.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. App ID in the following format:
       `organizations/{org}/apps/{app}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1App.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apps/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. App ID in the following format: `organizations/{org}/apps/{app}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. App ID in the following format: `organizations/{org}/apps/{app}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. App ID in the following format: `organizations/{org}/apps/{app}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/apps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists IDs of apps within an organization that have the specified app status (approved or revoked)
       * or are of the specified app type (developer or company).
       *
       * Create a request for the method "apps.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Resource path of the parent in the following format:
       `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppsResponse> {

        private static final String REST_PATH = "v1/{+parent}/apps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists IDs of apps within an organization that have the specified app status (approved or
         * revoked) or are of the specified app type (developer or company).
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Resource path of the parent in the following format:
       `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAppsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Resource path of the parent in the following format: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Resource path of the parent in the following format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Resource path of the parent in the following format: `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** API product. */
        @com.google.api.client.util.Key
        private java.lang.String apiProduct;

        /** API product.
         */
        public java.lang.String getApiProduct() {
          return apiProduct;
        }

        /** API product. */
        public List setApiProduct(java.lang.String apiProduct) {
          this.apiProduct = apiProduct;
          return this;
        }

        /**
         * Optional. Filter by the type of the app. Valid values are `company` or `developer`.
         * Defaults to `developer`.
         */
        @com.google.api.client.util.Key
        private java.lang.String apptype;

        /** Optional. Filter by the type of the app. Valid values are `company` or `developer`. Defaults to
       `developer`.
         */
        public java.lang.String getApptype() {
          return apptype;
        }

        /**
         * Optional. Filter by the type of the app. Valid values are `company` or `developer`.
         * Defaults to `developer`.
         */
        public List setApptype(java.lang.String apptype) {
          this.apptype = apptype;
          return this;
        }

        /**
         * Optional. Flag that specifies whether to return an expanded list of apps for the
         * organization. Defaults to `false`.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Optional. Flag that specifies whether to return an expanded list of apps for the organization.
       Defaults to `false`.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /**
         * Optional. Flag that specifies whether to return an expanded list of apps for the
         * organization. Defaults to `false`.
         */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /** Optional. Comma-separated list of app IDs on which to filter. */
        @com.google.api.client.util.Key
        private java.lang.String ids;

        /** Optional. Comma-separated list of app IDs on which to filter.
         */
        public java.lang.String getIds() {
          return ids;
        }

        /** Optional. Comma-separated list of app IDs on which to filter. */
        public List setIds(java.lang.String ids) {
          this.ids = ids;
          return this;
        }

        /**
         * Optional. Flag that specifies whether to include credentials in the response.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeCred;

        /** Optional. Flag that specifies whether to include credentials in the response.
         */
        public java.lang.Boolean getIncludeCred() {
          return includeCred;
        }

        /**
         * Optional. Flag that specifies whether to include credentials in the response.
         */
        public List setIncludeCred(java.lang.Boolean includeCred) {
          this.includeCred = includeCred;
          return this;
        }

        /**
         * Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults
         * to `approved`.
         */
        @com.google.api.client.util.Key
        private java.lang.String keyStatus;

        /** Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults to
       `approved`.
         */
        public java.lang.String getKeyStatus() {
          return keyStatus;
        }

        /**
         * Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults
         * to `approved`.
         */
        public List setKeyStatus(java.lang.String keyStatus) {
          this.keyStatus = keyStatus;
          return this;
        }

        /** Optional. Maximum number of app IDs to return. Defaults to 10000. */
        @com.google.api.client.util.Key
        private java.lang.Long rows;

        /** Optional. Maximum number of app IDs to return. Defaults to 10000.
         */
        public java.lang.Long getRows() {
          return rows;
        }

        /** Optional. Maximum number of app IDs to return. Defaults to 10000. */
        public List setRows(java.lang.Long rows) {
          this.rows = rows;
          return this;
        }

        /** Returns the list of apps starting from the specified app ID. */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /** Returns the list of apps starting from the specified app ID.
         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /** Returns the list of apps starting from the specified app ID. */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        /**
         * Optional. Filter by the status of the app. Valid values are `approved` or `revoked`.
         * Defaults to `approved`.
         */
        @com.google.api.client.util.Key
        private java.lang.String status;

        /** Optional. Filter by the status of the app. Valid values are `approved` or `revoked`. Defaults to
       `approved`.
         */
        public java.lang.String getStatus() {
          return status;
        }

        /**
         * Optional. Filter by the status of the app. Valid values are `approved` or `revoked`.
         * Defaults to `approved`.
         */
        public List setStatus(java.lang.String status) {
          this.status = status;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Companies collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Companies.List request = apigee.companies().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Companies companies() {
      return new Companies();
    }

    /**
     * The "companies" collection of methods.
     */
    public class Companies {

      /**
       * Creates an app for a company. Note that you must first create a profile for the company in your
       * organization before you can register apps that are associated with the company.
       *
       * Create a request for the method "companies.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Name of org that the company will be created in
      `{parent=organizations}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company> {

        private static final String REST_PATH = "v1/{+parent}/companies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an app for a company. Note that you must first create a profile for the company in your
         * organization before you can register apps that are associated with the company.
         *
         * Create a request for the method "companies.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Name of org that the company will be created in
      `{parent=organizations}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of org that the company will be created in `{parent=organizations}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Name of org that the company will be created in `{parent=organizations}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Name of org that the company will be created in `{parent=organizations}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an existing company.
       *
       * Create a request for the method "companies.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The company resource name
      `organizations/{org}/companies/{company}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

        /**
         * Deletes an existing company.
         *
         * Create a request for the method "companies.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The company resource name
      `organizations/{org}/companies/{company}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The company resource name `organizations/{org}/companies/{company}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The company resource name `organizations/{org}/companies/{company}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The company resource name `organizations/{org}/companies/{company}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * List details for a company.
       *
       * Create a request for the method "companies.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The company resource name
      `organizations/{org}/companies/{company}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

        /**
         * List details for a company.
         *
         * Create a request for the method "companies.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The company resource name
      `organizations/{org}/companies/{company}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The company resource name `organizations/{org}/companies/{company}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The company resource name `organizations/{org}/companies/{company}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * The company resource name `organizations/{org}/companies/{company}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * List all companies in an organization, and optionally returns an expanded list of companies,
       * displaying a full profile for each company in the organization.
       *
       * Create a request for the method "companies.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent The parent organization name
      `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCompaniesResponse> {

        private static final String REST_PATH = "v1/{+parent}/companies";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * List all companies in an organization, and optionally returns an expanded list of companies,
         * displaying a full profile for each company in the organization.
         *
         * Create a request for the method "companies.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent The parent organization name
      `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCompaniesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * The parent organization name `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** The parent organization name `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * The parent organization name `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Limits the list to the number you specify. The limit is 100. */
        @com.google.api.client.util.Key
        private java.lang.Long count;

        /** Limits the list to the number you specify. The limit is 100.
         */
        public java.lang.Long getCount() {
          return count;
        }

        /** Limits the list to the number you specify. The limit is 100. */
        public List setCount(java.lang.Long count) {
          this.count = count;
          return this;
        }

        /** Set expand to true to return a full profile for each company. */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Set expand to true to return a full profile for each company.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /** Set expand to true to return a full profile for each company. */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /** Optional. include developers in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeDevelopers;

        /** Optional. include developers in the response.
         */
        public java.lang.Boolean getIncludeDevelopers() {
          return includeDevelopers;
        }

        /** Optional. include developers in the response. */
        public List setIncludeDevelopers(java.lang.Boolean includeDevelopers) {
          this.includeDevelopers = includeDevelopers;
          return this;
        }

        /**
         * To filter the keys that are returned, enter the email of a developer that the list will
         * start with.
         */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /** To filter the keys that are returned, enter the email of a developer that the list will start with.
         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /**
         * To filter the keys that are returned, enter the email of a developer that the list will
         * start with.
         */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing company. Send the complete company record as a payload with any changes you
       * want to make. Note that to change the status of the Company you use Set the Status of a Company.
       * The attributes in the sample payload below apply to company configuration in monetization. For
       * non-monetized companies, you need send only displayName.
       *
       * Create a request for the method "companies.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Name of the company to be updated.
      `{name=organizations/companies}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

        /**
         * Updates an existing company. Send the complete company record as a payload with any changes you
         * want to make. Note that to change the status of the Company you use Set the Status of a
         * Company. The attributes in the sample payload below apply to company configuration in
         * monetization. For non-monetized companies, you need send only displayName.
         *
         * Create a request for the method "companies.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Name of the company to be updated.
      `{name=organizations/companies}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Company.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Name of the company to be updated. `{name=organizations/companies}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Name of the company to be updated. `{name=organizations/companies}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Name of the company to be updated. `{name=organizations/companies}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/companies/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Specify the status as active or inactive. */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Specify the status as active or inactive.
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Specify the status as active or inactive. */
        public Update setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Apps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apps apps() {
        return new Apps();
      }

      /**
       * The "apps" collection of methods.
       */
      public class Apps {

        /**
         * Creates an app for a company.
         *
         * Create a request for the method "apps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Resource path of the parent: `organizations/{org}/companies/{company_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

          /**
           * Creates an app for a company.
           *
           * Create a request for the method "apps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Resource path of the parent: `organizations/{org}/companies/{company_name}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /** Resource path of the parent: `organizations/{org}/companies/{company_name}` */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Resource path of the parent: `organizations/{org}/companies/{company_name}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /** Resource path of the parent: `organizations/{org}/companies/{company_name}` */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a company app.
         *
         * Create a request for the method "apps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name name of the app resource:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");

          /**
           * Deletes a company app.
           *
           * Create a request for the method "apps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name name of the app resource:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * name of the app resource:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** name of the app resource: `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * name of the app resource:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the profile of a specific company app.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name name of the app resource:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");

          /**
           * Gets the profile of a specific company app.
           *
           * Create a request for the method "apps.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name name of the app resource:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * name of the app resource:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** name of the app resource: `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * name of the app resource:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * List company apps in an organization. You can optionally expand the response to include the
         * profile for each app.
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent The name of a company resource:
        `organizations/{org}/companies/{company_name}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCompanyAppsResponse> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+$");

          /**
           * List company apps in an organization. You can optionally expand the response to include the
           * profile for each app.
           *
           * Create a request for the method "apps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent The name of a company resource:
        `organizations/{org}/companies/{company_name}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCompanyAppsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * The name of a company resource: `organizations/{org}/companies/{company_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** The name of a company resource: `organizations/{org}/companies/{company_name}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * The name of a company resource: `organizations/{org}/companies/{company_name}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Limits the list to the number you specify. The limit is 100. */
          @com.google.api.client.util.Key
          private java.lang.Long count;

          /** Limits the list to the number you specify. The limit is 100.
           */
          public java.lang.Long getCount() {
            return count;
          }

          /** Limits the list to the number you specify. The limit is 100. */
          public List setCount(java.lang.Long count) {
            this.count = count;
            return this;
          }

          /** Set expand to true to return a full profile */
          @com.google.api.client.util.Key
          private java.lang.Boolean expand;

          /** Set expand to true to return a full profile
           */
          public java.lang.Boolean getExpand() {
            return expand;
          }

          /** Set expand to true to return a full profile */
          public List setExpand(java.lang.Boolean expand) {
            this.expand = expand;
            return this;
          }

          /**
           * Lets you return a list of app starting with a specific app name in the list.
           */
          @com.google.api.client.util.Key
          private java.lang.String startKey;

          /** Lets you return a list of app starting with a specific app name in the list.
           */
          public java.lang.String getStartKey() {
            return startKey;
          }

          /**
           * Lets you return a list of app starting with a specific app name in the list.
           */
          public List setStartKey(java.lang.String startKey) {
            this.startKey = startKey;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing company app.
         *
         * Create a request for the method "apps.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Resource path of the app:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");

          /**
           * Updates an existing company app.
           *
           * Create a request for the method "apps.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Resource path of the app:
        `organizations/{org}/companies/{company_name}/apps/{app_name}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Resource path of the app:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Resource path of the app: `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Resource path of the app:
           * `organizations/{org}/companies/{company_name}/apps/{app_name}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Keys collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Keys.List request = apigee.keys().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Keys keys() {
          return new Keys();
        }

        /**
         * The "keys" collection of methods.
         */
        public class Keys {

          /**
           * Deletes a key for a company app and removes all API products associated with the app. The key can
           * no longer be used to access any APIs.
           *
           * Create a request for the method "keys.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Deletes a key for a company app and removes all API products associated with the app. The key
             * can no longer be used to access any APIs.
             *
             * Create a request for the method "keys.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a company app key `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets information about the consumer key issued to a specific company app.
           *
           * Create a request for the method "keys.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Gets information about the consumer key issued to a specific company app.
             *
             * Create a request for the method "keys.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a company app key `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Updates an existing company app key to add additional API products or attributes. Note that only
           * a single API product can be resolved per app key at runtime. API products are resolved by name,
           * in alphabetical order. The first API product found in the list will be returned.
           *
           * Create a request for the method "keys.updateCompanyAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdateCompanyAppKey#execute()} method to invoke the remote operation.
           *
           * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey}
           * @return the request
           */
          public UpdateCompanyAppKey updateCompanyAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey content) throws java.io.IOException {
            UpdateCompanyAppKey result = new UpdateCompanyAppKey(name, content);
            initialize(result);
            return result;
          }

          public class UpdateCompanyAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Updates an existing company app key to add additional API products or attributes. Note that
             * only a single API product can be resolved per app key at runtime. API products are resolved by
             * name, in alphabetical order. The first API product found in the list will be returned.
             *
             * Create a request for the method "keys.updateCompanyAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdateCompanyAppKey#execute()} method to invoke the remote
             * operation. <p> {@link UpdateCompanyAppKey#initialize(com.google.api.client.googleapis.services.
             * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Resource name of a company app key
          `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey}
             * @since 1.13
             */
            protected UpdateCompanyAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CompanyAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public UpdateCompanyAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateCompanyAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateCompanyAppKey setAccessToken(java.lang.String accessToken) {
              return (UpdateCompanyAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateCompanyAppKey setAlt(java.lang.String alt) {
              return (UpdateCompanyAppKey) super.setAlt(alt);
            }

            @Override
            public UpdateCompanyAppKey setCallback(java.lang.String callback) {
              return (UpdateCompanyAppKey) super.setCallback(callback);
            }

            @Override
            public UpdateCompanyAppKey setFields(java.lang.String fields) {
              return (UpdateCompanyAppKey) super.setFields(fields);
            }

            @Override
            public UpdateCompanyAppKey setKey(java.lang.String key) {
              return (UpdateCompanyAppKey) super.setKey(key);
            }

            @Override
            public UpdateCompanyAppKey setOauthToken(java.lang.String oauthToken) {
              return (UpdateCompanyAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateCompanyAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateCompanyAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateCompanyAppKey setQuotaUser(java.lang.String quotaUser) {
              return (UpdateCompanyAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateCompanyAppKey setUploadType(java.lang.String uploadType) {
              return (UpdateCompanyAppKey) super.setUploadType(uploadType);
            }

            @Override
            public UpdateCompanyAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateCompanyAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Resource name of a company app key `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Resource name of a company app key
             * `organizations/{org}/companies/{company}/apps/{app}/keys/{key}`
             */
            public UpdateCompanyAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Set action to approve or revoke. */
            @com.google.api.client.util.Key
            private java.lang.String action;

            /** Set action to approve or revoke.
             */
            public java.lang.String getAction() {
              return action;
            }

            /** Set action to approve or revoke. */
            public UpdateCompanyAppKey setAction(java.lang.String action) {
              this.action = action;
              return this;
            }

            @Override
            public UpdateCompanyAppKey set(String parameterName, Object value) {
              return (UpdateCompanyAppKey) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Consumerresources collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Consumerresources.List request = apigee.consumerresources().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Consumerresources consumerresources() {
      return new Consumerresources();
    }

    /**
     * The "consumerresources" collection of methods.
     */
    public class Consumerresources {

      /**
       * List all API docs in a ZMS zone that match the given query. Not a recognized rest pattern
       *
       * Create a request for the method "consumerresources.apis".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Apis#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Must be of the form `organizations/{organization_id}`
       * @return the request
       */
      public Apis apis(java.lang.String parent) throws java.io.IOException {
        Apis result = new Apis(parent);
        initialize(result);
        return result;
      }

      public class Apis extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalResourceCollection> {

        private static final String REST_PATH = "v1/{+parent}/consumerresources/apis";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * List all API docs in a ZMS zone that match the given query. Not a recognized rest pattern
         *
         * Create a request for the method "consumerresources.apis".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Apis#execute()} method to invoke the remote operation. <p> {@link
         * Apis#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Must be of the form `organizations/{organization_id}`
         * @since 1.13
         */
        protected Apis(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalResourceCollection.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Apis set$Xgafv(java.lang.String $Xgafv) {
          return (Apis) super.set$Xgafv($Xgafv);
        }

        @Override
        public Apis setAccessToken(java.lang.String accessToken) {
          return (Apis) super.setAccessToken(accessToken);
        }

        @Override
        public Apis setAlt(java.lang.String alt) {
          return (Apis) super.setAlt(alt);
        }

        @Override
        public Apis setCallback(java.lang.String callback) {
          return (Apis) super.setCallback(callback);
        }

        @Override
        public Apis setFields(java.lang.String fields) {
          return (Apis) super.setFields(fields);
        }

        @Override
        public Apis setKey(java.lang.String key) {
          return (Apis) super.setKey(key);
        }

        @Override
        public Apis setOauthToken(java.lang.String oauthToken) {
          return (Apis) super.setOauthToken(oauthToken);
        }

        @Override
        public Apis setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Apis) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Apis setQuotaUser(java.lang.String quotaUser) {
          return (Apis) super.setQuotaUser(quotaUser);
        }

        @Override
        public Apis setUploadType(java.lang.String uploadType) {
          return (Apis) super.setUploadType(uploadType);
        }

        @Override
        public Apis setUploadProtocol(java.lang.String uploadProtocol) {
          return (Apis) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Must be of the form `organizations/{organization_id}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Must be of the form `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Must be of the form `organizations/{organization_id}` */
        public Apis setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @com.google.api.client.util.Key
        private java.lang.String q;

        /**

         */
        public java.lang.String getQ() {
          return q;
        }

        public Apis setQ(java.lang.String q) {
          this.q = q;
          return this;
        }

        @com.google.api.client.util.Key
        private java.lang.String zmsId;

        /**

         */
        public java.lang.String getZmsId() {
          return zmsId;
        }

        public Apis setZmsId(java.lang.String zmsId) {
          this.zmsId = zmsId;
          return this;
        }

        @Override
        public Apis set(String parameterName, Object value) {
          return (Apis) super.set(parameterName, value);
        }
      }
      /**
       * Get all consumer resource types managed by this API.
       *
       * Create a request for the method "consumerresources.getResourcetypes".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetResourcetypes#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Must be of the form `organizations/{organization_id}`
       * @return the request
       */
      public GetResourcetypes getResourcetypes(java.lang.String parent) throws java.io.IOException {
        GetResourcetypes result = new GetResourcetypes(parent);
        initialize(result);
        return result;
      }

      public class GetResourcetypes extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalResourceTypeCollection> {

        private static final String REST_PATH = "v1/{+parent}/consumerresources/resourcetypes";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Get all consumer resource types managed by this API.
         *
         * Create a request for the method "consumerresources.getResourcetypes".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetResourcetypes#execute()} method to invoke the remote operation.
         * <p> {@link GetResourcetypes#initialize(com.google.api.client.googleapis.services.AbstractGoogle
         * ClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param parent Required. Must be of the form `organizations/{organization_id}`
         * @since 1.13
         */
        protected GetResourcetypes(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalResourceTypeCollection.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetResourcetypes set$Xgafv(java.lang.String $Xgafv) {
          return (GetResourcetypes) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetResourcetypes setAccessToken(java.lang.String accessToken) {
          return (GetResourcetypes) super.setAccessToken(accessToken);
        }

        @Override
        public GetResourcetypes setAlt(java.lang.String alt) {
          return (GetResourcetypes) super.setAlt(alt);
        }

        @Override
        public GetResourcetypes setCallback(java.lang.String callback) {
          return (GetResourcetypes) super.setCallback(callback);
        }

        @Override
        public GetResourcetypes setFields(java.lang.String fields) {
          return (GetResourcetypes) super.setFields(fields);
        }

        @Override
        public GetResourcetypes setKey(java.lang.String key) {
          return (GetResourcetypes) super.setKey(key);
        }

        @Override
        public GetResourcetypes setOauthToken(java.lang.String oauthToken) {
          return (GetResourcetypes) super.setOauthToken(oauthToken);
        }

        @Override
        public GetResourcetypes setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetResourcetypes) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetResourcetypes setQuotaUser(java.lang.String quotaUser) {
          return (GetResourcetypes) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetResourcetypes setUploadType(java.lang.String uploadType) {
          return (GetResourcetypes) super.setUploadType(uploadType);
        }

        @Override
        public GetResourcetypes setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetResourcetypes) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Must be of the form `organizations/{organization_id}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Must be of the form `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Must be of the form `organizations/{organization_id}` */
        public GetResourcetypes setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetResourcetypes set(String parameterName, Object value) {
          return (GetResourcetypes) super.set(parameterName, value);
        }
      }
      /**
       * List all pages in a ZMS zone that match the query string. Not a recognized rest pattern
       *
       * Create a request for the method "consumerresources.pages".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Pages#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Must be of the form `organizations/{organization_id}`
       * @return the request
       */
      public Pages pages(java.lang.String parent) throws java.io.IOException {
        Pages result = new Pages(parent);
        initialize(result);
        return result;
      }

      public class Pages extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalResourceCollection> {

        private static final String REST_PATH = "v1/{+parent}/consumerresources/pages";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * List all pages in a ZMS zone that match the query string. Not a recognized rest pattern
         *
         * Create a request for the method "consumerresources.pages".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Pages#execute()} method to invoke the remote operation. <p> {@link
         * Pages#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Must be of the form `organizations/{organization_id}`
         * @since 1.13
         */
        protected Pages(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalResourceCollection.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Pages set$Xgafv(java.lang.String $Xgafv) {
          return (Pages) super.set$Xgafv($Xgafv);
        }

        @Override
        public Pages setAccessToken(java.lang.String accessToken) {
          return (Pages) super.setAccessToken(accessToken);
        }

        @Override
        public Pages setAlt(java.lang.String alt) {
          return (Pages) super.setAlt(alt);
        }

        @Override
        public Pages setCallback(java.lang.String callback) {
          return (Pages) super.setCallback(callback);
        }

        @Override
        public Pages setFields(java.lang.String fields) {
          return (Pages) super.setFields(fields);
        }

        @Override
        public Pages setKey(java.lang.String key) {
          return (Pages) super.setKey(key);
        }

        @Override
        public Pages setOauthToken(java.lang.String oauthToken) {
          return (Pages) super.setOauthToken(oauthToken);
        }

        @Override
        public Pages setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Pages) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Pages setQuotaUser(java.lang.String quotaUser) {
          return (Pages) super.setQuotaUser(quotaUser);
        }

        @Override
        public Pages setUploadType(java.lang.String uploadType) {
          return (Pages) super.setUploadType(uploadType);
        }

        @Override
        public Pages setUploadProtocol(java.lang.String uploadProtocol) {
          return (Pages) super.setUploadProtocol(uploadProtocol);
        }

        /** Required. Must be of the form `organizations/{organization_id}` */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Must be of the form `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /** Required. Must be of the form `organizations/{organization_id}` */
        public Pages setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @com.google.api.client.util.Key
        private java.lang.String q;

        /**

         */
        public java.lang.String getQ() {
          return q;
        }

        public Pages setQ(java.lang.String q) {
          this.q = q;
          return this;
        }

        @com.google.api.client.util.Key
        private java.lang.String zmsId;

        /**

         */
        public java.lang.String getZmsId() {
          return zmsId;
        }

        public Pages setZmsId(java.lang.String zmsId) {
          this.zmsId = zmsId;
          return this;
        }

        @Override
        public Pages set(String parameterName, Object value) {
          return (Pages) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Consumers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Consumers.List request = apigee.consumers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Consumers consumers() {
      return new Consumers();
    }

    /**
     * The "consumers" collection of methods.
     */
    public class Consumers {

      /**
       * Checks whether a developer has access to a resource.
       *
       * Create a request for the method "consumers.access".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Access#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in your
       request:
       *        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CheckAccessBody}
       * @return the request
       */
      public Access access(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CheckAccessBody content) throws java.io.IOException {
        Access result = new Access(parent, content);
        initialize(result);
        return result;
      }

      public class Access extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CheckAccessResponse> {

        private static final String REST_PATH = "v1/{+parent}/consumers/access";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Checks whether a developer has access to a resource.
         *
         * Create a request for the method "consumers.access".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Access#execute()} method to invoke the remote operation. <p> {@link
         * Access#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your
       request:
       *        `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CheckAccessBody}
         * @since 1.13
         */
        protected Access(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CheckAccessBody content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CheckAccessResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Access set$Xgafv(java.lang.String $Xgafv) {
          return (Access) super.set$Xgafv($Xgafv);
        }

        @Override
        public Access setAccessToken(java.lang.String accessToken) {
          return (Access) super.setAccessToken(accessToken);
        }

        @Override
        public Access setAlt(java.lang.String alt) {
          return (Access) super.setAlt(alt);
        }

        @Override
        public Access setCallback(java.lang.String callback) {
          return (Access) super.setCallback(callback);
        }

        @Override
        public Access setFields(java.lang.String fields) {
          return (Access) super.setFields(fields);
        }

        @Override
        public Access setKey(java.lang.String key) {
          return (Access) super.setKey(key);
        }

        @Override
        public Access setOauthToken(java.lang.String oauthToken) {
          return (Access) super.setOauthToken(oauthToken);
        }

        @Override
        public Access setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Access) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Access setQuotaUser(java.lang.String quotaUser) {
          return (Access) super.setQuotaUser(quotaUser);
        }

        @Override
        public Access setUploadType(java.lang.String uploadType) {
          return (Access) super.setUploadType(uploadType);
        }

        @Override
        public Access setUploadProtocol(java.lang.String uploadProtocol) {
          return (Access) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public Access setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Access set(String parameterName, Object value) {
          return (Access) super.set(parameterName, value);
        }
      }
      /**
       * Checks the status of this service.
       *
       * Create a request for the method "consumers.status".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Status#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in your
       request:
       *        `organizations/{org}`
       * @return the request
       */
      public Status status(java.lang.String parent) throws java.io.IOException {
        Status result = new Status(parent);
        initialize(result);
        return result;
      }

      public class Status extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CapiServerStatusResponse> {

        private static final String REST_PATH = "v1/{+parent}/consumers/status";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Checks the status of this service.
         *
         * Create a request for the method "consumers.status".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Status#execute()} method to invoke the remote operation. <p> {@link
         * Status#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your
       request:
       *        `organizations/{org}`
         * @since 1.13
         */
        protected Status(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CapiServerStatusResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Status set$Xgafv(java.lang.String $Xgafv) {
          return (Status) super.set$Xgafv($Xgafv);
        }

        @Override
        public Status setAccessToken(java.lang.String accessToken) {
          return (Status) super.setAccessToken(accessToken);
        }

        @Override
        public Status setAlt(java.lang.String alt) {
          return (Status) super.setAlt(alt);
        }

        @Override
        public Status setCallback(java.lang.String callback) {
          return (Status) super.setCallback(callback);
        }

        @Override
        public Status setFields(java.lang.String fields) {
          return (Status) super.setFields(fields);
        }

        @Override
        public Status setKey(java.lang.String key) {
          return (Status) super.setKey(key);
        }

        @Override
        public Status setOauthToken(java.lang.String oauthToken) {
          return (Status) super.setOauthToken(oauthToken);
        }

        @Override
        public Status setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Status) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Status setQuotaUser(java.lang.String quotaUser) {
          return (Status) super.setQuotaUser(quotaUser);
        }

        @Override
        public Status setUploadType(java.lang.String uploadType) {
          return (Status) super.setUploadType(uploadType);
        }

        @Override
        public Status setUploadProtocol(java.lang.String uploadProtocol) {
          return (Status) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public Status setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Status set(String parameterName, Object value) {
          return (Status) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Apps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apps apps() {
        return new Apps();
      }

      /**
       * The "apps" collection of methods.
       */
      public class Apps {

        /**
         * Creates an app.
         *
         * Create a request for the method "apps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your
         request:
         *        `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreateConsumerAppRequestBody}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreateConsumerAppRequestBody content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerAppResponse> {

          private static final String REST_PATH = "v1/{+parent}/consumers/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+$");

          /**
           * Creates an app.
           *
           * Create a request for the method "apps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the Apigee organization. Use the following structure in your
         request:
         *        `organizations/{org}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreateConsumerAppRequestBody}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreateConsumerAppRequestBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerAppResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the Apigee organization. Use the following structure in your request:
           * `organizations/{org}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the Apigee organization. Use the following structure in your request:
         `organizations/{org}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the Apigee organization. Use the following structure in your request:
           * `organizations/{org}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes an app.
         *
         * Create a request for the method "apps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the app. Use the following structure in your request:
         *        `organizations/{org}/consumers/apps/{app}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/consumers/apps/[^/]+$");

          /**
           * Deletes an app.
           *
           * Create a request for the method "apps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the app. Use the following structure in your request:
         *        `organizations/{org}/consumers/apps/{app}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/consumers/apps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the app. Use the following structure in your request:
           * `organizations/{org}/consumers/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the app. Use the following structure in your request:
         `organizations/{org}/consumers/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the app. Use the following structure in your request:
           * `organizations/{org}/consumers/apps/{app}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/consumers/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets an app.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the app. Use the following structure in your request:
         *        `organizations/{org}/consumers/apps/{app}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerAppResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/consumers/apps/[^/]+$");

          /**
           * Gets an app.
           *
           * Create a request for the method "apps.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the app. Use the following structure in your request:
         *        `organizations/{org}/consumers/apps/{app}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerAppResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/consumers/apps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the app. Use the following structure in your request:
           * `organizations/{org}/consumers/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the app. Use the following structure in your request:
         `organizations/{org}/consumers/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the app. Use the following structure in your request:
           * `organizations/{org}/consumers/apps/{app}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/consumers/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all apps.
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your
        request:
         *        `organizations/{org}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListConsumerAppsResponse> {

          private static final String REST_PATH = "v1/{+parent}/consumers/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+$");

          /**
           * Lists all apps.
           *
           * Create a request for the method "apps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the Apigee organization. Use the following structure in your
        request:
         *        `organizations/{org}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListConsumerAppsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the Apigee organization. Use the following structure in your request:
           * `organizations/{org}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the Apigee organization. Use the following structure in your request:
         `organizations/{org}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the Apigee organization. Use the following structure in your request:
           * `organizations/{org}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an app.
         *
         * Create a request for the method "apps.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the app. Use the following structure in your request:
         *        `organizations/{org}/consumers/apps/{app}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalApp}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalApp content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerAppResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/consumers/apps/[^/]+$");

          /**
           * Updates an app.
           *
           * Create a request for the method "apps.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the app. Use the following structure in your request:
         *        `organizations/{org}/consumers/apps/{app}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalApp}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalApp content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerAppResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/consumers/apps/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the app. Use the following structure in your request:
           * `organizations/{org}/consumers/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the app. Use the following structure in your request:
         `organizations/{org}/consumers/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the app. Use the following structure in your request:
           * `organizations/{org}/consumers/apps/{app}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/consumers/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Keys collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Keys.List request = apigee.keys().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Keys keys() {
          return new Keys();
        }

        /**
         * The "keys" collection of methods.
         */
        public class Keys {

          /**
           * Approves or revokes an API key for an app. Not a recognized rest pattern
           *
           * Create a request for the method "keys.approveRevokeConsumerAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link ApproveRevokeConsumerAppKey#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. Name of the API key. Use the following structure in your request:
           *        `organizations/{org}/consumers/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyStatusChange}
           * @return the request
           */
          public ApproveRevokeConsumerAppKey approveRevokeConsumerAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyStatusChange content) throws java.io.IOException {
            ApproveRevokeConsumerAppKey result = new ApproveRevokeConsumerAppKey(name, content);
            initialize(result);
            return result;
          }

          public class ApproveRevokeConsumerAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/consumers/apps/[^/]+/keys/[^/]+$");

            /**
             * Approves or revokes an API key for an app. Not a recognized rest pattern
             *
             * Create a request for the method "keys.approveRevokeConsumerAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link ApproveRevokeConsumerAppKey#execute()} method to invoke the remote
             * operation. <p> {@link ApproveRevokeConsumerAppKey#initialize(com.google.api.client.googleapis.s
             * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. Name of the API key. Use the following structure in your request:
           *        `organizations/{org}/consumers/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyStatusChange}
             * @since 1.13
             */
            protected ApproveRevokeConsumerAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyStatusChange content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/consumers/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public ApproveRevokeConsumerAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (ApproveRevokeConsumerAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public ApproveRevokeConsumerAppKey setAccessToken(java.lang.String accessToken) {
              return (ApproveRevokeConsumerAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public ApproveRevokeConsumerAppKey setAlt(java.lang.String alt) {
              return (ApproveRevokeConsumerAppKey) super.setAlt(alt);
            }

            @Override
            public ApproveRevokeConsumerAppKey setCallback(java.lang.String callback) {
              return (ApproveRevokeConsumerAppKey) super.setCallback(callback);
            }

            @Override
            public ApproveRevokeConsumerAppKey setFields(java.lang.String fields) {
              return (ApproveRevokeConsumerAppKey) super.setFields(fields);
            }

            @Override
            public ApproveRevokeConsumerAppKey setKey(java.lang.String key) {
              return (ApproveRevokeConsumerAppKey) super.setKey(key);
            }

            @Override
            public ApproveRevokeConsumerAppKey setOauthToken(java.lang.String oauthToken) {
              return (ApproveRevokeConsumerAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public ApproveRevokeConsumerAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ApproveRevokeConsumerAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ApproveRevokeConsumerAppKey setQuotaUser(java.lang.String quotaUser) {
              return (ApproveRevokeConsumerAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public ApproveRevokeConsumerAppKey setUploadType(java.lang.String uploadType) {
              return (ApproveRevokeConsumerAppKey) super.setUploadType(uploadType);
            }

            @Override
            public ApproveRevokeConsumerAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (ApproveRevokeConsumerAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API key. Use the following structure in your request:
             * `organizations/{org}/consumers/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the API key. Use the following structure in your request:
           `organizations/{org}/consumers/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the API key. Use the following structure in your request:
             * `organizations/{org}/consumers/apps/{app}/keys/{key}`
             */
            public ApproveRevokeConsumerAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/consumers/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public ApproveRevokeConsumerAppKey set(String parameterName, Object value) {
              return (ApproveRevokeConsumerAppKey) super.set(parameterName, value);
            }
          }
          /**
           * Creates an API key for an app.
           *
           * Create a request for the method "keys.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the app. Use the following structure in your request:
           *        `organizations/{org}/consumers/apps/{app}`
           * @return the request
           */
          public Create create(java.lang.String parent) throws java.io.IOException {
            Create result = new Create(parent);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse> {

            private static final String REST_PATH = "v1/{+parent}/keys";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/consumers/apps/[^/]+$");

            /**
             * Creates an API key for an app.
             *
             * Create a request for the method "keys.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the app. Use the following structure in your request:
           *        `organizations/{org}/consumers/apps/{app}`
             * @since 1.13
             */
            protected Create(java.lang.String parent) {
              super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/consumers/apps/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the app. Use the following structure in your request:
             * `organizations/{org}/consumers/apps/{app}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the app. Use the following structure in your request:
           `organizations/{org}/consumers/apps/{app}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the app. Use the following structure in your request:
             * `organizations/{org}/consumers/apps/{app}`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/consumers/apps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Deployments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Deployments deployments() {
      return new Deployments();
    }

    /**
     * The "deployments" collection of methods.
     */
    public class Deployments {

      /**
       * Lists all deployments of API proxies or shared flows.
       *
       * Create a request for the method "deployments.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization for which to return deployment information in the
      following
       *        format:
       `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

        private static final String REST_PATH = "v1/{+parent}/deployments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all deployments of API proxies or shared flows.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization for which to return deployment information in the
      following
       *        format:
       `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization for which to return deployment information in the
         * following format: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization for which to return deployment information in the following
       format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization for which to return deployment information in the
         * following format: `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set
         * to `true` to return shared flow deployments; set to `false` to return API proxy
         * deployments. Defaults to `false`.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean sharedFlows;

        /** Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true`
       to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to
       `false`.
         */
        public java.lang.Boolean getSharedFlows() {
          return sharedFlows;
        }

        /**
         * Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set
         * to `true` to return shared flow deployments; set to `false` to return API proxy
         * deployments. Defaults to `false`.
         */
        public List setSharedFlows(java.lang.Boolean sharedFlows) {
          this.sharedFlows = sharedFlows;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Developers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Developers.List request = apigee.developers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Developers developers() {
      return new Developers();
    }

    /**
     * The "developers" collection of methods.
     */
    public class Developers {

      /**
       * Updates developer attributes.
       *
       * This API replaces the existing attributes with those specified in the request. Add new
       * attributes, and include or exclude any existing attributes that you want to retain or remove,
       * respectively.
       *
       * The custom attribute limit is 18.
       *
       * **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and
       * API products) are cached for 180 seconds (default). Any custom attributes associated with these
       * entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore,
       * an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than
       * 180 seconds.
       *
       * Create a request for the method "developers.attributes".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Attributes#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Email address of the developer for which attributes are being updated in
      the following
       *        format:
        `organizations/{org}/developers/{developer_email}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
       * @return the request
       */
      public Attributes attributes(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) throws java.io.IOException {
        Attributes result = new Attributes(parent, content);
        initialize(result);
        return result;
      }

      public class Attributes extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

        private static final String REST_PATH = "v1/{+parent}/attributes";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Updates developer attributes.
         *
         * This API replaces the existing attributes with those specified in the request. Add new
         * attributes, and include or exclude any existing attributes that you want to retain or remove,
         * respectively.
         *
         * The custom attribute limit is 18.
         *
         * **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and
         * API products) are cached for 180 seconds (default). Any custom attributes associated with these
         * entities are cached for at least 180 seconds after the entity is accessed at runtime.
         * Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token
         * in less than 180 seconds.
         *
         * Create a request for the method "developers.attributes".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Attributes#execute()} method to invoke the remote operation. <p>
         * {@link
         * Attributes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Email address of the developer for which attributes are being updated in
      the following
       *        format:
        `organizations/{org}/developers/{developer_email}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
         * @since 1.13
         */
        protected Attributes(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public Attributes set$Xgafv(java.lang.String $Xgafv) {
          return (Attributes) super.set$Xgafv($Xgafv);
        }

        @Override
        public Attributes setAccessToken(java.lang.String accessToken) {
          return (Attributes) super.setAccessToken(accessToken);
        }

        @Override
        public Attributes setAlt(java.lang.String alt) {
          return (Attributes) super.setAlt(alt);
        }

        @Override
        public Attributes setCallback(java.lang.String callback) {
          return (Attributes) super.setCallback(callback);
        }

        @Override
        public Attributes setFields(java.lang.String fields) {
          return (Attributes) super.setFields(fields);
        }

        @Override
        public Attributes setKey(java.lang.String key) {
          return (Attributes) super.setKey(key);
        }

        @Override
        public Attributes setOauthToken(java.lang.String oauthToken) {
          return (Attributes) super.setOauthToken(oauthToken);
        }

        @Override
        public Attributes setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Attributes) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Attributes setQuotaUser(java.lang.String quotaUser) {
          return (Attributes) super.setQuotaUser(quotaUser);
        }

        @Override
        public Attributes setUploadType(java.lang.String uploadType) {
          return (Attributes) super.setUploadType(uploadType);
        }

        @Override
        public Attributes setUploadProtocol(java.lang.String uploadProtocol) {
          return (Attributes) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Email address of the developer for which attributes are being updated in the
         * following format: `organizations/{org}/developers/{developer_email}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Email address of the developer for which attributes are being updated in the following
       format: `organizations/{org}/developers/{developer_email}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Email address of the developer for which attributes are being updated in the
         * following format: `organizations/{org}/developers/{developer_email}`
         */
        public Attributes setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Attributes set(String parameterName, Object value) {
          return (Attributes) super.set(parameterName, value);
        }
      }
      /**
       * Creates a developer. Once created, the developer can register an app and obtain an API key.
       *
       * At creation time, a developer is set as `active`. To change the developer status, use the
       * SetDeveloperStatus API.
       *
       * Create a request for the method "developers.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization in which the developer is created.
      Use the following
       *        structure in your request:
        `organizations/{org}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+parent}/developers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a developer. Once created, the developer can register an app and obtain an API key.
         *
         * At creation time, a developer is set as `active`. To change the developer status, use the
         * SetDeveloperStatus API.
         *
         * Create a request for the method "developers.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization in which the developer is created.
      Use the following
       *        structure in your request:
        `organizations/{org}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization in which the developer is created. Use the
         * following structure in your request: `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization in which the developer is created. Use the following
       structure in your request: `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization in which the developer is created. Use the
         * following structure in your request: `organizations/{org}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a developer. All apps and API keys associated with the developer are also removed.
       *
       * **Warning**: This API will permanently delete the developer and related artifacts.
       *
       * To avoid permanently deleting developers and their artifacts, set the developer status to
       * `inactive` using the SetDeveloperStatus API.
       *
       * **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its
       * associated resources, such as apps and API keys, may take anywhere from a few seconds to a few
       * minutes to be deleted.
       *
       * Create a request for the method "developers.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Email address of the developer. Use the following structure in your
      request:
       *        `organizations/{org}/developers/{developer_email}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Deletes a developer. All apps and API keys associated with the developer are also removed.
         *
         * **Warning**: This API will permanently delete the developer and related artifacts.
         *
         * To avoid permanently deleting developers and their artifacts, set the developer status to
         * `inactive` using the SetDeveloperStatus API.
         *
         * **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but
         * its associated resources, such as apps and API keys, may take anywhere from a few seconds to a
         * few minutes to be deleted.
         *
         * Create a request for the method "developers.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Email address of the developer. Use the following structure in your
      request:
       *        `organizations/{org}/developers/{developer_email}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Email address of the developer. Use the following structure in your request:
       `organizations/{org}/developers/{developer_email}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Returns the developer details, including the developer's name, email address, apps, and other
       * information.
       *
       * **Note**: The response includes only the first 100 developer apps.
       *
       * Create a request for the method "developers.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Email address of the developer. Use the following structure in your
      request:
       *        `organizations/{org}/developers/{developer_email}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Returns the developer details, including the developer's name, email address, apps, and other
         * information.
         *
         * **Note**: The response includes only the first 100 developer apps.
         *
         * Create a request for the method "developers.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Email address of the developer. Use the following structure in your
      request:
       *        `organizations/{org}/developers/{developer_email}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Email address of the developer. Use the following structure in your request:
       `organizations/{org}/developers/{developer_email}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Status of the developer. Valid values are `active` or `inactive`. */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Status of the developer. Valid values are `active` or `inactive`.
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Status of the developer. Valid values are `active` or `inactive`. */
        public Get setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all developers in an organization by email address.
       *
       * By default, the response does not include company developers. Set the `includeCompany` query
       * parameter to `true` to include company developers.
       *
       * **Note**: A maximum of 1000 developers are returned in the response. You paginate the list of
       * developers returned using the `startKey` and `count` query parameters.
       *
       * Create a request for the method "developers.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in your
      request:
       *        `organizations/{org}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOfDevelopersResponse> {

        private static final String REST_PATH = "v1/{+parent}/developers";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all developers in an organization by email address.
         *
         * By default, the response does not include company developers. Set the `includeCompany` query
         * parameter to `true` to include company developers.
         *
         * **Note**: A maximum of 1000 developers are returned in the response. You paginate the list of
         * developers returned using the `startKey` and `count` query parameters.
         *
         * Create a request for the method "developers.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your
      request:
       *        `organizations/{org}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListOfDevelopersResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Number of developers to return in the API call. Use with the `startKey`
         * parameter to provide more targeted filtering. The limit is 1000.
         */
        @com.google.api.client.util.Key
        private java.lang.Long count;

        /** Optional. Number of developers to return in the API call. Use with the `startKey` parameter to
       provide more targeted filtering. The limit is 1000.
         */
        public java.lang.Long getCount() {
          return count;
        }

        /**
         * Optional. Number of developers to return in the API call. Use with the `startKey`
         * parameter to provide more targeted filtering. The limit is 1000.
         */
        public List setCount(java.lang.Long count) {
          this.count = count;
          return this;
        }

        /**
         * Specifies whether to expand the results. Set to `true` to expand the results. This query
         * parameter is not valid if you use the `count` or `startKey` query parameters.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Specifies whether to expand the results. Set to `true` to expand the results. This query parameter
       is not valid if you use the `count` or `startKey` query parameters.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /**
         * Specifies whether to expand the results. Set to `true` to expand the results. This query
         * parameter is not valid if you use the `count` or `startKey` query parameters.
         */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        /** Optional. List of IDs to include, separated by commas. */
        @com.google.api.client.util.Key
        private java.lang.String ids;

        /** Optional. List of IDs to include, separated by commas.
         */
        public java.lang.String getIds() {
          return ids;
        }

        /** Optional. List of IDs to include, separated by commas. */
        public List setIds(java.lang.String ids) {
          this.ids = ids;
          return this;
        }

        /** Flag that specifies whether to include company details in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeCompany;

        /** Flag that specifies whether to include company details in the response.
         */
        public java.lang.Boolean getIncludeCompany() {
          return includeCompany;
        }

        /** Flag that specifies whether to include company details in the response. */
        public List setIncludeCompany(java.lang.Boolean includeCompany) {
          this.includeCompany = includeCompany;
          return this;
        }

        /**
         * **Note**: Must be used in conjunction with the `count` parameter.
         *
         * Email address of the developer from which to start displaying the list of developers. For
         * example, if the an unfiltered list returns:
         *
         * ``` westley@example.com fezzik@example.com buttercup@example.com ```
         *
         * and your `startKey` is `fezzik@example.com`, the list returned will be
         *
         * ``` fezzik@example.com buttercup@example.com ```
         */
        @com.google.api.client.util.Key
        private java.lang.String startKey;

        /**** Note**: Must be used in conjunction with the `count` parameter.
      **
      ** Email address of the developer from which to start displaying the list of developers. For
      ** example, if the an unfiltered list returns:
      **
      ** ``` westley@example.com fezzik@example.com buttercup@example.com ```
      **
      ** and your `startKey` is `fezzik@example.com`, the list returned will be
      **
      ** ``` fezzik@example.com buttercup@example.com ```
      **

         */
        public java.lang.String getStartKey() {
          return startKey;
        }

        /**
         * **Note**: Must be used in conjunction with the `count` parameter.
         *
         * Email address of the developer from which to start displaying the list of developers. For
         * example, if the an unfiltered list returns:
         *
         * ``` westley@example.com fezzik@example.com buttercup@example.com ```
         *
         * and your `startKey` is `fezzik@example.com`, the list returned will be
         *
         * ``` fezzik@example.com buttercup@example.com ```
         */
        public List setStartKey(java.lang.String startKey) {
          this.startKey = startKey;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Sets the status of a developer. Valid values are `active` or `inactive`.
       *
       * A developer is `active` by default. If you set a developer's status to `inactive`, the API keys
       * assigned to the developer apps are no longer valid even though the API keys are set to
       * `approved`. Inactive developers can still sign in to the developer portal and create apps;
       * however, any new API keys generated during app creation won't work.
       *
       * If successful, the API call returns the following HTTP status code: `204 No Content`
       *
       * Create a request for the method "developers.setDeveloperStatus".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link SetDeveloperStatus#execute()} method to invoke the remote operation.
       *
       * @param name Required. Email address of the developer. Use the following structure in your
      request:
       *        `organizations/{org}/developers/{developer_email}`
       * @return the request
       */
      public SetDeveloperStatus setDeveloperStatus(java.lang.String name) throws java.io.IOException {
        SetDeveloperStatus result = new SetDeveloperStatus(name);
        initialize(result);
        return result;
      }

      public class SetDeveloperStatus extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Sets the status of a developer. Valid values are `active` or `inactive`.
         *
         * A developer is `active` by default. If you set a developer's status to `inactive`, the API keys
         * assigned to the developer apps are no longer valid even though the API keys are set to
         * `approved`. Inactive developers can still sign in to the developer portal and create apps;
         * however, any new API keys generated during app creation won't work.
         *
         * If successful, the API call returns the following HTTP status code: `204 No Content`
         *
         * Create a request for the method "developers.setDeveloperStatus".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link SetDeveloperStatus#execute()} method to invoke the remote
         * operation. <p> {@link SetDeveloperStatus#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param name Required. Email address of the developer. Use the following structure in your
      request:
       *        `organizations/{org}/developers/{developer_email}`
         * @since 1.13
         */
        protected SetDeveloperStatus(java.lang.String name) {
          super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public SetDeveloperStatus set$Xgafv(java.lang.String $Xgafv) {
          return (SetDeveloperStatus) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetDeveloperStatus setAccessToken(java.lang.String accessToken) {
          return (SetDeveloperStatus) super.setAccessToken(accessToken);
        }

        @Override
        public SetDeveloperStatus setAlt(java.lang.String alt) {
          return (SetDeveloperStatus) super.setAlt(alt);
        }

        @Override
        public SetDeveloperStatus setCallback(java.lang.String callback) {
          return (SetDeveloperStatus) super.setCallback(callback);
        }

        @Override
        public SetDeveloperStatus setFields(java.lang.String fields) {
          return (SetDeveloperStatus) super.setFields(fields);
        }

        @Override
        public SetDeveloperStatus setKey(java.lang.String key) {
          return (SetDeveloperStatus) super.setKey(key);
        }

        @Override
        public SetDeveloperStatus setOauthToken(java.lang.String oauthToken) {
          return (SetDeveloperStatus) super.setOauthToken(oauthToken);
        }

        @Override
        public SetDeveloperStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetDeveloperStatus) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetDeveloperStatus setQuotaUser(java.lang.String quotaUser) {
          return (SetDeveloperStatus) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetDeveloperStatus setUploadType(java.lang.String uploadType) {
          return (SetDeveloperStatus) super.setUploadType(uploadType);
        }

        @Override
        public SetDeveloperStatus setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetDeveloperStatus) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Email address of the developer. Use the following structure in your request:
       `organizations/{org}/developers/{developer_email}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        public SetDeveloperStatus setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** Status of the developer. Valid values are `active` and `inactive`. */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Status of the developer. Valid values are `active` and `inactive`.
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Status of the developer. Valid values are `active` and `inactive`. */
        public SetDeveloperStatus setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        @Override
        public SetDeveloperStatus set(String parameterName, Object value) {
          return (SetDeveloperStatus) super.set(parameterName, value);
        }
      }
      /**
       * Updates a developer.
       *
       * This API replaces the existing developer details with those specified in the request. Include or
       * exclude any existing details that you want to retain or delete, respectively.
       *
       * The custom attribute limit is 18.
       *
       * **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and
       * API products) are cached for 180 seconds (current default). Any custom attributes associated with
       * these entities are cached for at least 180 seconds after the entity is accessed at runtime.
       * Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token
       * in less than 180 seconds.
       *
       * Create a request for the method "developers.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Email address of the developer. Use the following structure in your
      request:
       *        `organizations/{org}/developers/{developer_email}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

        /**
         * Updates a developer.
         *
         * This API replaces the existing developer details with those specified in the request. Include
         * or exclude any existing details that you want to retain or delete, respectively.
         *
         * The custom attribute limit is 18.
         *
         * **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and
         * API products) are cached for 180 seconds (current default). Any custom attributes associated
         * with these entities are cached for at least 180 seconds after the entity is accessed at
         * runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an
         * access token in less than 180 seconds.
         *
         * Create a request for the method "developers.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Email address of the developer. Use the following structure in your
      request:
       *        `organizations/{org}/developers/{developer_email}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Developer.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Email address of the developer. Use the following structure in your request:
       `organizations/{org}/developers/{developer_email}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Email address of the developer. Use the following structure in your request:
         * `organizations/{org}/developers/{developer_email}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/developers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Apps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apps.List request = apigee.apps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apps apps() {
        return new Apps();
      }

      /**
       * The "apps" collection of methods.
       */
      public class Apps {

        /**
         * Updates attributes for a developer app. This API replaces the current attributes with those
         * specified in the request.
         *
         * Create a request for the method "apps.attributes".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Attributes#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
         * @return the request
         */
        public Attributes attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) throws java.io.IOException {
          Attributes result = new Attributes(name, content);
          initialize(result);
          return result;
        }

        public class Attributes extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

          private static final String REST_PATH = "v1/{+name}/attributes";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Updates attributes for a developer app. This API replaces the current attributes with those
           * specified in the request.
           *
           * Create a request for the method "apps.attributes".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Attributes#execute()} method to invoke the remote operation. <p>
           * {@link
           * Attributes#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes}
           * @since 1.13
           */
          protected Attributes(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Attributes set$Xgafv(java.lang.String $Xgafv) {
            return (Attributes) super.set$Xgafv($Xgafv);
          }

          @Override
          public Attributes setAccessToken(java.lang.String accessToken) {
            return (Attributes) super.setAccessToken(accessToken);
          }

          @Override
          public Attributes setAlt(java.lang.String alt) {
            return (Attributes) super.setAlt(alt);
          }

          @Override
          public Attributes setCallback(java.lang.String callback) {
            return (Attributes) super.setCallback(callback);
          }

          @Override
          public Attributes setFields(java.lang.String fields) {
            return (Attributes) super.setFields(fields);
          }

          @Override
          public Attributes setKey(java.lang.String key) {
            return (Attributes) super.setKey(key);
          }

          @Override
          public Attributes setOauthToken(java.lang.String oauthToken) {
            return (Attributes) super.setOauthToken(oauthToken);
          }

          @Override
          public Attributes setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Attributes) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Attributes setQuotaUser(java.lang.String quotaUser) {
            return (Attributes) super.setQuotaUser(quotaUser);
          }

          @Override
          public Attributes setUploadType(java.lang.String uploadType) {
            return (Attributes) super.setUploadType(uploadType);
          }

          @Override
          public Attributes setUploadProtocol(java.lang.String uploadProtocol) {
            return (Attributes) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public Attributes setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Attributes set(String parameterName, Object value) {
            return (Attributes) super.set(parameterName, value);
          }
        }
        /**
         * Creates an app associated with a developer. This API associates the developer app with the
         * specified API product and auto-generates an API key for the app to use in calls to API proxies
         * inside that API product.
         *
         * The `name` is the unique ID of the app that you can use in API calls. The `DisplayName` (set as
         * an attribute) appears in the UI. If you don't set the `DisplayName` attribute, the `name` appears
         * in the UI.
         *
         * Create a request for the method "apps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Creates an app associated with a developer. This API associates the developer app with the
           * specified API product and auto-generates an API key for the app to use in calls to API proxies
           * inside that API product.
           *
           * The `name` is the unique ID of the app that you can use in API calls. The `DisplayName` (set as
           * an attribute) appears in the UI. If you don't set the `DisplayName` attribute, the `name`
           * appears in the UI.
           *
           * Create a request for the method "apps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the developer. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a developer app.
         *
         * **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its
         * associated resources, such as app keys or access tokens, may take anywhere from a few seconds to
         * a few minutes to be deleted.
         *
         * Create a request for the method "apps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Deletes a developer app.
           *
           * **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but
           * its associated resources, such as app keys or access tokens, may take anywhere from a few
           * seconds to a few minutes to be deleted.
           *
           * Create a request for the method "apps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Manages access to a developer app by enabling you to:
         *
         * * Approve or revoke a developer app * Generate a new consumer key and secret for a developer app
         *
         * To approve or revoke a developer app, set the `action` query parameter to `approved` or
         * `revoked`, respectively, and the `Content-Type` header to `application/octet-stream`. If a
         * developer app is revoked, none of its API keys are valid for API calls even though the keys are
         * still `approved`. If successful, the API call returns the following HTTP status code: `204 No
         * Content`
         *
         * To generate a new consumer key and secret for a developer app, pass the new key/secret details.
         * Rather than replace an existing key, this API generates a new key. In this case, multiple key
         * pairs may be associated with a single developer app. Each key pair has an independent status
         * (`approved` or `revoked`) and expiration time. Any approved, non-expired key can be used in an
         * API call.
         *
         * For example, if you're using API key rotation, you can generate new keys with expiration times
         * that overlap keys that are going to expire. You might also generate a new consumer key/secret if
         * the security of the original key/secret is compromised.
         *
         * The `keyExpiresIn` property defines the expiration time for the API key in milliseconds. If you
         * don't set this property or set it to `-1`, the API key never expires.
         *
         * **Notes**:
         *
         * * When generating a new key/secret, this API replaces the existing attributes, notes, and
         * callback URLs with those specified in the request. Include or exclude any existing information
         * that you want to retain or delete, respectively. * To migrate existing consumer keys and secrets
         * to hybrid from another system, see the CreateDeveloperAppKey API.
         *
         * Create a request for the method "apps.generateKeyPairOrUpdateDeveloperAppStatus".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GenerateKeyPairOrUpdateDeveloperAppStatus#execute()} method to invoke
         * the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
         * @return the request
         */
        public GenerateKeyPairOrUpdateDeveloperAppStatus generateKeyPairOrUpdateDeveloperAppStatus(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) throws java.io.IOException {
          GenerateKeyPairOrUpdateDeveloperAppStatus result = new GenerateKeyPairOrUpdateDeveloperAppStatus(name, content);
          initialize(result);
          return result;
        }

        public class GenerateKeyPairOrUpdateDeveloperAppStatus extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Manages access to a developer app by enabling you to:
           *
           * * Approve or revoke a developer app * Generate a new consumer key and secret for a developer
           * app
           *
           * To approve or revoke a developer app, set the `action` query parameter to `approved` or
           * `revoked`, respectively, and the `Content-Type` header to `application/octet-stream`. If a
           * developer app is revoked, none of its API keys are valid for API calls even though the keys are
           * still `approved`. If successful, the API call returns the following HTTP status code: `204 No
           * Content`
           *
           * To generate a new consumer key and secret for a developer app, pass the new key/secret details.
           * Rather than replace an existing key, this API generates a new key. In this case, multiple key
           * pairs may be associated with a single developer app. Each key pair has an independent status
           * (`approved` or `revoked`) and expiration time. Any approved, non-expired key can be used in an
           * API call.
           *
           * For example, if you're using API key rotation, you can generate new keys with expiration times
           * that overlap keys that are going to expire. You might also generate a new consumer key/secret
           * if the security of the original key/secret is compromised.
           *
           * The `keyExpiresIn` property defines the expiration time for the API key in milliseconds. If you
           * don't set this property or set it to `-1`, the API key never expires.
           *
           * **Notes**:
           *
           * * When generating a new key/secret, this API replaces the existing attributes, notes, and
           * callback URLs with those specified in the request. Include or exclude any existing information
           * that you want to retain or delete, respectively. * To migrate existing consumer keys and
           * secrets to hybrid from another system, see the CreateDeveloperAppKey API.
           *
           * Create a request for the method "apps.generateKeyPairOrUpdateDeveloperAppStatus".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GenerateKeyPairOrUpdateDeveloperAppStatus#execute()} method to
           * invoke the remote operation. <p> {@link GenerateKeyPairOrUpdateDeveloperAppStatus#initialize(co
           * m.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be called to
           * initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
           * @since 1.13
           */
          protected GenerateKeyPairOrUpdateDeveloperAppStatus(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus set$Xgafv(java.lang.String $Xgafv) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.set$Xgafv($Xgafv);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setAccessToken(java.lang.String accessToken) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setAccessToken(accessToken);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setAlt(java.lang.String alt) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setAlt(alt);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setCallback(java.lang.String callback) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setCallback(callback);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setFields(java.lang.String fields) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setFields(fields);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setKey(java.lang.String key) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setKey(key);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setOauthToken(java.lang.String oauthToken) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setOauthToken(oauthToken);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setQuotaUser(java.lang.String quotaUser) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setQuotaUser(quotaUser);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setUploadType(java.lang.String uploadType) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setUploadType(uploadType);
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus setUploadProtocol(java.lang.String uploadProtocol) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public GenerateKeyPairOrUpdateDeveloperAppStatus setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /** Action. Valid values are `approve` or `revoke`. */
          @com.google.api.client.util.Key
          private java.lang.String action;

          /** Action. Valid values are `approve` or `revoke`.
           */
          public java.lang.String getAction() {
            return action;
          }

          /** Action. Valid values are `approve` or `revoke`. */
          public GenerateKeyPairOrUpdateDeveloperAppStatus setAction(java.lang.String action) {
            this.action = action;
            return this;
          }

          @Override
          public GenerateKeyPairOrUpdateDeveloperAppStatus set(String parameterName, Object value) {
            return (GenerateKeyPairOrUpdateDeveloperAppStatus) super.set(parameterName, value);
          }
        }
        /**
         * Returns the details for a developer app.
         *
         * Create a request for the method "apps.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Returns the details for a developer app.
           *
           * Create a request for the method "apps.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * **Note**: Must be used in conjunction with the `query` parameter.
           *
           * Set to `apiresources` to return the number of API resources that have been approved for
           * access by a developer app in the specified Apigee organization.
           */
          @com.google.api.client.util.Key
          private java.lang.String entity;

          /**** Note**: Must be used in conjunction with the `query` parameter.
        **
        ** Set to `apiresources` to return the number of API resources that have been approved for access by
        ** a developer app in the specified Apigee organization.
        **

           */
          public java.lang.String getEntity() {
            return entity;
          }

          /**
           * **Note**: Must be used in conjunction with the `query` parameter.
           *
           * Set to `apiresources` to return the number of API resources that have been approved for
           * access by a developer app in the specified Apigee organization.
           */
          public Get setEntity(java.lang.String entity) {
            this.entity = entity;
            return this;
          }

          /**
           * **Note**: Must be used in conjunction with the `entity` parameter.
           *
           * Set to `count` to return the number of API resources that have been approved for access
           * by a developer app in the specified Apigee organization.
           */
          @com.google.api.client.util.Key
          private java.lang.String query;

          /**** Note**: Must be used in conjunction with the `entity` parameter.
        **
        ** Set to `count` to return the number of API resources that have been approved for access by a
        ** developer app in the specified Apigee organization.
        **

           */
          public java.lang.String getQuery() {
            return query;
          }

          /**
           * **Note**: Must be used in conjunction with the `entity` parameter.
           *
           * Set to `count` to return the number of API resources that have been approved for access
           * by a developer app in the specified Apigee organization.
           */
          public Get setQuery(java.lang.String query) {
            this.query = query;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all apps created by a developer in an Apigee organization. Optionally, you can request an
         * expanded view of the developer apps.
         *
         * A maximum of 100 developer apps are returned per API call. You can paginate the list of deveoper
         * apps returned using the `startKey` and `count` query parameters.
         *
         * Create a request for the method "apps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeveloperAppsResponse> {

          private static final String REST_PATH = "v1/{+parent}/apps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Lists all apps created by a developer in an Apigee organization. Optionally, you can request an
           * expanded view of the developer apps.
           *
           * A maximum of 100 developer apps are returned per API call. You can paginate the list of
           * deveoper apps returned using the `startKey` and `count` query parameters.
           *
           * Create a request for the method "apps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the developer. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeveloperAppsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the developer. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the developer. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Number of developer apps to return in the API call. Use with the `startKey` parameter
           * to provide more targeted filtering. The limit is 1000.
           */
          @com.google.api.client.util.Key
          private java.lang.Long count;

          /** Number of developer apps to return in the API call. Use with the `startKey` parameter to provide
         more targeted filtering. The limit is 1000.
           */
          public java.lang.Long getCount() {
            return count;
          }

          /**
           * Number of developer apps to return in the API call. Use with the `startKey` parameter
           * to provide more targeted filtering. The limit is 1000.
           */
          public List setCount(java.lang.Long count) {
            this.count = count;
            return this;
          }

          /**
           * Optional. Specifies whether to expand the results. Set to `true` to expand the results.
           * This query parameter is not valid if you use the `count` or `startKey` query
           * parameters.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean expand;

          /** Optional. Specifies whether to expand the results. Set to `true` to expand the results. This query
         parameter is not valid if you use the `count` or `startKey` query parameters.
           */
          public java.lang.Boolean getExpand() {
            return expand;
          }

          /**
           * Optional. Specifies whether to expand the results. Set to `true` to expand the results.
           * This query parameter is not valid if you use the `count` or `startKey` query
           * parameters.
           */
          public List setExpand(java.lang.Boolean expand) {
            this.expand = expand;
            return this;
          }

          /**
           * Optional. Specifies whether to expand the results in shallow mode. Set to `true` to
           * expand the results in shallow mode.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean shallowExpand;

          /** Optional. Specifies whether to expand the results in shallow mode. Set to `true` to expand the
         results in shallow mode.
           */
          public java.lang.Boolean getShallowExpand() {
            return shallowExpand;
          }

          /**
           * Optional. Specifies whether to expand the results in shallow mode. Set to `true` to
           * expand the results in shallow mode.
           */
          public List setShallowExpand(java.lang.Boolean shallowExpand) {
            this.shallowExpand = shallowExpand;
            return this;
          }

          /**
           * **Note**: Must be used in conjunction with the `count` parameter.
           *
           * Name of the developer app from which to start displaying the list of developer apps.
           * For example, if you're returning 50 developer apps at a time (using the `count` query
           * parameter), you can view developer apps 50-99 by entering the name of the 50th
           * developer app. The developer app name is case sensitive.
           */
          @com.google.api.client.util.Key
          private java.lang.String startKey;

          /**** Note**: Must be used in conjunction with the `count` parameter.
        **
        ** Name of the developer app from which to start displaying the list of developer apps. For example,
        ** if you're returning 50 developer apps at a time (using the `count` query parameter), you can view
        ** developer apps 50-99 by entering the name of the 50th developer app. The developer app name is
        ** case sensitive.
        **

           */
          public java.lang.String getStartKey() {
            return startKey;
          }

          /**
           * **Note**: Must be used in conjunction with the `count` parameter.
           *
           * Name of the developer app from which to start displaying the list of developer apps.
           * For example, if you're returning 50 developer apps at a time (using the `count` query
           * parameter), you can view developer apps 50-99 by entering the name of the 50th
           * developer app. The developer app name is case sensitive.
           */
          public List setStartKey(java.lang.String startKey) {
            this.startKey = startKey;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates the details for a developer app. In addition, you can add an API product to a developer
         * app and automatically generate an API key for the app to use when calling APIs in the API
         * product.
         *
         * If you want to use an existing API key for the API product, add the API product to the API key
         * using the UpdateDeveloperAppKey API.
         *
         * Using this API, you cannot update the following:
         *
         * * App name as it is the primary key used to identify the app and cannot   be changed. * Scopes
         * associated with the app. Instead, use the   ReplaceDeveloperAppKey API.
         *
         * This API replaces the existing attributes with those specified in the request. Include or exclude
         * any existing attributes that you want to retain or delete, respectively.
         *
         * Create a request for the method "apps.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

          /**
           * Updates the details for a developer app. In addition, you can add an API product to a developer
           * app and automatically generate an API key for the app to use when calling APIs in the API
           * product.
           *
           * If you want to use an existing API key for the API product, add the API product to the API key
           * using the UpdateDeveloperAppKey API.
           *
           * Using this API, you cannot update the following:
           *
           * * App name as it is the primary key used to identify the app and cannot   be changed. * Scopes
           * associated with the app. Instead, use the   ReplaceDeveloperAppKey API.
           *
           * This API replaces the existing attributes with those specified in the request. Include or
           * exclude any existing attributes that you want to retain or delete, respectively.
           *
           * Create a request for the method "apps.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer app. Use the following structure in your request:
         *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperApp.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer app. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer app. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/apps/{app}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Attributes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Attributes.List request = apigee.attributes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Attributes attributes() {
          return new Attributes();
        }

        /**
         * The "attributes" collection of methods.
         */
        public class Attributes {

          /**
           * Deletes a developer app attribute.
           *
           * Create a request for the method "attributes.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the developer app attribute. Use the following structure in your
          request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");

            /**
             * Deletes a developer app attribute.
             *
             * Create a request for the method "attributes.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the developer app attribute. Use the following structure in your
          request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the developer app attribute. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns a developer app attribute.
           *
           * Create a request for the method "attributes.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the developer app attribute. Use the following structure in your
          request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");

            /**
             * Returns a developer app attribute.
             *
             * Create a request for the method "attributes.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the developer app attribute. Use the following structure in your
          request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the developer app attribute. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Returns a list of all developer app attributes.
           *
           * Create a request for the method "attributes.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the developer app. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

            private static final String REST_PATH = "v1/{+parent}/attributes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

            /**
             * Returns a list of all developer app attributes.
             *
             * Create a request for the method "attributes.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the developer app. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the developer app. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the developer app. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the developer app. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates a developer app attribute.
           *
           * **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and
           * API products) are cached for 180 seconds (current default). Any custom attributes associated with
           * these entities are cached for at least 180 seconds after the entity is accessed at runtime.
           * Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token
           * in less than 180 seconds.
           *
           * Create a request for the method "attributes.updateDeveloperAppAttribute".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDeveloperAppAttribute#execute()} method to invoke the remote
           * operation.
           *
           * @param name Required. Name of the developer app attribute. Use the following structure in your
          request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
           * @return the request
           */
          public UpdateDeveloperAppAttribute updateDeveloperAppAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) throws java.io.IOException {
            UpdateDeveloperAppAttribute result = new UpdateDeveloperAppAttribute(name, content);
            initialize(result);
            return result;
          }

          public class UpdateDeveloperAppAttribute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");

            /**
             * Updates a developer app attribute.
             *
             * **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and
             * API products) are cached for 180 seconds (current default). Any custom attributes associated
             * with these entities are cached for at least 180 seconds after the entity is accessed at
             * runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an
             * access token in less than 180 seconds.
             *
             * Create a request for the method "attributes.updateDeveloperAppAttribute".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdateDeveloperAppAttribute#execute()} method to invoke the remote
             * operation. <p> {@link UpdateDeveloperAppAttribute#initialize(com.google.api.client.googleapis.s
             * ervices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
             * after invoking the constructor. </p>
             *
             * @param name Required. Name of the developer app attribute. Use the following structure in your
          request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
             * @since 1.13
             */
            protected UpdateDeveloperAppAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
            }

            @Override
            public UpdateDeveloperAppAttribute set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateDeveloperAppAttribute) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateDeveloperAppAttribute setAccessToken(java.lang.String accessToken) {
              return (UpdateDeveloperAppAttribute) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateDeveloperAppAttribute setAlt(java.lang.String alt) {
              return (UpdateDeveloperAppAttribute) super.setAlt(alt);
            }

            @Override
            public UpdateDeveloperAppAttribute setCallback(java.lang.String callback) {
              return (UpdateDeveloperAppAttribute) super.setCallback(callback);
            }

            @Override
            public UpdateDeveloperAppAttribute setFields(java.lang.String fields) {
              return (UpdateDeveloperAppAttribute) super.setFields(fields);
            }

            @Override
            public UpdateDeveloperAppAttribute setKey(java.lang.String key) {
              return (UpdateDeveloperAppAttribute) super.setKey(key);
            }

            @Override
            public UpdateDeveloperAppAttribute setOauthToken(java.lang.String oauthToken) {
              return (UpdateDeveloperAppAttribute) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateDeveloperAppAttribute setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateDeveloperAppAttribute) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateDeveloperAppAttribute setQuotaUser(java.lang.String quotaUser) {
              return (UpdateDeveloperAppAttribute) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateDeveloperAppAttribute setUploadType(java.lang.String uploadType) {
              return (UpdateDeveloperAppAttribute) super.setUploadType(uploadType);
            }

            @Override
            public UpdateDeveloperAppAttribute setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateDeveloperAppAttribute) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the developer app attribute. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the developer app attribute. Use the following structure in your
             * request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
             */
            public UpdateDeveloperAppAttribute setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public UpdateDeveloperAppAttribute set(String parameterName, Object value) {
              return (UpdateDeveloperAppAttribute) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Keys collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Keys.List request = apigee.keys().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Keys keys() {
          return new Keys();
        }

        /**
         * The "keys" collection of methods.
         */
        public class Keys {

          /**
           * Creates a custom consumer key and secret for a developer app. This is particularly useful if you
           * want to migrate existing consumer keys and secrets to Apigee hybrid from another system.
           *
           * Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other
           * special characters are allowed.
           *
           * **Note**: To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each.
           *
           * After creating the consumer key and secret, associate the key with an API product using the
           * UpdateDeveloperAppKey API.
           *
           * If a consumer key and secret already exist, you can keep them or delete them using the
           * DeleteDeveloperAppKey API.
           *
           * Create a request for the method "keys.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Parent of the developer app key. Use the following structure in your
          request:
           *        `organizations/{org}/developers/{developer_email}/apps`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+parent}/keys";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

            /**
             * Creates a custom consumer key and secret for a developer app. This is particularly useful if
             * you want to migrate existing consumer keys and secrets to Apigee hybrid from another system.
             *
             * Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other
             * special characters are allowed.
             *
             * **Note**: To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each.
             *
             * After creating the consumer key and secret, associate the key with an API product using the
             * UpdateDeveloperAppKey API.
             *
             * If a consumer key and secret already exist, you can keep them or delete them using the
             * DeleteDeveloperAppKey API.
             *
             * Create a request for the method "keys.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Parent of the developer app key. Use the following structure in your
          request:
           *        `organizations/{org}/developers/{developer_email}/apps`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Parent of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Parent of the developer app key. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Parent of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps`
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an app's consumer key and removes all API products associated with the app. After the
           * consumer key is deleted, it cannot be used to access any APIs.
           *
           * **Note**: After you delete a consumer key, you may want to: 1. Create a new consumer key and
           * secret for the developer app using the CreateDeveloperAppKey API, and subsequently add an API
           * product to the key using the UpdateDeveloperAppKey API. 2. Delete the developer app, if it is no
           * longer required.
           *
           * Create a request for the method "keys.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Deletes an app's consumer key and removes all API products associated with the app. After the
             * consumer key is deleted, it cannot be used to access any APIs.
             *
             * **Note**: After you delete a consumer key, you may want to: 1. Create a new consumer key and
             * secret for the developer app using the CreateDeveloperAppKey API, and subsequently add an API
             * product to the key using the UpdateDeveloperAppKey API. 2. Delete the developer app, if it is
             * no longer required.
             *
             * Create a request for the method "keys.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Name of the developer app key. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Returns details for a consumer key for a developer app, including the key and secret value,
           * associated API products, and other information.
           *
           * Create a request for the method "keys.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Returns details for a consumer key for a developer app, including the key and secret value,
             * associated API products, and other information.
             *
             * Create a request for the method "keys.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Name of the developer app key. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Updates the scope of an app.
           *
           * This API replaces the existing scopes with those specified in the request. Include or exclude any
           * existing scopes that you want to retain or delete, respectively. The specified scopes must
           * already be defined for the API products associated with the app.
           *
           * This API sets the `scopes` element under the `apiProducts` element in the attributes of the app.
           *
           * Create a request for the method "keys.replaceDeveloperAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link ReplaceDeveloperAppKey#execute()} method to invoke the remote
           * operation.
           *
           * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
           * @return the request
           */
          public ReplaceDeveloperAppKey replaceDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
            ReplaceDeveloperAppKey result = new ReplaceDeveloperAppKey(name, content);
            initialize(result);
            return result;
          }

          public class ReplaceDeveloperAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Updates the scope of an app.
             *
             * This API replaces the existing scopes with those specified in the request. Include or exclude
             * any existing scopes that you want to retain or delete, respectively. The specified scopes must
             * already be defined for the API products associated with the app.
             *
             * This API sets the `scopes` element under the `apiProducts` element in the attributes of the
             * app.
             *
             * Create a request for the method "keys.replaceDeveloperAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link ReplaceDeveloperAppKey#execute()} method to invoke the remote
             * operation. <p> {@link ReplaceDeveloperAppKey#initialize(com.google.api.client.googleapis.servic
             * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @since 1.13
             */
            protected ReplaceDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public ReplaceDeveloperAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (ReplaceDeveloperAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public ReplaceDeveloperAppKey setAccessToken(java.lang.String accessToken) {
              return (ReplaceDeveloperAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public ReplaceDeveloperAppKey setAlt(java.lang.String alt) {
              return (ReplaceDeveloperAppKey) super.setAlt(alt);
            }

            @Override
            public ReplaceDeveloperAppKey setCallback(java.lang.String callback) {
              return (ReplaceDeveloperAppKey) super.setCallback(callback);
            }

            @Override
            public ReplaceDeveloperAppKey setFields(java.lang.String fields) {
              return (ReplaceDeveloperAppKey) super.setFields(fields);
            }

            @Override
            public ReplaceDeveloperAppKey setKey(java.lang.String key) {
              return (ReplaceDeveloperAppKey) super.setKey(key);
            }

            @Override
            public ReplaceDeveloperAppKey setOauthToken(java.lang.String oauthToken) {
              return (ReplaceDeveloperAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public ReplaceDeveloperAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ReplaceDeveloperAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ReplaceDeveloperAppKey setQuotaUser(java.lang.String quotaUser) {
              return (ReplaceDeveloperAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public ReplaceDeveloperAppKey setUploadType(java.lang.String uploadType) {
              return (ReplaceDeveloperAppKey) super.setUploadType(uploadType);
            }

            @Override
            public ReplaceDeveloperAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (ReplaceDeveloperAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Name of the developer app key. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public ReplaceDeveloperAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public ReplaceDeveloperAppKey set(String parameterName, Object value) {
              return (ReplaceDeveloperAppKey) super.set(parameterName, value);
            }
          }
          /**
           * Adds an API product to a developer app key, enabling the app that holds the key to access the API
           * resources bundled in the API product.
           *
           * In addition, you can add attributes to a developer app key. This API replaces the existing
           * attributes with those specified in the request. Include or exclude any existing attributes that
           * you want to retain or delete, respectively.
           *
           * You can use the same key to access all API products associated with the app.
           *
           * Create a request for the method "keys.updateDeveloperAppKey".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDeveloperAppKey#execute()} method to invoke the remote
           * operation.
           *
           * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
           * @return the request
           */
          public UpdateDeveloperAppKey updateDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
            UpdateDeveloperAppKey result = new UpdateDeveloperAppKey(name, content);
            initialize(result);
            return result;
          }

          public class UpdateDeveloperAppKey extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");

            /**
             * Adds an API product to a developer app key, enabling the app that holds the key to access the
             * API resources bundled in the API product.
             *
             * In addition, you can add attributes to a developer app key. This API replaces the existing
             * attributes with those specified in the request. Include or exclude any existing attributes that
             * you want to retain or delete, respectively.
             *
             * You can use the same key to access all API products associated with the app.
             *
             * Create a request for the method "keys.updateDeveloperAppKey".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdateDeveloperAppKey#execute()} method to invoke the remote
             * operation. <p> {@link UpdateDeveloperAppKey#initialize(com.google.api.client.googleapis.service
             * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
             * invoking the constructor. </p>
             *
             * @param name Name of the developer app key. Use the following structure in your request:
           *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @since 1.13
             */
            protected UpdateDeveloperAppKey(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
            }

            @Override
            public UpdateDeveloperAppKey set$Xgafv(java.lang.String $Xgafv) {
              return (UpdateDeveloperAppKey) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdateDeveloperAppKey setAccessToken(java.lang.String accessToken) {
              return (UpdateDeveloperAppKey) super.setAccessToken(accessToken);
            }

            @Override
            public UpdateDeveloperAppKey setAlt(java.lang.String alt) {
              return (UpdateDeveloperAppKey) super.setAlt(alt);
            }

            @Override
            public UpdateDeveloperAppKey setCallback(java.lang.String callback) {
              return (UpdateDeveloperAppKey) super.setCallback(callback);
            }

            @Override
            public UpdateDeveloperAppKey setFields(java.lang.String fields) {
              return (UpdateDeveloperAppKey) super.setFields(fields);
            }

            @Override
            public UpdateDeveloperAppKey setKey(java.lang.String key) {
              return (UpdateDeveloperAppKey) super.setKey(key);
            }

            @Override
            public UpdateDeveloperAppKey setOauthToken(java.lang.String oauthToken) {
              return (UpdateDeveloperAppKey) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdateDeveloperAppKey setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdateDeveloperAppKey) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdateDeveloperAppKey setQuotaUser(java.lang.String quotaUser) {
              return (UpdateDeveloperAppKey) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdateDeveloperAppKey setUploadType(java.lang.String uploadType) {
              return (UpdateDeveloperAppKey) super.setUploadType(uploadType);
            }

            @Override
            public UpdateDeveloperAppKey setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdateDeveloperAppKey) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Name of the developer app key. Use the following structure in your request:
           `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Name of the developer app key. Use the following structure in your request:
             * `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
             */
            public UpdateDeveloperAppKey setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /**
             * Approve or revoke the consumer key by setting this value to `approve` or `revoke`,
             * respectively.
             */
            @com.google.api.client.util.Key
            private java.lang.String action;

            /** Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively.
             */
            public java.lang.String getAction() {
              return action;
            }

            /**
             * Approve or revoke the consumer key by setting this value to `approve` or `revoke`,
             * respectively.
             */
            public UpdateDeveloperAppKey setAction(java.lang.String action) {
              this.action = action;
              return this;
            }

            @Override
            public UpdateDeveloperAppKey set(String parameterName, Object value) {
              return (UpdateDeveloperAppKey) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Apiproducts collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Apiproducts.List request = apigee.apiproducts().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Apiproducts apiproducts() {
            return new Apiproducts();
          }

          /**
           * The "apiproducts" collection of methods.
           */
          public class Apiproducts {

            /**
             * Removes an API product from an app's consumer key. After the API product is removed, the app
             * cannot access the API resources defined in that API product.
             *
             * **Note**: The consumer key is not removed, only its association with the API product.
             *
             * Create a request for the method "apiproducts.delete".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
             *
             * @param name Name of the API product in the developer app key in the following
            format:
             *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apipr
             *        oduct}`
             * @return the request
             */
            public Delete delete(java.lang.String name) throws java.io.IOException {
              Delete result = new Delete(name);
              initialize(result);
              return result;
            }

            public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");

              /**
               * Removes an API product from an app's consumer key. After the API product is removed, the app
               * cannot access the API resources defined in that API product.
               *
               * **Note**: The consumer key is not removed, only its association with the API product.
               *
               * Create a request for the method "apiproducts.delete".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
               * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Name of the API product in the developer app key in the following
            format:
             *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apipr
             *        oduct}`
               * @since 1.13
               */
              protected Delete(java.lang.String name) {
                super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
              }

              @Override
              public Delete set$Xgafv(java.lang.String $Xgafv) {
                return (Delete) super.set$Xgafv($Xgafv);
              }

              @Override
              public Delete setAccessToken(java.lang.String accessToken) {
                return (Delete) super.setAccessToken(accessToken);
              }

              @Override
              public Delete setAlt(java.lang.String alt) {
                return (Delete) super.setAlt(alt);
              }

              @Override
              public Delete setCallback(java.lang.String callback) {
                return (Delete) super.setCallback(callback);
              }

              @Override
              public Delete setFields(java.lang.String fields) {
                return (Delete) super.setFields(fields);
              }

              @Override
              public Delete setKey(java.lang.String key) {
                return (Delete) super.setKey(key);
              }

              @Override
              public Delete setOauthToken(java.lang.String oauthToken) {
                return (Delete) super.setOauthToken(oauthToken);
              }

              @Override
              public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Delete) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Delete setQuotaUser(java.lang.String quotaUser) {
                return (Delete) super.setQuotaUser(quotaUser);
              }

              @Override
              public Delete setUploadType(java.lang.String uploadType) {
                return (Delete) super.setUploadType(uploadType);
              }

              @Override
              public Delete setUploadProtocol(java.lang.String uploadProtocol) {
                return (Delete) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Name of the API product in the developer app key in the following format: `organiza
               * tions/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiprod
               * uct}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Name of the API product in the developer app key in the following format:
             `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Name of the API product in the developer app key in the following format: `organiza
               * tions/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiprod
               * uct}`
               */
              public Delete setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public Delete set(String parameterName, Object value) {
                return (Delete) super.set(parameterName, value);
              }
            }
            /**
             * Approve or revoke an app's consumer key. After a consumer key is approved, the app can use it to
             * access APIs.
             *
             * A consumer key that is revoked or pending cannot be used to access an API. Any access tokens
             * associated with a revoked consumer key will remain active. However, Apigee hybrid checks the
             * status of the consumer key and if set to `revoked` will not allow access to the API.
             *
             * Create a request for the method "apiproducts.updateDeveloperAppKeyApiProduct".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link UpdateDeveloperAppKeyApiProduct#execute()} method to invoke the
             * remote operation.
             *
             * @param name Name of the API product in the developer app key in the following
            format:
             *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apipr
             *        oduct}`
             * @return the request
             */
            public UpdateDeveloperAppKeyApiProduct updateDeveloperAppKeyApiProduct(java.lang.String name) throws java.io.IOException {
              UpdateDeveloperAppKeyApiProduct result = new UpdateDeveloperAppKeyApiProduct(name);
              initialize(result);
              return result;
            }

            public class UpdateDeveloperAppKeyApiProduct extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");

              /**
               * Approve or revoke an app's consumer key. After a consumer key is approved, the app can use it
               * to access APIs.
               *
               * A consumer key that is revoked or pending cannot be used to access an API. Any access tokens
               * associated with a revoked consumer key will remain active. However, Apigee hybrid checks the
               * status of the consumer key and if set to `revoked` will not allow access to the API.
               *
               * Create a request for the method "apiproducts.updateDeveloperAppKeyApiProduct".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link UpdateDeveloperAppKeyApiProduct#execute()} method to invoke the
               * remote operation. <p> {@link UpdateDeveloperAppKeyApiProduct#initialize(com.google.api.client.g
               * oogleapis.services.AbstractGoogleClientRequest)} must be called to initialize this instance
               * immediately after invoking the constructor. </p>
               *
               * @param name Name of the API product in the developer app key in the following
            format:
             *        `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apipr
             *        oduct}`
               * @since 1.13
               */
              protected UpdateDeveloperAppKeyApiProduct(java.lang.String name) {
                super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct set$Xgafv(java.lang.String $Xgafv) {
                return (UpdateDeveloperAppKeyApiProduct) super.set$Xgafv($Xgafv);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setAccessToken(java.lang.String accessToken) {
                return (UpdateDeveloperAppKeyApiProduct) super.setAccessToken(accessToken);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setAlt(java.lang.String alt) {
                return (UpdateDeveloperAppKeyApiProduct) super.setAlt(alt);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setCallback(java.lang.String callback) {
                return (UpdateDeveloperAppKeyApiProduct) super.setCallback(callback);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setFields(java.lang.String fields) {
                return (UpdateDeveloperAppKeyApiProduct) super.setFields(fields);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setKey(java.lang.String key) {
                return (UpdateDeveloperAppKeyApiProduct) super.setKey(key);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setOauthToken(java.lang.String oauthToken) {
                return (UpdateDeveloperAppKeyApiProduct) super.setOauthToken(oauthToken);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (UpdateDeveloperAppKeyApiProduct) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setQuotaUser(java.lang.String quotaUser) {
                return (UpdateDeveloperAppKeyApiProduct) super.setQuotaUser(quotaUser);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setUploadType(java.lang.String uploadType) {
                return (UpdateDeveloperAppKeyApiProduct) super.setUploadType(uploadType);
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct setUploadProtocol(java.lang.String uploadProtocol) {
                return (UpdateDeveloperAppKeyApiProduct) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Name of the API product in the developer app key in the following format: `organiza
               * tions/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiprod
               * uct}`
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Name of the API product in the developer app key in the following format:
             `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Name of the API product in the developer app key in the following format: `organiza
               * tions/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiprod
               * uct}`
               */
              public UpdateDeveloperAppKeyApiProduct setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$");
                }
                this.name = name;
                return this;
              }

              /**
               * Approve or revoke the consumer key by setting this value to `approve` or `revoke`,
               * respectively.
               */
              @com.google.api.client.util.Key
              private java.lang.String action;

              /** Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively.
               */
              public java.lang.String getAction() {
                return action;
              }

              /**
               * Approve or revoke the consumer key by setting this value to `approve` or `revoke`,
               * respectively.
               */
              public UpdateDeveloperAppKeyApiProduct setAction(java.lang.String action) {
                this.action = action;
                return this;
              }

              @Override
              public UpdateDeveloperAppKeyApiProduct set(String parameterName, Object value) {
                return (UpdateDeveloperAppKeyApiProduct) super.set(parameterName, value);
              }
            }

          }
          /**
           * An accessor for creating requests from the Create collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Create.List request = apigee.create().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Create create() {
            return new Create();
          }

          /**
           * The "create" collection of methods.
           */
          public class Create {

            /**
             * Creates a custom consumer key and secret for a developer app. This is particularly useful if you
             * want to migrate existing consumer keys and secrets to Apigee hybrid from another system.
             *
             * Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other
             * special characters are allowed.
             *
             * **Note**: To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each.
             *
             * After creating the consumer key and secret, associate the key with an API product using the
             * UpdateDeveloperAppKey API.
             *
             * If a consumer key and secret already exist, you can keep them or delete them using the
             * DeleteDeveloperAppKey API.
             *
             * Create a request for the method "create.create".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link CreateRequest#execute()} method to invoke the remote operation.
             *
             * @param parent Parent of the developer app key. Use the following structure in your
            request:
             *        `organizations/{org}/developers/{developer_email}/apps`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
             * @return the request
             */
            public CreateRequest create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) throws java.io.IOException {
              CreateRequest result = new CreateRequest(parent, content);
              initialize(result);
              return result;
            }

            public class CreateRequest extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey> {

              private static final String REST_PATH = "v1/{+parent}/keys/create";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");

              /**
               * Creates a custom consumer key and secret for a developer app. This is particularly useful if
               * you want to migrate existing consumer keys and secrets to Apigee hybrid from another system.
               *
               * Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other
               * special characters are allowed.
               *
               * **Note**: To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each.
               *
               * After creating the consumer key and secret, associate the key with an API product using the
               * UpdateDeveloperAppKey API.
               *
               * If a consumer key and secret already exist, you can keep them or delete them using the
               * DeleteDeveloperAppKey API.
               *
               * Create a request for the method "create.create".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link CreateRequest#execute()} method to invoke the remote operation. <p>
               * {@link CreateRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
               * equest)} must be called to initialize this instance immediately after invoking the constructor.
               * </p>
               *
               * @param parent Parent of the developer app key. Use the following structure in your
            request:
             *        `organizations/{org}/developers/{developer_email}/apps`
               * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey}
               * @since 1.13
               */
              protected CreateRequest(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey content) {
                super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeveloperAppKey.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
                }
              }

              @Override
              public CreateRequest set$Xgafv(java.lang.String $Xgafv) {
                return (CreateRequest) super.set$Xgafv($Xgafv);
              }

              @Override
              public CreateRequest setAccessToken(java.lang.String accessToken) {
                return (CreateRequest) super.setAccessToken(accessToken);
              }

              @Override
              public CreateRequest setAlt(java.lang.String alt) {
                return (CreateRequest) super.setAlt(alt);
              }

              @Override
              public CreateRequest setCallback(java.lang.String callback) {
                return (CreateRequest) super.setCallback(callback);
              }

              @Override
              public CreateRequest setFields(java.lang.String fields) {
                return (CreateRequest) super.setFields(fields);
              }

              @Override
              public CreateRequest setKey(java.lang.String key) {
                return (CreateRequest) super.setKey(key);
              }

              @Override
              public CreateRequest setOauthToken(java.lang.String oauthToken) {
                return (CreateRequest) super.setOauthToken(oauthToken);
              }

              @Override
              public CreateRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (CreateRequest) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public CreateRequest setQuotaUser(java.lang.String quotaUser) {
                return (CreateRequest) super.setQuotaUser(quotaUser);
              }

              @Override
              public CreateRequest setUploadType(java.lang.String uploadType) {
                return (CreateRequest) super.setUploadType(uploadType);
              }

              @Override
              public CreateRequest setUploadProtocol(java.lang.String uploadProtocol) {
                return (CreateRequest) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Parent of the developer app key. Use the following structure in your request:
               * `organizations/{org}/developers/{developer_email}/apps`
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Parent of the developer app key. Use the following structure in your request:
             `organizations/{org}/developers/{developer_email}/apps`
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Parent of the developer app key. Use the following structure in your request:
               * `organizations/{org}/developers/{developer_email}/apps`
               */
              public CreateRequest setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public CreateRequest set(String parameterName, Object value) {
                return (CreateRequest) super.set(parameterName, value);
              }
            }

          }
        }
      }
      /**
       * An accessor for creating requests from the Attributes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Attributes.List request = apigee.attributes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Attributes attributes() {
        return new Attributes();
      }

      /**
       * The "attributes" collection of methods.
       */
      public class Attributes {

        /**
         * Deletes a developer attribute.
         *
         * Create a request for the method "attributes.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer attribute. Use the following structure in your
        request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");

          /**
           * Deletes a developer attribute.
           *
           * Create a request for the method "attributes.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer attribute. Use the following structure in your
        request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer attribute. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Returns the value of the specified developer attribute.
         *
         * Create a request for the method "attributes.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the developer attribute. Use the following structure in your
        request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");

          /**
           * Returns the value of the specified developer attribute.
           *
           * Create a request for the method "attributes.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the developer attribute. Use the following structure in your
        request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer attribute. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Returns a list of all developer attributes.
         *
         * Create a request for the method "attributes.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Email address of the developer for which attributes are being listed in the
        following
         *        format:
          `organizations/{org}/developers/{developer_email}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes> {

          private static final String REST_PATH = "v1/{+parent}/attributes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+$");

          /**
           * Returns a list of all developer attributes.
           *
           * Create a request for the method "attributes.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Email address of the developer for which attributes are being listed in the
        following
         *        format:
          `organizations/{org}/developers/{developer_email}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attributes.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Email address of the developer for which attributes are being listed in the
           * following format: `organizations/{org}/developers/{developer_email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Email address of the developer for which attributes are being listed in the following
         format: `organizations/{org}/developers/{developer_email}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Email address of the developer for which attributes are being listed in the
           * following format: `organizations/{org}/developers/{developer_email}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a developer attribute.
         *
         * **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and
         * API products) are cached for 180 seconds (default). Any custom attributes associated with these
         * entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore,
         * an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than
         * 180 seconds.
         *
         * Create a request for the method "attributes.updateDeveloperAttribute".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateDeveloperAttribute#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the developer attribute. Use the following structure in your
        request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
         * @return the request
         */
        public UpdateDeveloperAttribute updateDeveloperAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) throws java.io.IOException {
          UpdateDeveloperAttribute result = new UpdateDeveloperAttribute(name, content);
          initialize(result);
          return result;
        }

        public class UpdateDeveloperAttribute extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");

          /**
           * Updates a developer attribute.
           *
           * **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and
           * API products) are cached for 180 seconds (default). Any custom attributes associated with these
           * entities are cached for at least 180 seconds after the entity is accessed at runtime.
           * Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token
           * in less than 180 seconds.
           *
           * Create a request for the method "attributes.updateDeveloperAttribute".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateDeveloperAttribute#execute()} method to invoke the remote
           * operation. <p> {@link UpdateDeveloperAttribute#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. Name of the developer attribute. Use the following structure in your
        request:
         *        `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute}
           * @since 1.13
           */
          protected UpdateDeveloperAttribute(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Attribute.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
          }

          @Override
          public UpdateDeveloperAttribute set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateDeveloperAttribute) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateDeveloperAttribute setAccessToken(java.lang.String accessToken) {
            return (UpdateDeveloperAttribute) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateDeveloperAttribute setAlt(java.lang.String alt) {
            return (UpdateDeveloperAttribute) super.setAlt(alt);
          }

          @Override
          public UpdateDeveloperAttribute setCallback(java.lang.String callback) {
            return (UpdateDeveloperAttribute) super.setCallback(callback);
          }

          @Override
          public UpdateDeveloperAttribute setFields(java.lang.String fields) {
            return (UpdateDeveloperAttribute) super.setFields(fields);
          }

          @Override
          public UpdateDeveloperAttribute setKey(java.lang.String key) {
            return (UpdateDeveloperAttribute) super.setKey(key);
          }

          @Override
          public UpdateDeveloperAttribute setOauthToken(java.lang.String oauthToken) {
            return (UpdateDeveloperAttribute) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateDeveloperAttribute setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateDeveloperAttribute) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateDeveloperAttribute setQuotaUser(java.lang.String quotaUser) {
            return (UpdateDeveloperAttribute) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateDeveloperAttribute setUploadType(java.lang.String uploadType) {
            return (UpdateDeveloperAttribute) super.setUploadType(uploadType);
          }

          @Override
          public UpdateDeveloperAttribute setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateDeveloperAttribute) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the developer attribute. Use the following structure in your request:
         `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the developer attribute. Use the following structure in your request:
           * `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
           */
          public UpdateDeveloperAttribute setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public UpdateDeveloperAttribute set(String parameterName, Object value) {
            return (UpdateDeveloperAttribute) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Environments collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Environments.List request = apigee.environments().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Environments environments() {
      return new Environments();
    }

    /**
     * The "environments" collection of methods.
     */
    public class Environments {

      /**
       * Creates an environment in an organization.
       *
       * Create a request for the method "environments.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in which the environment will
      be created in the following format:
       *        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+parent}/environments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates an environment in an organization.
         *
         * Create a request for the method "environments.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in which the environment will
      be created in the following format:
       *        `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in which the environment will be created in the
         * following format: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in which the environment will be created in the following
       format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in which the environment will be created in the
         * following format: `organizations/{org}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /**
         * Optional. Name of the environment. Alternatively, the name may be specified in the
         * request body in the environment_id field.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Optional. Name of the environment. Alternatively, the name may be specified in the request body in
       the environment_id field.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Optional. Name of the environment. Alternatively, the name may be specified in the
         * request body in the environment_id field.
         */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an environment from an organization. Returns the deleted environment resource.
       *
       * Create a request for the method "environments.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment to delete in the following format:
       *        `organizations/{org}/environments/{env}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Deletes an environment from an organization. Returns the deleted environment resource.
         *
         * Create a request for the method "environments.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment to delete in the following format:
       *        `organizations/{org}/environments/{env}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment to delete in the following format:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment to delete in the following format:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment to delete in the following format:
         * `organizations/{org}/environments/{env}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets environment details.
       *
       * Create a request for the method "environments.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment in the following format:
       `organizations/{org}/environments/{env}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Gets environment details.
         *
         * Create a request for the method "environments.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment in the following format:
       `organizations/{org}/environments/{env}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment in the following format:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment in the following format:
         * `organizations/{org}/environments/{env}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Get Google Cloud Storage (GCS) signed url for specific organization and environment. Collection
       * agent uses this signed url to upload data to GCS bucket.
       *
       * Create a request for the method "environments.getDatalocation".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDatalocation#execute()} method to invoke the remote operation.
       *
       * @param name Required. The parent organization and environment names. Must be of the
      form
       *        `organizations/{org}/environments/{env}/datalocation`.
       * @return the request
       */
      public GetDatalocation getDatalocation(java.lang.String name) throws java.io.IOException {
        GetDatalocation result = new GetDatalocation(name);
        initialize(result);
        return result;
      }

      public class GetDatalocation extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataLocation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/datalocation$");

        /**
         * Get Google Cloud Storage (GCS) signed url for specific organization and environment. Collection
         * agent uses this signed url to upload data to GCS bucket.
         *
         * Create a request for the method "environments.getDatalocation".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDatalocation#execute()} method to invoke the remote operation.
         * <p> {@link GetDatalocation#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
         * lientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. The parent organization and environment names. Must be of the
      form
       *        `organizations/{org}/environments/{env}/datalocation`.
         * @since 1.13
         */
        protected GetDatalocation(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DataLocation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/datalocation$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDatalocation set$Xgafv(java.lang.String $Xgafv) {
          return (GetDatalocation) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDatalocation setAccessToken(java.lang.String accessToken) {
          return (GetDatalocation) super.setAccessToken(accessToken);
        }

        @Override
        public GetDatalocation setAlt(java.lang.String alt) {
          return (GetDatalocation) super.setAlt(alt);
        }

        @Override
        public GetDatalocation setCallback(java.lang.String callback) {
          return (GetDatalocation) super.setCallback(callback);
        }

        @Override
        public GetDatalocation setFields(java.lang.String fields) {
          return (GetDatalocation) super.setFields(fields);
        }

        @Override
        public GetDatalocation setKey(java.lang.String key) {
          return (GetDatalocation) super.setKey(key);
        }

        @Override
        public GetDatalocation setOauthToken(java.lang.String oauthToken) {
          return (GetDatalocation) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDatalocation setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDatalocation) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDatalocation setQuotaUser(java.lang.String quotaUser) {
          return (GetDatalocation) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDatalocation setUploadType(java.lang.String uploadType) {
          return (GetDatalocation) super.setUploadType(uploadType);
        }

        @Override
        public GetDatalocation setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDatalocation) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization and environment names. Must be of the form
         * `organizations/{org}/environments/{env}/datalocation`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The parent organization and environment names. Must be of the form
       `organizations/{org}/environments/{env}/datalocation`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The parent organization and environment names. Must be of the form
         * `organizations/{org}/environments/{env}/datalocation`.
         */
        public GetDatalocation setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/datalocation$");
          }
          this.name = name;
          return this;
        }

        /** Content-Type for uploaded file. */
        @com.google.api.client.util.Key
        private java.lang.String contentType;

        /** Content-Type for uploaded file.
         */
        public java.lang.String getContentType() {
          return contentType;
        }

        /** Content-Type for uploaded file. */
        public GetDatalocation setContentType(java.lang.String contentType) {
          this.contentType = contentType;
          return this;
        }

        /** Required. Dataset could be one of `api`, `mint`, `trace` and `event` */
        @com.google.api.client.util.Key
        private java.lang.String dataset;

        /** Required. Dataset could be one of `api`, `mint`, `trace` and `event`
         */
        public java.lang.String getDataset() {
          return dataset;
        }

        /** Required. Dataset could be one of `api`, `mint`, `trace` and `event` */
        public GetDatalocation setDataset(java.lang.String dataset) {
          this.dataset = dataset;
          return this;
        }

        /** Required. Relative path to the GCS bucket */
        @com.google.api.client.util.Key
        private java.lang.String relativeFilePath;

        /** Required. Relative path to the GCS bucket
         */
        public java.lang.String getRelativeFilePath() {
          return relativeFilePath;
        }

        /** Required. Relative path to the GCS bucket */
        public GetDatalocation setRelativeFilePath(java.lang.String relativeFilePath) {
          this.relativeFilePath = relativeFilePath;
          return this;
        }

        /** Required. Repository name */
        @com.google.api.client.util.Key
        private java.lang.String repo;

        /** Required. Repository name
         */
        public java.lang.String getRepo() {
          return repo;
        }

        /** Required. Repository name */
        public GetDatalocation setRepo(java.lang.String repo) {
          this.repo = repo;
          return this;
        }

        @Override
        public GetDatalocation set(String parameterName, Object value) {
          return (GetDatalocation) super.set(parameterName, value);
        }
      }
      /**
       * Gets the debug mask singleton resource for an Environment.
       *
       * Create a request for the method "environments.getDebugmask".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDebugmask#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the Environment debug mask to get. Must be of the
      form
       *        `organizations/{org}/environments/{env}/debugmask`.
       * @return the request
       */
      public GetDebugmask getDebugmask(java.lang.String name) throws java.io.IOException {
        GetDebugmask result = new GetDebugmask(name);
        initialize(result);
        return result;
      }

      public class GetDebugmask extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/debugmask$");

        /**
         * Gets the debug mask singleton resource for an Environment.
         *
         * Create a request for the method "environments.getDebugmask".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDebugmask#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetDebugmask#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the Environment debug mask to get. Must be of the
      form
       *        `organizations/{org}/environments/{env}/debugmask`.
         * @since 1.13
         */
        protected GetDebugmask(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDebugmask set$Xgafv(java.lang.String $Xgafv) {
          return (GetDebugmask) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDebugmask setAccessToken(java.lang.String accessToken) {
          return (GetDebugmask) super.setAccessToken(accessToken);
        }

        @Override
        public GetDebugmask setAlt(java.lang.String alt) {
          return (GetDebugmask) super.setAlt(alt);
        }

        @Override
        public GetDebugmask setCallback(java.lang.String callback) {
          return (GetDebugmask) super.setCallback(callback);
        }

        @Override
        public GetDebugmask setFields(java.lang.String fields) {
          return (GetDebugmask) super.setFields(fields);
        }

        @Override
        public GetDebugmask setKey(java.lang.String key) {
          return (GetDebugmask) super.setKey(key);
        }

        @Override
        public GetDebugmask setOauthToken(java.lang.String oauthToken) {
          return (GetDebugmask) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDebugmask setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDebugmask) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDebugmask setQuotaUser(java.lang.String quotaUser) {
          return (GetDebugmask) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDebugmask setUploadType(java.lang.String uploadType) {
          return (GetDebugmask) super.setUploadType(uploadType);
        }

        @Override
        public GetDebugmask setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDebugmask) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the Environment debug mask to get. Must be of the form
         * `organizations/{org}/environments/{env}/debugmask`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the Environment debug mask to get. Must be of the form
       `organizations/{org}/environments/{env}/debugmask`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the Environment debug mask to get. Must be of the form
         * `organizations/{org}/environments/{env}/debugmask`.
         */
        public GetDebugmask setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetDebugmask set(String parameterName, Object value) {
          return (GetDebugmask) super.set(parameterName, value);
        }
      }
      /**
       * Gets the deployed configuration for an environment.
       *
       * Create a request for the method "environments.getDeployedConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDeployedConfig#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment deployed configuration resource
      in the following format:
       *        `organizations/{org}/environments/{env}/deployedConfig`
       * @return the request
       */
      public GetDeployedConfig getDeployedConfig(java.lang.String name) throws java.io.IOException {
        GetDeployedConfig result = new GetDeployedConfig(name);
        initialize(result);
        return result;
      }

      public class GetDeployedConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentConfig> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/deployedConfig$");

        /**
         * Gets the deployed configuration for an environment.
         *
         * Create a request for the method "environments.getDeployedConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDeployedConfig#execute()} method to invoke the remote operation.
         * <p> {@link GetDeployedConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. Name of the environment deployed configuration resource
      in the following format:
       *        `organizations/{org}/environments/{env}/deployedConfig`
         * @since 1.13
         */
        protected GetDeployedConfig(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EnvironmentConfig.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/deployedConfig$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDeployedConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetDeployedConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDeployedConfig setAccessToken(java.lang.String accessToken) {
          return (GetDeployedConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetDeployedConfig setAlt(java.lang.String alt) {
          return (GetDeployedConfig) super.setAlt(alt);
        }

        @Override
        public GetDeployedConfig setCallback(java.lang.String callback) {
          return (GetDeployedConfig) super.setCallback(callback);
        }

        @Override
        public GetDeployedConfig setFields(java.lang.String fields) {
          return (GetDeployedConfig) super.setFields(fields);
        }

        @Override
        public GetDeployedConfig setKey(java.lang.String key) {
          return (GetDeployedConfig) super.setKey(key);
        }

        @Override
        public GetDeployedConfig setOauthToken(java.lang.String oauthToken) {
          return (GetDeployedConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDeployedConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDeployedConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDeployedConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetDeployedConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDeployedConfig setUploadType(java.lang.String uploadType) {
          return (GetDeployedConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetDeployedConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDeployedConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment deployed configuration resource in the following
         * format: `organizations/{org}/environments/{env}/deployedConfig`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment deployed configuration resource in the following format:
       `organizations/{org}/environments/{env}/deployedConfig`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment deployed configuration resource in the following
         * format: `organizations/{org}/environments/{env}/deployedConfig`
         */
        public GetDeployedConfig setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/deployedConfig$");
          }
          this.name = name;
          return this;
        }

        @Override
        public GetDeployedConfig set(String parameterName, Object value) {
          return (GetDeployedConfig) super.set(parameterName, value);
        }
      }
      /**
       * Gets the IAM policy on an environment. For more information, see [Manage users, roles, and
       * permissions using the API](/hybrid/manage-users-roles).
       *
       * You must have the `apigee.environments.getIamPolicy` permission to call this API.
       *
       * Create a request for the method "environments.getIamPolicy".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
       * @return the request
       */
      public GetIamPolicy getIamPolicy(java.lang.String resource) throws java.io.IOException {
        GetIamPolicy result = new GetIamPolicy(resource);
        initialize(result);
        return result;
      }

      public class GetIamPolicy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1Policy> {

        private static final String REST_PATH = "v1/{+resource}:getIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Gets the IAM policy on an environment. For more information, see [Manage users, roles, and
         * permissions using the API](/hybrid/manage-users-roles).
         *
         * You must have the `apigee.environments.getIamPolicy` permission to call this API.
         *
         * Create a request for the method "environments.getIamPolicy".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetIamPolicy#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being requested.
      See the operation documentation for
       *        the appropriate value for this field.
         * @since 1.13
         */
        protected GetIamPolicy(java.lang.String resource) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleIamV1Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (GetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (GetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public GetIamPolicy setAlt(java.lang.String alt) {
          return (GetIamPolicy) super.setAlt(alt);
        }

        @Override
        public GetIamPolicy setCallback(java.lang.String callback) {
          return (GetIamPolicy) super.setCallback(callback);
        }

        @Override
        public GetIamPolicy setFields(java.lang.String fields) {
          return (GetIamPolicy) super.setFields(fields);
        }

        @Override
        public GetIamPolicy setKey(java.lang.String key) {
          return (GetIamPolicy) super.setKey(key);
        }

        @Override
        public GetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (GetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public GetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (GetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetIamPolicy setUploadType(java.lang.String uploadType) {
          return (GetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public GetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being requested. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public GetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        /**
         * Optional. The policy format version to be returned.
         *
         * Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
         *
         * Requests for policies with any conditional bindings must specify version 3. Policies
         * without any conditional bindings may specify any valid value or leave the field unset.
         */
        @com.google.api.client.util.Key("options.requestedPolicyVersion")
        private java.lang.Integer optionsRequestedPolicyVersion;

        /** Optional. The policy format version to be returned.

       Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.

       Requests for policies with any conditional bindings must specify version 3. Policies without any
       conditional bindings may specify any valid value or leave the field unset.
         */
        public java.lang.Integer getOptionsRequestedPolicyVersion() {
          return optionsRequestedPolicyVersion;
        }

        /**
         * Optional. The policy format version to be returned.
         *
         * Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.
         *
         * Requests for policies with any conditional bindings must specify version 3. Policies
         * without any conditional bindings may specify any valid value or leave the field unset.
         */
        public GetIamPolicy setOptionsRequestedPolicyVersion(java.lang.Integer optionsRequestedPolicyVersion) {
          this.optionsRequestedPolicyVersion = optionsRequestedPolicyVersion;
          return this;
        }

        @Override
        public GetIamPolicy set(String parameterName, Object value) {
          return (GetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Lists all environments in an organization.
       *
       * Create a request for the method "environments.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the organization in the following format:
        `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.List.> {

        private static final String REST_PATH = "v1/{+parent}/environments";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all environments in an organization.
         *
         * Create a request for the method "environments.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the organization in the following format:
        `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.List..class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the organization in the following format: `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the organization in the following format: `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the organization in the following format: `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Sets the IAM policy on an environment, if the policy already exists it will be replaced. For more
       * information, see [Manage users, roles, and permissions using the API](/hybrid/manage-users-
       * roles).
       *
       * You must have the `apigee.environments.setIamPolicy` permission to call this API.
       *
       * Create a request for the method "environments.setIamPolicy".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest}
       * @return the request
       */
      public SetIamPolicy setIamPolicy(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest content) throws java.io.IOException {
        SetIamPolicy result = new SetIamPolicy(resource, content);
        initialize(result);
        return result;
      }

      public class SetIamPolicy extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1Policy> {

        private static final String REST_PATH = "v1/{+resource}:setIamPolicy";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Sets the IAM policy on an environment, if the policy already exists it will be replaced. For
         * more information, see [Manage users, roles, and permissions using the API](/hybrid/manage-
         * users-roles).
         *
         * You must have the `apigee.environments.setIamPolicy` permission to call this API.
         *
         * Create a request for the method "environments.setIamPolicy".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link SetIamPolicy#execute()} method to invoke the remote operation. <p>
         * {@link
         * SetIamPolicy#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy is being specified.
      See the operation documentation for
       *        the appropriate value for this field.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest}
         * @since 1.13
         */
        protected SetIamPolicy(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1SetIamPolicyRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleIamV1Policy.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public SetIamPolicy set$Xgafv(java.lang.String $Xgafv) {
          return (SetIamPolicy) super.set$Xgafv($Xgafv);
        }

        @Override
        public SetIamPolicy setAccessToken(java.lang.String accessToken) {
          return (SetIamPolicy) super.setAccessToken(accessToken);
        }

        @Override
        public SetIamPolicy setAlt(java.lang.String alt) {
          return (SetIamPolicy) super.setAlt(alt);
        }

        @Override
        public SetIamPolicy setCallback(java.lang.String callback) {
          return (SetIamPolicy) super.setCallback(callback);
        }

        @Override
        public SetIamPolicy setFields(java.lang.String fields) {
          return (SetIamPolicy) super.setFields(fields);
        }

        @Override
        public SetIamPolicy setKey(java.lang.String key) {
          return (SetIamPolicy) super.setKey(key);
        }

        @Override
        public SetIamPolicy setOauthToken(java.lang.String oauthToken) {
          return (SetIamPolicy) super.setOauthToken(oauthToken);
        }

        @Override
        public SetIamPolicy setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SetIamPolicy) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SetIamPolicy setQuotaUser(java.lang.String quotaUser) {
          return (SetIamPolicy) super.setQuotaUser(quotaUser);
        }

        @Override
        public SetIamPolicy setUploadType(java.lang.String uploadType) {
          return (SetIamPolicy) super.setUploadType(uploadType);
        }

        @Override
        public SetIamPolicy setUploadProtocol(java.lang.String uploadProtocol) {
          return (SetIamPolicy) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy is being specified. See the operation documentation for
       the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy is being specified. See the operation
         * documentation for the appropriate value for this field.
         */
        public SetIamPolicy setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public SetIamPolicy set(String parameterName, Object value) {
          return (SetIamPolicy) super.set(parameterName, value);
        }
      }
      /**
       * Creates a subscription for the environment's Pub/Sub topic. The server will assign a random name
       * for this subscription. The "name" and "push_config" must *not* be specified.
       *
       * Create a request for the method "environments.subscribe".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Subscribe#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the environment to subscribe in the following format:
       *        `organizations/{org}/environments/{env}`
       * @return the request
       */
      public Subscribe subscribe(java.lang.String parent) throws java.io.IOException {
        Subscribe result = new Subscribe(parent);
        initialize(result);
        return result;
      }

      public class Subscribe extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription> {

        private static final String REST_PATH = "v1/{+parent}:subscribe";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Creates a subscription for the environment's Pub/Sub topic. The server will assign a random
         * name for this subscription. The "name" and "push_config" must *not* be specified.
         *
         * Create a request for the method "environments.subscribe".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Subscribe#execute()} method to invoke the remote operation. <p>
         * {@link
         * Subscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the environment to subscribe in the following format:
       *        `organizations/{org}/environments/{env}`
         * @since 1.13
         */
        protected Subscribe(java.lang.String parent) {
          super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Subscribe set$Xgafv(java.lang.String $Xgafv) {
          return (Subscribe) super.set$Xgafv($Xgafv);
        }

        @Override
        public Subscribe setAccessToken(java.lang.String accessToken) {
          return (Subscribe) super.setAccessToken(accessToken);
        }

        @Override
        public Subscribe setAlt(java.lang.String alt) {
          return (Subscribe) super.setAlt(alt);
        }

        @Override
        public Subscribe setCallback(java.lang.String callback) {
          return (Subscribe) super.setCallback(callback);
        }

        @Override
        public Subscribe setFields(java.lang.String fields) {
          return (Subscribe) super.setFields(fields);
        }

        @Override
        public Subscribe setKey(java.lang.String key) {
          return (Subscribe) super.setKey(key);
        }

        @Override
        public Subscribe setOauthToken(java.lang.String oauthToken) {
          return (Subscribe) super.setOauthToken(oauthToken);
        }

        @Override
        public Subscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Subscribe) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Subscribe setQuotaUser(java.lang.String quotaUser) {
          return (Subscribe) super.setQuotaUser(quotaUser);
        }

        @Override
        public Subscribe setUploadType(java.lang.String uploadType) {
          return (Subscribe) super.setUploadType(uploadType);
        }

        @Override
        public Subscribe setUploadProtocol(java.lang.String uploadProtocol) {
          return (Subscribe) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment to subscribe in the following format:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the environment to subscribe in the following format:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the environment to subscribe in the following format:
         * `organizations/{org}/environments/{env}`
         */
        public Subscribe setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Subscribe set(String parameterName, Object value) {
          return (Subscribe) super.set(parameterName, value);
        }
      }
      /**
       * Tests the permissions of a user on an environment, and returns a subset of permissions that the
       * user has on the environment. If the environment does not exist, an empty permission set is
       * returned (a NOT_FOUND error is not returned).
       *
       * Create a request for the method "environments.testIamPermissions".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote operation.
       *
       * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest}
       * @return the request
       */
      public TestIamPermissions testIamPermissions(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest content) throws java.io.IOException {
        TestIamPermissions result = new TestIamPermissions(resource, content);
        initialize(result);
        return result;
      }

      public class TestIamPermissions extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsResponse> {

        private static final String REST_PATH = "v1/{+resource}:testIamPermissions";

        private final java.util.regex.Pattern RESOURCE_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Tests the permissions of a user on an environment, and returns a subset of permissions that the
         * user has on the environment. If the environment does not exist, an empty permission set is
         * returned (a NOT_FOUND error is not returned).
         *
         * Create a request for the method "environments.testIamPermissions".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link TestIamPermissions#execute()} method to invoke the remote
         * operation. <p> {@link TestIamPermissions#initialize(com.google.api.client.googleapis.services.A
         * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param resource REQUIRED: The resource for which the policy detail is being requested.
      See the operation
       *        documentation for the appropriate value for this field.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest}
         * @since 1.13
         */
        protected TestIamPermissions(java.lang.String resource, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleIamV1TestIamPermissionsResponse.class);
          this.resource = com.google.api.client.util.Preconditions.checkNotNull(resource, "Required parameter resource must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public TestIamPermissions set$Xgafv(java.lang.String $Xgafv) {
          return (TestIamPermissions) super.set$Xgafv($Xgafv);
        }

        @Override
        public TestIamPermissions setAccessToken(java.lang.String accessToken) {
          return (TestIamPermissions) super.setAccessToken(accessToken);
        }

        @Override
        public TestIamPermissions setAlt(java.lang.String alt) {
          return (TestIamPermissions) super.setAlt(alt);
        }

        @Override
        public TestIamPermissions setCallback(java.lang.String callback) {
          return (TestIamPermissions) super.setCallback(callback);
        }

        @Override
        public TestIamPermissions setFields(java.lang.String fields) {
          return (TestIamPermissions) super.setFields(fields);
        }

        @Override
        public TestIamPermissions setKey(java.lang.String key) {
          return (TestIamPermissions) super.setKey(key);
        }

        @Override
        public TestIamPermissions setOauthToken(java.lang.String oauthToken) {
          return (TestIamPermissions) super.setOauthToken(oauthToken);
        }

        @Override
        public TestIamPermissions setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (TestIamPermissions) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public TestIamPermissions setQuotaUser(java.lang.String quotaUser) {
          return (TestIamPermissions) super.setQuotaUser(quotaUser);
        }

        @Override
        public TestIamPermissions setUploadType(java.lang.String uploadType) {
          return (TestIamPermissions) super.setUploadType(uploadType);
        }

        @Override
        public TestIamPermissions setUploadProtocol(java.lang.String uploadProtocol) {
          return (TestIamPermissions) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        @com.google.api.client.util.Key
        private java.lang.String resource;

        /** REQUIRED: The resource for which the policy detail is being requested. See the operation
       documentation for the appropriate value for this field.
         */
        public java.lang.String getResource() {
          return resource;
        }

        /**
         * REQUIRED: The resource for which the policy detail is being requested. See the operation
         * documentation for the appropriate value for this field.
         */
        public TestIamPermissions setResource(java.lang.String resource) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(RESOURCE_PATTERN.matcher(resource).matches(),
                "Parameter resource must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.resource = resource;
          return this;
        }

        @Override
        public TestIamPermissions set(String parameterName, Object value) {
          return (TestIamPermissions) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a subscription for the environment's Pub/Sub topic.
       *
       * Create a request for the method "environments.unsubscribe".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Unsubscribe#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the environment to subscribe in the following format:
       *        `organizations/{org}/environments/{env}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription}
       * @return the request
       */
      public Unsubscribe unsubscribe(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription content) throws java.io.IOException {
        Unsubscribe result = new Unsubscribe(parent, content);
        initialize(result);
        return result;
      }

      public class Unsubscribe extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+parent}:unsubscribe";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Deletes a subscription for the environment's Pub/Sub topic.
         *
         * Create a request for the method "environments.unsubscribe".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Unsubscribe#execute()} method to invoke the remote operation. <p>
         * {@link
         * Unsubscribe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the environment to subscribe in the following format:
       *        `organizations/{org}/environments/{env}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription}
         * @since 1.13
         */
        protected Unsubscribe(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Subscription content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Unsubscribe set$Xgafv(java.lang.String $Xgafv) {
          return (Unsubscribe) super.set$Xgafv($Xgafv);
        }

        @Override
        public Unsubscribe setAccessToken(java.lang.String accessToken) {
          return (Unsubscribe) super.setAccessToken(accessToken);
        }

        @Override
        public Unsubscribe setAlt(java.lang.String alt) {
          return (Unsubscribe) super.setAlt(alt);
        }

        @Override
        public Unsubscribe setCallback(java.lang.String callback) {
          return (Unsubscribe) super.setCallback(callback);
        }

        @Override
        public Unsubscribe setFields(java.lang.String fields) {
          return (Unsubscribe) super.setFields(fields);
        }

        @Override
        public Unsubscribe setKey(java.lang.String key) {
          return (Unsubscribe) super.setKey(key);
        }

        @Override
        public Unsubscribe setOauthToken(java.lang.String oauthToken) {
          return (Unsubscribe) super.setOauthToken(oauthToken);
        }

        @Override
        public Unsubscribe setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Unsubscribe) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Unsubscribe setQuotaUser(java.lang.String quotaUser) {
          return (Unsubscribe) super.setQuotaUser(quotaUser);
        }

        @Override
        public Unsubscribe setUploadType(java.lang.String uploadType) {
          return (Unsubscribe) super.setUploadType(uploadType);
        }

        @Override
        public Unsubscribe setUploadProtocol(java.lang.String uploadProtocol) {
          return (Unsubscribe) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment to subscribe in the following format:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the environment to subscribe in the following format:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the environment to subscribe in the following format:
         * `organizations/{org}/environments/{env}`
         */
        public Unsubscribe setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Unsubscribe set(String parameterName, Object value) {
          return (Unsubscribe) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing environment.
       *
       * When updating properties, you must pass all existing properties to the API, even if they are not
       * being changed. If you omit properties from the payload, the properties are removed. To get the
       * current list of properties for the environment, use the [Get Environment API](get).
       *
       * Create a request for the method "environments.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment to update in the following format:
       *        `organizations/{org}/environments/{env}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Updates an existing environment.
         *
         * When updating properties, you must pass all existing properties to the API, even if they are
         * not being changed. If you omit properties from the payload, the properties are removed. To get
         * the current list of properties for the environment, use the [Get Environment API](get).
         *
         * Create a request for the method "environments.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the environment to update in the following format:
       *        `organizations/{org}/environments/{env}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment to update in the following format:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment to update in the following format:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment to update in the following format:
         * `organizations/{org}/environments/{env}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }
      /**
       * Updates the debug mask singleton resource for an environment.
       *
       * Create a request for the method "environments.updateDebugmask".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateDebugmask#execute()} method to invoke the remote operation.
       *
       * @param name The DebugMask resource name.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask}
       * @return the request
       */
      public UpdateDebugmask updateDebugmask(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask content) throws java.io.IOException {
        UpdateDebugmask result = new UpdateDebugmask(name, content);
        initialize(result);
        return result;
      }

      public class UpdateDebugmask extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/debugmask$");

        /**
         * Updates the debug mask singleton resource for an environment.
         *
         * Create a request for the method "environments.updateDebugmask".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateDebugmask#execute()} method to invoke the remote operation.
         * <p> {@link UpdateDebugmask#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
         * lientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name The DebugMask resource name.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask}
         * @since 1.13
         */
        protected UpdateDebugmask(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask content) {
          super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugMask.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
        }

        @Override
        public UpdateDebugmask set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateDebugmask) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateDebugmask setAccessToken(java.lang.String accessToken) {
          return (UpdateDebugmask) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateDebugmask setAlt(java.lang.String alt) {
          return (UpdateDebugmask) super.setAlt(alt);
        }

        @Override
        public UpdateDebugmask setCallback(java.lang.String callback) {
          return (UpdateDebugmask) super.setCallback(callback);
        }

        @Override
        public UpdateDebugmask setFields(java.lang.String fields) {
          return (UpdateDebugmask) super.setFields(fields);
        }

        @Override
        public UpdateDebugmask setKey(java.lang.String key) {
          return (UpdateDebugmask) super.setKey(key);
        }

        @Override
        public UpdateDebugmask setOauthToken(java.lang.String oauthToken) {
          return (UpdateDebugmask) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateDebugmask setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateDebugmask) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateDebugmask setQuotaUser(java.lang.String quotaUser) {
          return (UpdateDebugmask) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateDebugmask setUploadType(java.lang.String uploadType) {
          return (UpdateDebugmask) super.setUploadType(uploadType);
        }

        @Override
        public UpdateDebugmask setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateDebugmask) super.setUploadProtocol(uploadProtocol);
        }

        /** The DebugMask resource name. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The DebugMask resource name.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The DebugMask resource name. */
        public UpdateDebugmask setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+/debugmask$");
          }
          this.name = name;
          return this;
        }

        /**
         * If true, repeated fields covered by the update_mask will replace the existing values. The
         * default behavior is to append.
         */
        @com.google.api.client.util.Key
        private java.lang.Boolean replaceRepeatedFields;

        /** If true, repeated fields covered by the update_mask will replace the existing values. The default
       behavior is to append.
         */
        public java.lang.Boolean getReplaceRepeatedFields() {
          return replaceRepeatedFields;
        }

        /**
         * If true, repeated fields covered by the update_mask will replace the existing values. The
         * default behavior is to append.
         */
        public UpdateDebugmask setReplaceRepeatedFields(java.lang.Boolean replaceRepeatedFields) {
          this.replaceRepeatedFields = replaceRepeatedFields;
          return this;
        }

        /** Field mask to support partial updates. */
        @com.google.api.client.util.Key
        private String updateMask;

        /** Field mask to support partial updates.
         */
        public String getUpdateMask() {
          return updateMask;
        }

        /** Field mask to support partial updates. */
        public UpdateDebugmask setUpdateMask(String updateMask) {
          this.updateMask = updateMask;
          return this;
        }

        @Override
        public UpdateDebugmask set(String parameterName, Object value) {
          return (UpdateDebugmask) super.set(parameterName, value);
        }
      }
      /**
       * Updates an existing environment.
       *
       * When updating properties, you must pass all existing properties to the API, even if they are not
       * being changed. If you omit properties from the payload, the properties are removed. To get the
       * current list of properties for the environment, use the [Get Environment API](get).
       *
       * Create a request for the method "environments.updateEnvironment".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateEnvironment#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the environment to update in the following format:
       *        `organizations/{org}/environments/{env}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
       * @return the request
       */
      public UpdateEnvironment updateEnvironment(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) throws java.io.IOException {
        UpdateEnvironment result = new UpdateEnvironment(name, content);
        initialize(result);
        return result;
      }

      public class UpdateEnvironment extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

        /**
         * Updates an existing environment.
         *
         * When updating properties, you must pass all existing properties to the API, even if they are
         * not being changed. If you omit properties from the payload, the properties are removed. To get
         * the current list of properties for the environment, use the [Get Environment API](get).
         *
         * Create a request for the method "environments.updateEnvironment".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateEnvironment#execute()} method to invoke the remote operation.
         * <p> {@link UpdateEnvironment#initialize(com.google.api.client.googleapis.services.AbstractGoogl
         * eClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param name Required. Name of the environment to update in the following format:
       *        `organizations/{org}/environments/{env}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment}
         * @since 1.13
         */
        protected UpdateEnvironment(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Environment.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
        }

        @Override
        public UpdateEnvironment set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateEnvironment) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateEnvironment setAccessToken(java.lang.String accessToken) {
          return (UpdateEnvironment) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateEnvironment setAlt(java.lang.String alt) {
          return (UpdateEnvironment) super.setAlt(alt);
        }

        @Override
        public UpdateEnvironment setCallback(java.lang.String callback) {
          return (UpdateEnvironment) super.setCallback(callback);
        }

        @Override
        public UpdateEnvironment setFields(java.lang.String fields) {
          return (UpdateEnvironment) super.setFields(fields);
        }

        @Override
        public UpdateEnvironment setKey(java.lang.String key) {
          return (UpdateEnvironment) super.setKey(key);
        }

        @Override
        public UpdateEnvironment setOauthToken(java.lang.String oauthToken) {
          return (UpdateEnvironment) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateEnvironment setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateEnvironment) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateEnvironment setQuotaUser(java.lang.String quotaUser) {
          return (UpdateEnvironment) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateEnvironment setUploadType(java.lang.String uploadType) {
          return (UpdateEnvironment) super.setUploadType(uploadType);
        }

        @Override
        public UpdateEnvironment setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateEnvironment) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the environment to update in the following format:
         * `organizations/{org}/environments/{env}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the environment to update in the following format:
       `organizations/{org}/environments/{env}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the environment to update in the following format:
         * `organizations/{org}/environments/{env}`
         */
        public UpdateEnvironment setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/environments/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public UpdateEnvironment set(String parameterName, Object value) {
          return (UpdateEnvironment) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Analytics collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Analytics.List request = apigee.analytics().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Analytics analytics() {
        return new Analytics();
      }

      /**
       * The "analytics" collection of methods.
       */
      public class Analytics {

        /**
         * An accessor for creating requests from the Admin collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Admin.List request = apigee.admin().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Admin admin() {
          return new Admin();
        }

        /**
         * The "admin" collection of methods.
         */
        public class Admin {

          /**
           * Get a list of metrics and dimensions which can be used for creating analytics queries and
           * reports. Each schema element contains the name of the field with its associated type and if it is
           * either custom field or standard field.
           *
           * Create a request for the method "admin.getSchemav2".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetSchemav2#execute()} method to invoke the remote operation.
           *
           * @param name Required. The parent organization and environment names. Must be of the
          form
           *        `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
           * @return the request
           */
          public GetSchemav2 getSchemav2(java.lang.String name) throws java.io.IOException {
            GetSchemav2 result = new GetSchemav2(name);
            initialize(result);
            return result;
          }

          public class GetSchemav2 extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Schema> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$");

            /**
             * Get a list of metrics and dimensions which can be used for creating analytics queries and
             * reports. Each schema element contains the name of the field with its associated type and if it
             * is either custom field or standard field.
             *
             * Create a request for the method "admin.getSchemav2".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetSchemav2#execute()} method to invoke the remote operation. <p>
             * {@link
             * GetSchemav2#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The parent organization and environment names. Must be of the
          form
           *        `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             * @since 1.13
             */
            protected GetSchemav2(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Schema.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetSchemav2 set$Xgafv(java.lang.String $Xgafv) {
              return (GetSchemav2) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetSchemav2 setAccessToken(java.lang.String accessToken) {
              return (GetSchemav2) super.setAccessToken(accessToken);
            }

            @Override
            public GetSchemav2 setAlt(java.lang.String alt) {
              return (GetSchemav2) super.setAlt(alt);
            }

            @Override
            public GetSchemav2 setCallback(java.lang.String callback) {
              return (GetSchemav2) super.setCallback(callback);
            }

            @Override
            public GetSchemav2 setFields(java.lang.String fields) {
              return (GetSchemav2) super.setFields(fields);
            }

            @Override
            public GetSchemav2 setKey(java.lang.String key) {
              return (GetSchemav2) super.setKey(key);
            }

            @Override
            public GetSchemav2 setOauthToken(java.lang.String oauthToken) {
              return (GetSchemav2) super.setOauthToken(oauthToken);
            }

            @Override
            public GetSchemav2 setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetSchemav2) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetSchemav2 setQuotaUser(java.lang.String quotaUser) {
              return (GetSchemav2) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetSchemav2 setUploadType(java.lang.String uploadType) {
              return (GetSchemav2) super.setUploadType(uploadType);
            }

            @Override
            public GetSchemav2 setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetSchemav2) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The parent organization and environment names. Must be of the form
             * `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The parent organization and environment names. Must be of the form
           `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The parent organization and environment names. Must be of the form
             * `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
             */
            public GetSchemav2 setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$");
              }
              this.name = name;
              return this;
            }

            /**
             * Required. Type refers to the dataset name whose schema needs to be retrieved E.g.
             * type=fact or type=agg_cus1
             */
            @com.google.api.client.util.Key
            private java.lang.String type;

            /** Required. Type refers to the dataset name whose schema needs to be retrieved E.g. type=fact or
           type=agg_cus1
             */
            public java.lang.String getType() {
              return type;
            }

            /**
             * Required. Type refers to the dataset name whose schema needs to be retrieved E.g.
             * type=fact or type=agg_cus1
             */
            public GetSchemav2 setType(java.lang.String type) {
              this.type = type;
              return this;
            }

            @Override
            public GetSchemav2 set(String parameterName, Object value) {
              return (GetSchemav2) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Apis collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apis.List request = apigee.apis().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apis apis() {
        return new Apis();
      }

      /**
       * The "apis" collection of methods.
       */
      public class Apis {

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of an API proxy in an environment.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name representing an API proxy in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/apis/{api}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+$");

            /**
             * Lists all deployments of an API proxy in an environment.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name representing an API proxy in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/apis/{api}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing an API proxy in an environment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name representing an API proxy in an environment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name representing an API proxy in an environment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Revisions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Revisions revisions() {
          return new Revisions();
        }

        /**
         * The "revisions" collection of methods.
         */
        public class Revisions {

          /**
           * Undeploys an API proxy revision from an environment.
           *
           * Because multiple revisions of the same API proxy can be deployed in the same environment if the
           * base paths are different, you must specify the revision number of the API proxy.
           *
           * Create a request for the method "revisions.deployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Deployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the API proxy revision deployment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
           * @return the request
           */
          public Deployments deployments(java.lang.String name) throws java.io.IOException {
            Deployments result = new Deployments(name);
            initialize(result);
            return result;
          }

          public class Deployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Undeploys an API proxy revision from an environment.
             *
             * Because multiple revisions of the same API proxy can be deployed in the same environment if the
             * base paths are different, you must specify the revision number of the API proxy.
             *
             * Create a request for the method "revisions.deployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Deployments#execute()} method to invoke the remote operation. <p>
             * {@link
             * Deployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the API proxy revision deployment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             * @since 1.13
             */
            protected Deployments(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public Deployments set$Xgafv(java.lang.String $Xgafv) {
              return (Deployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deployments setAccessToken(java.lang.String accessToken) {
              return (Deployments) super.setAccessToken(accessToken);
            }

            @Override
            public Deployments setAlt(java.lang.String alt) {
              return (Deployments) super.setAlt(alt);
            }

            @Override
            public Deployments setCallback(java.lang.String callback) {
              return (Deployments) super.setCallback(callback);
            }

            @Override
            public Deployments setFields(java.lang.String fields) {
              return (Deployments) super.setFields(fields);
            }

            @Override
            public Deployments setKey(java.lang.String key) {
              return (Deployments) super.setKey(key);
            }

            @Override
            public Deployments setOauthToken(java.lang.String oauthToken) {
              return (Deployments) super.setOauthToken(oauthToken);
            }

            @Override
            public Deployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deployments setQuotaUser(java.lang.String quotaUser) {
              return (Deployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deployments setUploadType(java.lang.String uploadType) {
              return (Deployments) super.setUploadType(uploadType);
            }

            @Override
            public Deployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision deployment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the API proxy revision deployment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the API proxy revision deployment in the following format:
             * `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public Deployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Deployments set(String parameterName, Object value) {
              return (Deployments) super.set(parameterName, value);
            }
          }
          /**
           * Gets the deployment of an API proxy revision and actual state reported by runtime pods.
           *
           * Create a request for the method "revisions.getDeployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name representing an API proxy revision in an
          environment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
           * @return the request
           */
          public GetDeployments getDeployments(java.lang.String name) throws java.io.IOException {
            GetDeployments result = new GetDeployments(name);
            initialize(result);
            return result;
          }

          public class GetDeployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

            /**
             * Gets the deployment of an API proxy revision and actual state reported by runtime pods.
             *
             * Create a request for the method "revisions.getDeployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
             * <p> {@link GetDeployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
             * ientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. Name representing an API proxy revision in an
          environment in the following format:
           *        `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             * @since 1.13
             */
            protected GetDeployments(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetDeployments set$Xgafv(java.lang.String $Xgafv) {
              return (GetDeployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetDeployments setAccessToken(java.lang.String accessToken) {
              return (GetDeployments) super.setAccessToken(accessToken);
            }

            @Override
            public GetDeployments setAlt(java.lang.String alt) {
              return (GetDeployments) super.setAlt(alt);
            }

            @Override
            public GetDeployments setCallback(java.lang.String callback) {
              return (GetDeployments) super.setCallback(callback);
            }

            @Override
            public GetDeployments setFields(java.lang.String fields) {
              return (GetDeployments) super.setFields(fields);
            }

            @Override
            public GetDeployments setKey(java.lang.String key) {
              return (GetDeployments) super.setKey(key);
            }

            @Override
            public GetDeployments setOauthToken(java.lang.String oauthToken) {
              return (GetDeployments) super.setOauthToken(oauthToken);
            }

            @Override
            public GetDeployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetDeployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetDeployments setQuotaUser(java.lang.String quotaUser) {
              return (GetDeployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetDeployments setUploadType(java.lang.String uploadType) {
              return (GetDeployments) super.setUploadType(uploadType);
            }

            @Override
            public GetDeployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetDeployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing an API proxy revision in an environment in the following
             * format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name representing an API proxy revision in an environment in the following format:
           `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name representing an API proxy revision in an environment in the following
             * format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
             */
            public GetDeployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetDeployments set(String parameterName, Object value) {
              return (GetDeployments) super.set(parameterName, value);
            }
          }

          /**
           * An accessor for creating requests from the Debugsessions collection.
           *
           * <p>The typical use is:</p>
           * <pre>
           *   {@code Apigee apigee = new Apigee(...);}
           *   {@code Apigee.Debugsessions.List request = apigee.debugsessions().list(parameters ...)}
           * </pre>
           *
           * @return the resource collection
           */
          public Debugsessions debugsessions() {
            return new Debugsessions();
          }

          /**
           * The "debugsessions" collection of methods.
           */
          public class Debugsessions {

            /**
             * Creates a debug session for a deployed API Proxy revision.
             *
             * Create a request for the method "debugsessions.create".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The resource name of the API Proxy revision deployment for which
            to create the
             *        DebugSession. Must be of the form
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession}
             * @return the request
             */
            public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession content) throws java.io.IOException {
              Create result = new Create(parent, content);
              initialize(result);
              return result;
            }

            public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession> {

              private static final String REST_PATH = "v1/{+parent}/debugsessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

              /**
               * Creates a debug session for a deployed API Proxy revision.
               *
               * Create a request for the method "debugsessions.create".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
               * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
               * be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The resource name of the API Proxy revision deployment for which
            to create the
             *        DebugSession. Must be of the form
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession}
               * @since 1.13
               */
              protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession content) {
                super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSession.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
              }

              @Override
              public Create set$Xgafv(java.lang.String $Xgafv) {
                return (Create) super.set$Xgafv($Xgafv);
              }

              @Override
              public Create setAccessToken(java.lang.String accessToken) {
                return (Create) super.setAccessToken(accessToken);
              }

              @Override
              public Create setAlt(java.lang.String alt) {
                return (Create) super.setAlt(alt);
              }

              @Override
              public Create setCallback(java.lang.String callback) {
                return (Create) super.setCallback(callback);
              }

              @Override
              public Create setFields(java.lang.String fields) {
                return (Create) super.setFields(fields);
              }

              @Override
              public Create setKey(java.lang.String key) {
                return (Create) super.setKey(key);
              }

              @Override
              public Create setOauthToken(java.lang.String oauthToken) {
                return (Create) super.setOauthToken(oauthToken);
              }

              @Override
              public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (Create) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public Create setQuotaUser(java.lang.String quotaUser) {
                return (Create) super.setQuotaUser(quotaUser);
              }

              @Override
              public Create setUploadType(java.lang.String uploadType) {
                return (Create) super.setUploadType(uploadType);
              }

              @Override
              public Create setUploadProtocol(java.lang.String uploadProtocol) {
                return (Create) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The resource name of the API Proxy revision deployment for which to
               * create the DebugSession. Must be of the form `organizations/{organization}/environm
               * ents/{environment}/apis/{api}/revisions/{revision}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The resource name of the API Proxy revision deployment for which to create the
             DebugSession. Must be of the form
             `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The resource name of the API Proxy revision deployment for which to
               * create the DebugSession. Must be of the form `organizations/{organization}/environm
               * ents/{environment}/apis/{api}/revisions/{revision}`.
               */
              public Create setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              /**
               * Optional. The time in seconds after which this DebugSession should end. A timeout
               * specified in DebugSession will overwrite this value.
               */
              @com.google.api.client.util.Key
              private java.lang.Long timeout;

              /** Optional. The time in seconds after which this DebugSession should end. A timeout specified in
             DebugSession will overwrite this value.
               */
              public java.lang.Long getTimeout() {
                return timeout;
              }

              /**
               * Optional. The time in seconds after which this DebugSession should end. A timeout
               * specified in DebugSession will overwrite this value.
               */
              public Create setTimeout(java.lang.Long timeout) {
                this.timeout = timeout;
                return this;
              }

              @Override
              public Create set(String parameterName, Object value) {
                return (Create) super.set(parameterName, value);
              }
            }
            /**
             * Deletes the data from a debug session. This does not cancel the debug session or prevent further
             * data from being collected if the session is still active in runtime pods.
             *
             * Create a request for the method "debugsessions.deleteData".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link DeleteData#execute()} method to invoke the remote operation.
             *
             * @param name Required. The name of the debug session to delete.
            Must be of the form:
             `organizations/{organizatio
             *        n}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}
             *        `.
             * @return the request
             */
            public DeleteData deleteData(java.lang.String name) throws java.io.IOException {
              DeleteData result = new DeleteData(name);
              initialize(result);
              return result;
            }

            public class DeleteData extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

              private static final String REST_PATH = "v1/{+name}/data";

              private final java.util.regex.Pattern NAME_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");

              /**
               * Deletes the data from a debug session. This does not cancel the debug session or prevent
               * further data from being collected if the session is still active in runtime pods.
               *
               * Create a request for the method "debugsessions.deleteData".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link DeleteData#execute()} method to invoke the remote operation. <p>
               * {@link
               * DeleteData#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
               * must be called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param name Required. The name of the debug session to delete.
            Must be of the form:
             `organizations/{organizatio
             *        n}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}
             *        `.
               * @since 1.13
               */
              protected DeleteData(java.lang.String name) {
                super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
                this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                }
              }

              @Override
              public DeleteData set$Xgafv(java.lang.String $Xgafv) {
                return (DeleteData) super.set$Xgafv($Xgafv);
              }

              @Override
              public DeleteData setAccessToken(java.lang.String accessToken) {
                return (DeleteData) super.setAccessToken(accessToken);
              }

              @Override
              public DeleteData setAlt(java.lang.String alt) {
                return (DeleteData) super.setAlt(alt);
              }

              @Override
              public DeleteData setCallback(java.lang.String callback) {
                return (DeleteData) super.setCallback(callback);
              }

              @Override
              public DeleteData setFields(java.lang.String fields) {
                return (DeleteData) super.setFields(fields);
              }

              @Override
              public DeleteData setKey(java.lang.String key) {
                return (DeleteData) super.setKey(key);
              }

              @Override
              public DeleteData setOauthToken(java.lang.String oauthToken) {
                return (DeleteData) super.setOauthToken(oauthToken);
              }

              @Override
              public DeleteData setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (DeleteData) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public DeleteData setQuotaUser(java.lang.String quotaUser) {
                return (DeleteData) super.setQuotaUser(quotaUser);
              }

              @Override
              public DeleteData setUploadType(java.lang.String uploadType) {
                return (DeleteData) super.setUploadType(uploadType);
              }

              @Override
              public DeleteData setUploadProtocol(java.lang.String uploadProtocol) {
                return (DeleteData) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the debug session to delete. Must be of the form: `organizati
               * ons/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debug
               * sessions/{debugsession}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String name;

              /** Required. The name of the debug session to delete. Must be of the form: `organizations/{organizatio
             n}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`.
               */
              public java.lang.String getName() {
                return name;
              }

              /**
               * Required. The name of the debug session to delete. Must be of the form: `organizati
               * ons/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debug
               * sessions/{debugsession}`.
               */
              public DeleteData setName(java.lang.String name) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                      "Parameter name must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                }
                this.name = name;
                return this;
              }

              @Override
              public DeleteData set(String parameterName, Object value) {
                return (DeleteData) super.set(parameterName, value);
              }
            }
            /**
             * Lists debug sessions that are currently active in the given API Proxy revision.
             *
             * Create a request for the method "debugsessions.list".
             *
             * This request holds the parameters needed by the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation.
             *
             * @param parent Required. The name of the API Proxy revision deployment for which
            to list debug sessions. Must be of
             *        the form:
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
             * @return the request
             */
            public List list(java.lang.String parent) throws java.io.IOException {
              List result = new List(parent);
              initialize(result);
              return result;
            }

            public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDebugSessionsResponse> {

              private static final String REST_PATH = "v1/{+parent}/debugsessions";

              private final java.util.regex.Pattern PARENT_PATTERN =
                  java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");

              /**
               * Lists debug sessions that are currently active in the given API Proxy revision.
               *
               * Create a request for the method "debugsessions.list".
               *
               * This request holds the parameters needed by the the apigee server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
               * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
               * called to initialize this instance immediately after invoking the constructor. </p>
               *
               * @param parent Required. The name of the API Proxy revision deployment for which
            to list debug sessions. Must be of
             *        the form:
             *        `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               * @since 1.13
               */
              protected List(java.lang.String parent) {
                super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDebugSessionsResponse.class);
                this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
              }

              @Override
              public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                return super.executeUsingHead();
              }

              @Override
              public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                return super.buildHttpRequestUsingHead();
              }

              @Override
              public List set$Xgafv(java.lang.String $Xgafv) {
                return (List) super.set$Xgafv($Xgafv);
              }

              @Override
              public List setAccessToken(java.lang.String accessToken) {
                return (List) super.setAccessToken(accessToken);
              }

              @Override
              public List setAlt(java.lang.String alt) {
                return (List) super.setAlt(alt);
              }

              @Override
              public List setCallback(java.lang.String callback) {
                return (List) super.setCallback(callback);
              }

              @Override
              public List setFields(java.lang.String fields) {
                return (List) super.setFields(fields);
              }

              @Override
              public List setKey(java.lang.String key) {
                return (List) super.setKey(key);
              }

              @Override
              public List setOauthToken(java.lang.String oauthToken) {
                return (List) super.setOauthToken(oauthToken);
              }

              @Override
              public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                return (List) super.setPrettyPrint(prettyPrint);
              }

              @Override
              public List setQuotaUser(java.lang.String quotaUser) {
                return (List) super.setQuotaUser(quotaUser);
              }

              @Override
              public List setUploadType(java.lang.String uploadType) {
                return (List) super.setUploadType(uploadType);
              }

              @Override
              public List setUploadProtocol(java.lang.String uploadProtocol) {
                return (List) super.setUploadProtocol(uploadProtocol);
              }

              /**
               * Required. The name of the API Proxy revision deployment for which to list debug
               * sessions. Must be of the form: `organizations/{organization}/environments/{environm
               * ent}/apis/{api}/revisions/{revision}`.
               */
              @com.google.api.client.util.Key
              private java.lang.String parent;

              /** Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be
             of the form:
             `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
               */
              public java.lang.String getParent() {
                return parent;
              }

              /**
               * Required. The name of the API Proxy revision deployment for which to list debug
               * sessions. Must be of the form: `organizations/{organization}/environments/{environm
               * ent}/apis/{api}/revisions/{revision}`.
               */
              public List setParent(java.lang.String parent) {
                if (!getSuppressPatternChecks()) {
                  com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                      "Parameter parent must conform to the pattern " +
                      "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$");
                }
                this.parent = parent;
                return this;
              }

              @Override
              public List set(String parameterName, Object value) {
                return (List) super.set(parameterName, value);
              }
            }

            /**
             * An accessor for creating requests from the Data collection.
             *
             * <p>The typical use is:</p>
             * <pre>
             *   {@code Apigee apigee = new Apigee(...);}
             *   {@code Apigee.Data.List request = apigee.data().list(parameters ...)}
             * </pre>
             *
             * @return the resource collection
             */
            public Data data() {
              return new Data();
            }

            /**
             * The "data" collection of methods.
             */
            public class Data {

              /**
               * Gets the debug data from a transaction.
               *
               * Create a request for the method "data.get".
               *
               * This request holds the parameters needed by the apigee server.  After setting any optional
               * parameters, call the {@link Get#execute()} method to invoke the remote operation.
               *
               * @param name Required. The name of the debug session transaction. Must be of the form:
               `organizations/{organizat
               *        ion}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/da
               *        ta/{transaction}`.
               * @return the request
               */
              public Get get(java.lang.String name) throws java.io.IOException {
                Get result = new Get(name);
                initialize(result);
                return result;
              }

              public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSessionTransaction> {

                private static final String REST_PATH = "v1/{+name}";

                private final java.util.regex.Pattern NAME_PATTERN =
                    java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$");

                /**
                 * Gets the debug data from a transaction.
                 *
                 * Create a request for the method "data.get".
                 *
                 * This request holds the parameters needed by the the apigee server.  After setting any optional
                 * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
                 * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param name Required. The name of the debug session transaction. Must be of the form:
               `organizations/{organizat
               *        ion}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/da
               *        ta/{transaction}`.
                 * @since 1.13
                 */
                protected Get(java.lang.String name) {
                  super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DebugSessionTransaction.class);
                  this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public Get set$Xgafv(java.lang.String $Xgafv) {
                  return (Get) super.set$Xgafv($Xgafv);
                }

                @Override
                public Get setAccessToken(java.lang.String accessToken) {
                  return (Get) super.setAccessToken(accessToken);
                }

                @Override
                public Get setAlt(java.lang.String alt) {
                  return (Get) super.setAlt(alt);
                }

                @Override
                public Get setCallback(java.lang.String callback) {
                  return (Get) super.setCallback(callback);
                }

                @Override
                public Get setFields(java.lang.String fields) {
                  return (Get) super.setFields(fields);
                }

                @Override
                public Get setKey(java.lang.String key) {
                  return (Get) super.setKey(key);
                }

                @Override
                public Get setOauthToken(java.lang.String oauthToken) {
                  return (Get) super.setOauthToken(oauthToken);
                }

                @Override
                public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (Get) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public Get setQuotaUser(java.lang.String quotaUser) {
                  return (Get) super.setQuotaUser(quotaUser);
                }

                @Override
                public Get setUploadType(java.lang.String uploadType) {
                  return (Get) super.setUploadType(uploadType);
                }

                @Override
                public Get setUploadProtocol(java.lang.String uploadProtocol) {
                  return (Get) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the debug session transaction. Must be of the form: `organi
                 * zations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}
                 * /debugsessions/{session}/data/{transaction}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String name;

                /** Required. The name of the debug session transaction. Must be of the form: `organizations/{organizat
               ion}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{trans
               action}`.
                 */
                public java.lang.String getName() {
                  return name;
                }

                /**
                 * Required. The name of the debug session transaction. Must be of the form: `organi
                 * zations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}
                 * /debugsessions/{session}/data/{transaction}`.
                 */
                public Get setName(java.lang.String name) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                        "Parameter name must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$");
                  }
                  this.name = name;
                  return this;
                }

                @Override
                public Get set(String parameterName, Object value) {
                  return (Get) super.set(parameterName, value);
                }
              }
              /**
               * Lists the transaction IDs from a debug session.
               *
               * Create a request for the method "data.list".
               *
               * This request holds the parameters needed by the apigee server.  After setting any optional
               * parameters, call the {@link List#execute()} method to invoke the remote operation.
               *
               * @param parent Required. The name of the debug sessions for which to list transactions.
              Must be of the form:
               `orga
               *        nizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugs
               *        essions/{session}`.
               * @return the request
               */
              public List list(java.lang.String parent) throws java.io.IOException {
                List result = new List(parent);
                initialize(result);
                return result;
              }

              public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Apis.Revisions.Debugsessions.Data.List.> {

                private static final String REST_PATH = "v1/{+parent}/data";

                private final java.util.regex.Pattern PARENT_PATTERN =
                    java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");

                /**
                 * Lists the transaction IDs from a debug session.
                 *
                 * Create a request for the method "data.list".
                 *
                 * This request holds the parameters needed by the the apigee server.  After setting any optional
                 * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
                 * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
                 * called to initialize this instance immediately after invoking the constructor. </p>
                 *
                 * @param parent Required. The name of the debug sessions for which to list transactions.
              Must be of the form:
               `orga
               *        nizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugs
               *        essions/{session}`.
                 * @since 1.13
                 */
                protected List(java.lang.String parent) {
                  super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Apis.Revisions.Debugsessions.Data.List..class);
                  this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                  }
                }

                @Override
                public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
                  return super.executeUsingHead();
                }

                @Override
                public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
                  return super.buildHttpRequestUsingHead();
                }

                @Override
                public List set$Xgafv(java.lang.String $Xgafv) {
                  return (List) super.set$Xgafv($Xgafv);
                }

                @Override
                public List setAccessToken(java.lang.String accessToken) {
                  return (List) super.setAccessToken(accessToken);
                }

                @Override
                public List setAlt(java.lang.String alt) {
                  return (List) super.setAlt(alt);
                }

                @Override
                public List setCallback(java.lang.String callback) {
                  return (List) super.setCallback(callback);
                }

                @Override
                public List setFields(java.lang.String fields) {
                  return (List) super.setFields(fields);
                }

                @Override
                public List setKey(java.lang.String key) {
                  return (List) super.setKey(key);
                }

                @Override
                public List setOauthToken(java.lang.String oauthToken) {
                  return (List) super.setOauthToken(oauthToken);
                }

                @Override
                public List setPrettyPrint(java.lang.Boolean prettyPrint) {
                  return (List) super.setPrettyPrint(prettyPrint);
                }

                @Override
                public List setQuotaUser(java.lang.String quotaUser) {
                  return (List) super.setQuotaUser(quotaUser);
                }

                @Override
                public List setUploadType(java.lang.String uploadType) {
                  return (List) super.setUploadType(uploadType);
                }

                @Override
                public List setUploadProtocol(java.lang.String uploadProtocol) {
                  return (List) super.setUploadProtocol(uploadProtocol);
                }

                /**
                 * Required. The name of the debug sessions for which to list transactions. Must be
                 * of the form: `organizations/{organization}/environments/{environment}/apis/{api}/
                 * revisions/{revision}/debugsessions/{session}`.
                 */
                @com.google.api.client.util.Key
                private java.lang.String parent;

                /** Required. The name of the debug sessions for which to list transactions. Must be of the form: `orga
               nizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{
               session}`.
                 */
                public java.lang.String getParent() {
                  return parent;
                }

                /**
                 * Required. The name of the debug sessions for which to list transactions. Must be
                 * of the form: `organizations/{organization}/environments/{environment}/apis/{api}/
                 * revisions/{revision}/debugsessions/{session}`.
                 */
                public List setParent(java.lang.String parent) {
                  if (!getSuppressPatternChecks()) {
                    com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                        "Parameter parent must conform to the pattern " +
                        "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$");
                  }
                  this.parent = parent;
                  return this;
                }

                /**
                 * Optional. A http query parameter that can control the maximum number of debug
                 * session transactions that can be returned by UAP.
                 */
                @com.google.api.client.util.Key
                private java.lang.Integer limit;

                /** Optional. A http query parameter that can control the maximum number of debug session transactions
               that can be returned by UAP.
                 */
                public java.lang.Integer getLimit() {
                  return limit;
                }

                /**
                 * Optional. A http query parameter that can control the maximum number of debug
                 * session transactions that can be returned by UAP.
                 */
                public List setLimit(java.lang.Integer limit) {
                  this.limit = limit;
                  return this;
                }

                @Override
                public List set(String parameterName, Object value) {
                  return (List) super.set(parameterName, value);
                }
              }

            }
          }
        }
      }
      /**
       * An accessor for creating requests from the Caches collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Caches.List request = apigee.caches().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Caches caches() {
        return new Caches();
      }

      /**
       * The "caches" collection of methods.
       */
      public class Caches {

        /**
         * Deletes a cache.
         *
         * Create a request for the method "caches.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Cache resource name of the form:
         *        `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/caches/[^/]+$");

          /**
           * Deletes a cache.
           *
           * Create a request for the method "caches.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Cache resource name of the form:
         *        `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/caches/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Cache resource name of the form:
           * `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Cache resource name of the form:
         `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Cache resource name of the form:
           * `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/caches/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Lists all caches in an environment.
         *
         * Create a request for the method "caches.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent environment under which to get caches.
        Must be of the form:
         *        `organizations/{organization_id}/environments/{environment_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Caches.List.> {

          private static final String REST_PATH = "v1/{+parent}/caches";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all caches in an environment.
           *
           * Create a request for the method "caches.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent environment under which to get caches.
        Must be of the form:
         *        `organizations/{organization_id}/environments/{environment_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Caches.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent environment under which to get caches. Must be of the
           * form: `organizations/{organization_id}/environments/{environment_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent environment under which to get caches. Must be of the form:
         `organizations/{organization_id}/environments/{environment_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent environment under which to get caches. Must be of the
           * form: `organizations/{organization_id}/environments/{environment_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Lists all deployments of API proxies or shared flows in an environment.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment for which to return deployment information in the
        following
         *        format:
          `organizations/{org}/environments/{env}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all deployments of API proxies or shared flows in an environment.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment for which to return deployment information in the
        following
         *        format:
          `organizations/{org}/environments/{env}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment for which to return deployment information in the
           * following format: `organizations/{org}/environments/{env}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment for which to return deployment information in the following
         format: `organizations/{org}/environments/{env}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment for which to return deployment information in the
           * following format: `organizations/{org}/environments/{env}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Flag that specifies whether to return shared flow or API proxy deployments.
           * Set to `true` to return shared flow deployments; set to `false` to return API proxy
           * deployments. Defaults to `false`.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean sharedFlows;

          /** Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true`
         to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to
         `false`.
           */
          public java.lang.Boolean getSharedFlows() {
            return sharedFlows;
          }

          /**
           * Optional. Flag that specifies whether to return shared flow or API proxy deployments.
           * Set to `true` to return shared flow deployments; set to `false` to return API proxy
           * deployments. Defaults to `false`.
           */
          public List setSharedFlows(java.lang.Boolean sharedFlows) {
            this.sharedFlows = sharedFlows;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Flowhooks collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Flowhooks.List request = apigee.flowhooks().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Flowhooks flowhooks() {
        return new Flowhooks();
      }

      /**
       * The "flowhooks" collection of methods.
       */
      public class Flowhooks {

        /**
         * Attaches a shared flow to a flow hook.
         *
         * Create a request for the method "flowhooks.attachSharedFlowToFlowHook".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link AttachSharedFlowToFlowHook#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the flow hook to which the shared flow should be
        attached in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook}
         * @return the request
         */
        public AttachSharedFlowToFlowHook attachSharedFlowToFlowHook(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook content) throws java.io.IOException {
          AttachSharedFlowToFlowHook result = new AttachSharedFlowToFlowHook(name, content);
          initialize(result);
          return result;
        }

        public class AttachSharedFlowToFlowHook extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");

          /**
           * Attaches a shared flow to a flow hook.
           *
           * Create a request for the method "flowhooks.attachSharedFlowToFlowHook".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link AttachSharedFlowToFlowHook#execute()} method to invoke the remote
           * operation. <p> {@link AttachSharedFlowToFlowHook#initialize(com.google.api.client.googleapis.se
           * rvices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name Required. Name of the flow hook to which the shared flow should be
        attached in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook}
           * @since 1.13
           */
          protected AttachSharedFlowToFlowHook(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
          }

          @Override
          public AttachSharedFlowToFlowHook set$Xgafv(java.lang.String $Xgafv) {
            return (AttachSharedFlowToFlowHook) super.set$Xgafv($Xgafv);
          }

          @Override
          public AttachSharedFlowToFlowHook setAccessToken(java.lang.String accessToken) {
            return (AttachSharedFlowToFlowHook) super.setAccessToken(accessToken);
          }

          @Override
          public AttachSharedFlowToFlowHook setAlt(java.lang.String alt) {
            return (AttachSharedFlowToFlowHook) super.setAlt(alt);
          }

          @Override
          public AttachSharedFlowToFlowHook setCallback(java.lang.String callback) {
            return (AttachSharedFlowToFlowHook) super.setCallback(callback);
          }

          @Override
          public AttachSharedFlowToFlowHook setFields(java.lang.String fields) {
            return (AttachSharedFlowToFlowHook) super.setFields(fields);
          }

          @Override
          public AttachSharedFlowToFlowHook setKey(java.lang.String key) {
            return (AttachSharedFlowToFlowHook) super.setKey(key);
          }

          @Override
          public AttachSharedFlowToFlowHook setOauthToken(java.lang.String oauthToken) {
            return (AttachSharedFlowToFlowHook) super.setOauthToken(oauthToken);
          }

          @Override
          public AttachSharedFlowToFlowHook setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AttachSharedFlowToFlowHook) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AttachSharedFlowToFlowHook setQuotaUser(java.lang.String quotaUser) {
            return (AttachSharedFlowToFlowHook) super.setQuotaUser(quotaUser);
          }

          @Override
          public AttachSharedFlowToFlowHook setUploadType(java.lang.String uploadType) {
            return (AttachSharedFlowToFlowHook) super.setUploadType(uploadType);
          }

          @Override
          public AttachSharedFlowToFlowHook setUploadProtocol(java.lang.String uploadProtocol) {
            return (AttachSharedFlowToFlowHook) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the flow hook to which the shared flow should be attached in the
           * following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the flow hook to which the shared flow should be attached in the following
         format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the flow hook to which the shared flow should be attached in the
           * following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public AttachSharedFlowToFlowHook setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public AttachSharedFlowToFlowHook set(String parameterName, Object value) {
            return (AttachSharedFlowToFlowHook) super.set(parameterName, value);
          }
        }
        /**
         * Detaches a shared flow from a flow hook.
         *
         * Create a request for the method "flowhooks.detachSharedFlowFromFlowHook".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link DetachSharedFlowFromFlowHook#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the flow hook to detach in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
         * @return the request
         */
        public DetachSharedFlowFromFlowHook detachSharedFlowFromFlowHook(java.lang.String name) throws java.io.IOException {
          DetachSharedFlowFromFlowHook result = new DetachSharedFlowFromFlowHook(name);
          initialize(result);
          return result;
        }

        public class DetachSharedFlowFromFlowHook extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");

          /**
           * Detaches a shared flow from a flow hook.
           *
           * Create a request for the method "flowhooks.detachSharedFlowFromFlowHook".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link DetachSharedFlowFromFlowHook#execute()} method to invoke the remote
           * operation. <p> {@link DetachSharedFlowFromFlowHook#initialize(com.google.api.client.googleapis.
           * services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name Required. Name of the flow hook to detach in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           * @since 1.13
           */
          protected DetachSharedFlowFromFlowHook(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
          }

          @Override
          public DetachSharedFlowFromFlowHook set$Xgafv(java.lang.String $Xgafv) {
            return (DetachSharedFlowFromFlowHook) super.set$Xgafv($Xgafv);
          }

          @Override
          public DetachSharedFlowFromFlowHook setAccessToken(java.lang.String accessToken) {
            return (DetachSharedFlowFromFlowHook) super.setAccessToken(accessToken);
          }

          @Override
          public DetachSharedFlowFromFlowHook setAlt(java.lang.String alt) {
            return (DetachSharedFlowFromFlowHook) super.setAlt(alt);
          }

          @Override
          public DetachSharedFlowFromFlowHook setCallback(java.lang.String callback) {
            return (DetachSharedFlowFromFlowHook) super.setCallback(callback);
          }

          @Override
          public DetachSharedFlowFromFlowHook setFields(java.lang.String fields) {
            return (DetachSharedFlowFromFlowHook) super.setFields(fields);
          }

          @Override
          public DetachSharedFlowFromFlowHook setKey(java.lang.String key) {
            return (DetachSharedFlowFromFlowHook) super.setKey(key);
          }

          @Override
          public DetachSharedFlowFromFlowHook setOauthToken(java.lang.String oauthToken) {
            return (DetachSharedFlowFromFlowHook) super.setOauthToken(oauthToken);
          }

          @Override
          public DetachSharedFlowFromFlowHook setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DetachSharedFlowFromFlowHook) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DetachSharedFlowFromFlowHook setQuotaUser(java.lang.String quotaUser) {
            return (DetachSharedFlowFromFlowHook) super.setQuotaUser(quotaUser);
          }

          @Override
          public DetachSharedFlowFromFlowHook setUploadType(java.lang.String uploadType) {
            return (DetachSharedFlowFromFlowHook) super.setUploadType(uploadType);
          }

          @Override
          public DetachSharedFlowFromFlowHook setUploadProtocol(java.lang.String uploadProtocol) {
            return (DetachSharedFlowFromFlowHook) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the flow hook to detach in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the flow hook to detach in the following format:
         `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the flow hook to detach in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public DetachSharedFlowFromFlowHook setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public DetachSharedFlowFromFlowHook set(String parameterName, Object value) {
            return (DetachSharedFlowFromFlowHook) super.set(parameterName, value);
          }
        }
        /**
         * Returns the name of the shared flow attached to the specified flow hook. If there's no shared
         * flow attached to the flow hook, the API does not return an error; it simply does not return a
         * name in the response.
         *
         * Create a request for the method "flowhooks.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the flow hook in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");

          /**
           * Returns the name of the shared flow attached to the specified flow hook. If there's no shared
           * flow attached to the flow hook, the API does not return an error; it simply does not return a
           * name in the response.
           *
           * Create a request for the method "flowhooks.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the flow hook in the following format:
         *        `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FlowHook.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the flow hook in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the flow hook in the following format:
         `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the flow hook in the following format:
           * `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the flow hooks attached to an environment. This API always returns: `["PreProxyFlowHook",
         * "PostProxyFlowHook", "PreTargetFlowHook", "PostTargetFlowHook"]`
         *
         * Create a request for the method "flowhooks.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment for which to display flow hooks in the following
        format:
         *        `organizations/{org}/environments/{env}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Flowhooks.List.> {

          private static final String REST_PATH = "v1/{+parent}/flowhooks";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists the flow hooks attached to an environment. This API always returns: `["PreProxyFlowHook",
           * "PostProxyFlowHook", "PreTargetFlowHook", "PostTargetFlowHook"]`
           *
           * Create a request for the method "flowhooks.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment for which to display flow hooks in the following
        format:
         *        `organizations/{org}/environments/{env}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Flowhooks.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment for which to display flow hooks in the following
           * format: `organizations/{org}/environments/{env}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment for which to display flow hooks in the following format:
         `organizations/{org}/environments/{env}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment for which to display flow hooks in the following
           * format: `organizations/{org}/environments/{env}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Keystores collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Keystores.List request = apigee.keystores().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keystores keystores() {
        return new Keystores();
      }

      /**
       * The "keystores" collection of methods.
       */
      public class Keystores {

        /**
         * Creates a keystore or truststore: Keystore: Contains certificates and their associated keys.
         * Truststore: Contains trusted certificates used to validate a  server's certificate. These
         * certificates are typically self-signed  certificates or certificates that are not signed by a
         * trusted CA.
         *
         * Create a request for the method "keystores.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to create the keystore.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore> {

          private static final String REST_PATH = "v1/{+parent}/keystores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a keystore or truststore:  * Keystore: Contains certificates and their associated keys.
           * * Truststore: Contains trusted certificates used to validate a  server's certificate. These
           * certificates are typically self-signed  certificates or certificates that are not signed by a
           * trusted CA.
           *
           * Create a request for the method "keystores.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to create the keystore.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to create the keystore. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to create the keystore. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to create the keystore. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Optional. Overrides the value in Keystore. */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. Overrides the value in Keystore.
           */
          public java.lang.String getName() {
            return name;
          }

          /** Optional. Overrides the value in Keystore. */
          public Create setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a keystore or truststore.
         *
         * Create a request for the method "keystores.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of keystore to delete. Must be of the form
         *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

          /**
           * Deletes a keystore or truststore.
           *
           * Create a request for the method "keystores.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of keystore to delete. Must be of the form
         *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of keystore to delete. Must be of the form
           * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of keystore to delete. Must be of the form
         `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of keystore to delete. Must be of the form
           * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a keystore or truststore.
         *
         * Create a request for the method "keystores.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of keystore. Must be of the form
         *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

          /**
           * Gets a keystore or truststore.
           *
           * Create a request for the method "keystores.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of keystore. Must be of the form
         *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Keystore.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of keystore. Must be of the form
           * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of keystore. Must be of the form
         `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of keystore. Must be of the form
           * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all keystores and truststores.
         *
         * Create a request for the method "keystores.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which list keystores.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keystores.List.> {

          private static final String REST_PATH = "v1/{+parent}/keystores";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all keystores and truststores.
           *
           * Create a request for the method "keystores.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which list keystores.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keystores.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which list keystores. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which list keystores. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which list keystores. Must be of the form
           * `organizations/{organization}/environments/{environment}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Aliases collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Aliases.List request = apigee.aliases().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Aliases aliases() {
          return new Aliases();
        }

        /**
         * The "aliases" collection of methods.
         */
        public class Aliases {

          /**
           * Creates an alias from a key, certificate pair. The structure of the request is controlled by the
           * `format` query parameter: `keycertfile` - Separate PEM-encoded key and certificate files are
           * uploaded. The request must have `Content-Type: multipart/form-data` and  include fields `keyFile`
           * and `certFile`. If uploading to a truststore,  omit `keyFile`. * `pkcs12` - A PKCS12 file is
           * uploaded. The request must have `Content-Type: multipart/form-data` with the file provided in the
           * only field. * `selfsignedcert` - A new private key and certificate are generated. The request
           * must have `Content-Type: application/json` and a body of CertificateGenerationSpec.
           *
           * Create a request for the method "aliases.create".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the keystore. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @return the request
           */
          public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
            Create result = new Create(parent, content);
            initialize(result);
            return result;
          }

          public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+parent}/aliases";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

            /**
             * Creates an alias from a key, certificate pair. The structure of the request is controlled by
             * the `format` query parameter:  * `keycertfile` - Separate PEM-encoded key and certificate files
             * are  uploaded. The request must have `Content-Type: multipart/form-data` and  include fields
             * `keyFile` and `certFile`. If uploading to a truststore,  omit `keyFile`. * `pkcs12` - A PKCS12
             * file is uploaded. The request must have `Content-Type: multipart/form-data` with the file
             * provided in the only field. * `selfsignedcert` - A new private key and certificate are
             * generated. The request must have `Content-Type: application/json` and a body of
             * CertificateGenerationSpec.
             *
             * Create a request for the method "aliases.create".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
             * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the keystore. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
             * @since 1.13
             */
            protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
              super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
            }

            @Override
            public Create set$Xgafv(java.lang.String $Xgafv) {
              return (Create) super.set$Xgafv($Xgafv);
            }

            @Override
            public Create setAccessToken(java.lang.String accessToken) {
              return (Create) super.setAccessToken(accessToken);
            }

            @Override
            public Create setAlt(java.lang.String alt) {
              return (Create) super.setAlt(alt);
            }

            @Override
            public Create setCallback(java.lang.String callback) {
              return (Create) super.setCallback(callback);
            }

            @Override
            public Create setFields(java.lang.String fields) {
              return (Create) super.setFields(fields);
            }

            @Override
            public Create setKey(java.lang.String key) {
              return (Create) super.setKey(key);
            }

            @Override
            public Create setOauthToken(java.lang.String oauthToken) {
              return (Create) super.setOauthToken(oauthToken);
            }

            @Override
            public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Create) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Create setQuotaUser(java.lang.String quotaUser) {
              return (Create) super.setQuotaUser(quotaUser);
            }

            @Override
            public Create setUploadType(java.lang.String uploadType) {
              return (Create) super.setUploadType(uploadType);
            }

            @Override
            public Create setUploadProtocol(java.lang.String uploadProtocol) {
              return (Create) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the keystore. Must be of the form
             * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the keystore. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the keystore. Must be of the form
             * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            public Create setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            /** The password for the private key file, if it exists. */
            @com.google.api.client.util.Key("_password")
            private java.lang.String password;

            /** The password for the private key file, if it exists.
             */
            public java.lang.String getPassword() {
              return password;
            }

            /** The password for the private key file, if it exists. */
            public Create setPassword(java.lang.String password) {
              this.password = password;
              return this;
            }

            /**
             * The alias for the key, certificate pair. Values must match regular expression
             * `[\w\s-.]{1,255}`. This must be provided for all formats except 'selfsignedcert';
             * self-signed certs may specify the alias in either this parameter or the JSON body.
             */
            @com.google.api.client.util.Key
            private java.lang.String alias;

            /** The alias for the key, certificate pair. Values must match regular expression `[\w\s-.]{1,255}`.
           This must be provided for all formats except 'selfsignedcert'; self-signed certs may specify the
           alias in either this parameter or the JSON body.
             */
            public java.lang.String getAlias() {
              return alias;
            }

            /**
             * The alias for the key, certificate pair. Values must match regular expression
             * `[\w\s-.]{1,255}`. This must be provided for all formats except 'selfsignedcert';
             * self-signed certs may specify the alias in either this parameter or the JSON body.
             */
            public Create setAlias(java.lang.String alias) {
              this.alias = alias;
              return this;
            }

            /**
             * Required. The format of the data. Must be either `selfsignedcert`, `keycertfile`, or
             * `pkcs12`.
             */
            @com.google.api.client.util.Key
            private java.lang.String format;

            /** Required. The format of the data. Must be either `selfsignedcert`, `keycertfile`, or `pkcs12`.
             */
            public java.lang.String getFormat() {
              return format;
            }

            /**
             * Required. The format of the data. Must be either `selfsignedcert`, `keycertfile`, or
             * `pkcs12`.
             */
            public Create setFormat(java.lang.String format) {
              this.format = format;
              return this;
            }

            /** If `true`, no expiry validation will be performed. */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreExpiryValidation;

            /** If `true`, no expiry validation will be performed.
             */
            public java.lang.Boolean getIgnoreExpiryValidation() {
              return ignoreExpiryValidation;
            }

            /** If `true`, no expiry validation will be performed. */
            public Create setIgnoreExpiryValidation(java.lang.Boolean ignoreExpiryValidation) {
              this.ignoreExpiryValidation = ignoreExpiryValidation;
              return this;
            }

            /**
             * If `true`, do not throw an error when the file contains a chain with no newline
             * between each certificate. By default, a newline is needed between each certificate in
             * a chain.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreNewlineValidation;

            /** If `true`, do not throw an error when the file contains a chain with no newline between each
           certificate. By default, a newline is needed between each certificate in a chain.
             */
            public java.lang.Boolean getIgnoreNewlineValidation() {
              return ignoreNewlineValidation;
            }

            /**
             * If `true`, do not throw an error when the file contains a chain with no newline
             * between each certificate. By default, a newline is needed between each certificate in
             * a chain.
             */
            public Create setIgnoreNewlineValidation(java.lang.Boolean ignoreNewlineValidation) {
              this.ignoreNewlineValidation = ignoreNewlineValidation;
              return this;
            }

            @Override
            public Create set(String parameterName, Object value) {
              return (Create) super.set(parameterName, value);
            }
          }
          /**
           * Generates a PKCS #10 Certificate Signing Request for the private key in an alias.
           *
           * Create a request for the method "aliases.csr".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Csr#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @return the request
           */
          public Csr csr(java.lang.String name) throws java.io.IOException {
            Csr result = new Csr(name);
            initialize(result);
            return result;
          }

          public class Csr extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v1/{+name}/csr";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Generates a PKCS #10 Certificate Signing Request for the private key in an alias.
             *
             * Create a request for the method "aliases.csr".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Csr#execute()} method to invoke the remote operation. <p> {@link
             * Csr#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @since 1.13
             */
            protected Csr(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Csr set$Xgafv(java.lang.String $Xgafv) {
              return (Csr) super.set$Xgafv($Xgafv);
            }

            @Override
            public Csr setAccessToken(java.lang.String accessToken) {
              return (Csr) super.setAccessToken(accessToken);
            }

            @Override
            public Csr setAlt(java.lang.String alt) {
              return (Csr) super.setAlt(alt);
            }

            @Override
            public Csr setCallback(java.lang.String callback) {
              return (Csr) super.setCallback(callback);
            }

            @Override
            public Csr setFields(java.lang.String fields) {
              return (Csr) super.setFields(fields);
            }

            @Override
            public Csr setKey(java.lang.String key) {
              return (Csr) super.setKey(key);
            }

            @Override
            public Csr setOauthToken(java.lang.String oauthToken) {
              return (Csr) super.setOauthToken(oauthToken);
            }

            @Override
            public Csr setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Csr) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Csr setQuotaUser(java.lang.String quotaUser) {
              return (Csr) super.setQuotaUser(quotaUser);
            }

            @Override
            public Csr setUploadType(java.lang.String uploadType) {
              return (Csr) super.setUploadType(uploadType);
            }

            @Override
            public Csr setUploadProtocol(java.lang.String uploadProtocol) {
              return (Csr) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public Csr setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Csr set(String parameterName, Object value) {
              return (Csr) super.set(parameterName, value);
            }
          }
          /**
           * Deletes an alias.
           *
           * Create a request for the method "aliases.delete".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @return the request
           */
          public Delete delete(java.lang.String name) throws java.io.IOException {
            Delete result = new Delete(name);
            initialize(result);
            return result;
          }

          public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Deletes an alias.
             *
             * Create a request for the method "aliases.delete".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
             * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @since 1.13
             */
            protected Delete(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public Delete set$Xgafv(java.lang.String $Xgafv) {
              return (Delete) super.set$Xgafv($Xgafv);
            }

            @Override
            public Delete setAccessToken(java.lang.String accessToken) {
              return (Delete) super.setAccessToken(accessToken);
            }

            @Override
            public Delete setAlt(java.lang.String alt) {
              return (Delete) super.setAlt(alt);
            }

            @Override
            public Delete setCallback(java.lang.String callback) {
              return (Delete) super.setCallback(callback);
            }

            @Override
            public Delete setFields(java.lang.String fields) {
              return (Delete) super.setFields(fields);
            }

            @Override
            public Delete setKey(java.lang.String key) {
              return (Delete) super.setKey(key);
            }

            @Override
            public Delete setOauthToken(java.lang.String oauthToken) {
              return (Delete) super.setOauthToken(oauthToken);
            }

            @Override
            public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Delete) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Delete setQuotaUser(java.lang.String quotaUser) {
              return (Delete) super.setQuotaUser(quotaUser);
            }

            @Override
            public Delete setUploadType(java.lang.String uploadType) {
              return (Delete) super.setUploadType(uploadType);
            }

            @Override
            public Delete setUploadProtocol(java.lang.String uploadProtocol) {
              return (Delete) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public Delete setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Delete set(String parameterName, Object value) {
              return (Delete) super.set(parameterName, value);
            }
          }
          /**
           * Gets an alias.
           *
           * Create a request for the method "aliases.get".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @return the request
           */
          public Get get(java.lang.String name) throws java.io.IOException {
            Get result = new Get(name);
            initialize(result);
            return result;
          }

          public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Gets an alias.
             *
             * Create a request for the method "aliases.get".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
             * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @since 1.13
             */
            protected Get(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public Get set$Xgafv(java.lang.String $Xgafv) {
              return (Get) super.set$Xgafv($Xgafv);
            }

            @Override
            public Get setAccessToken(java.lang.String accessToken) {
              return (Get) super.setAccessToken(accessToken);
            }

            @Override
            public Get setAlt(java.lang.String alt) {
              return (Get) super.setAlt(alt);
            }

            @Override
            public Get setCallback(java.lang.String callback) {
              return (Get) super.setCallback(callback);
            }

            @Override
            public Get setFields(java.lang.String fields) {
              return (Get) super.setFields(fields);
            }

            @Override
            public Get setKey(java.lang.String key) {
              return (Get) super.setKey(key);
            }

            @Override
            public Get setOauthToken(java.lang.String oauthToken) {
              return (Get) super.setOauthToken(oauthToken);
            }

            @Override
            public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Get) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Get setQuotaUser(java.lang.String quotaUser) {
              return (Get) super.setQuotaUser(quotaUser);
            }

            @Override
            public Get setUploadType(java.lang.String uploadType) {
              return (Get) super.setUploadType(uploadType);
            }

            @Override
            public Get setUploadProtocol(java.lang.String uploadProtocol) {
              return (Get) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public Get setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Get set(String parameterName, Object value) {
              return (Get) super.set(parameterName, value);
            }
          }
          /**
           * Gets the certificate from an alias in PEM-encoded form.
           *
           * Create a request for the method "aliases.getCertificate".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetCertificate#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @return the request
           */
          public GetCertificate getCertificate(java.lang.String name) throws java.io.IOException {
            GetCertificate result = new GetCertificate(name);
            initialize(result);
            return result;
          }

          public class GetCertificate extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

            private static final String REST_PATH = "v1/{+name}/certificate";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Gets the certificate from an alias in PEM-encoded form.
             *
             * Create a request for the method "aliases.getCertificate".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetCertificate#execute()} method to invoke the remote operation.
             * <p> {@link GetCertificate#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
             * ientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @since 1.13
             */
            protected GetCertificate(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetCertificate set$Xgafv(java.lang.String $Xgafv) {
              return (GetCertificate) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetCertificate setAccessToken(java.lang.String accessToken) {
              return (GetCertificate) super.setAccessToken(accessToken);
            }

            @Override
            public GetCertificate setAlt(java.lang.String alt) {
              return (GetCertificate) super.setAlt(alt);
            }

            @Override
            public GetCertificate setCallback(java.lang.String callback) {
              return (GetCertificate) super.setCallback(callback);
            }

            @Override
            public GetCertificate setFields(java.lang.String fields) {
              return (GetCertificate) super.setFields(fields);
            }

            @Override
            public GetCertificate setKey(java.lang.String key) {
              return (GetCertificate) super.setKey(key);
            }

            @Override
            public GetCertificate setOauthToken(java.lang.String oauthToken) {
              return (GetCertificate) super.setOauthToken(oauthToken);
            }

            @Override
            public GetCertificate setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetCertificate) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetCertificate setQuotaUser(java.lang.String quotaUser) {
              return (GetCertificate) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetCertificate setUploadType(java.lang.String uploadType) {
              return (GetCertificate) super.setUploadType(uploadType);
            }

            @Override
            public GetCertificate setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetCertificate) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public GetCertificate setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetCertificate set(String parameterName, Object value) {
              return (GetCertificate) super.set(parameterName, value);
            }
          }
          /**
           * Lists all aliases.
           *
           * Create a request for the method "aliases.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. The name of the keystore. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keystores.Aliases.List.> {

            private static final String REST_PATH = "v1/{+parent}/aliases";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");

            /**
             * Lists all aliases.
             *
             * Create a request for the method "aliases.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. The name of the keystore. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keystores.Aliases.List..class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the keystore. Must be of the form
             * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. The name of the keystore. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. The name of the keystore. Must be of the form
             * `organizations/{organization}/environments/{environment}/keystores/{keystore}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }
          /**
           * Updates the certificate in an alias.
           *
           * Create a request for the method "aliases.update".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation.
           *
           * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @return the request
           */
          public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
            Update result = new Update(name, content);
            initialize(result);
            return result;
          }

          public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias> {

            private static final String REST_PATH = "v1/{+name}";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");

            /**
             * Updates the certificate in an alias.
             *
             * Create a request for the method "aliases.update".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
             * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. The name of the alias. Must be of the form
           *        `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{ali
           *        as}`.
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
             * @since 1.13
             */
            protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Alias.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
            }

            @Override
            public Update set$Xgafv(java.lang.String $Xgafv) {
              return (Update) super.set$Xgafv($Xgafv);
            }

            @Override
            public Update setAccessToken(java.lang.String accessToken) {
              return (Update) super.setAccessToken(accessToken);
            }

            @Override
            public Update setAlt(java.lang.String alt) {
              return (Update) super.setAlt(alt);
            }

            @Override
            public Update setCallback(java.lang.String callback) {
              return (Update) super.setCallback(callback);
            }

            @Override
            public Update setFields(java.lang.String fields) {
              return (Update) super.setFields(fields);
            }

            @Override
            public Update setKey(java.lang.String key) {
              return (Update) super.setKey(key);
            }

            @Override
            public Update setOauthToken(java.lang.String oauthToken) {
              return (Update) super.setOauthToken(oauthToken);
            }

            @Override
            public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Update) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Update setQuotaUser(java.lang.String quotaUser) {
              return (Update) super.setQuotaUser(quotaUser);
            }

            @Override
            public Update setUploadType(java.lang.String uploadType) {
              return (Update) super.setUploadType(uploadType);
            }

            @Override
            public Update setUploadProtocol(java.lang.String uploadProtocol) {
              return (Update) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. The name of the alias. Must be of the form
           `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. The name of the alias. Must be of the form `organizations/{organization}/en
             * vironments/{environment}/keystores/{keystore}/aliases/{alias}`.
             */
            public Update setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$");
              }
              this.name = name;
              return this;
            }

            /** Required. If `true`, no expiry validation will be performed. */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreExpiryValidation;

            /** Required. If `true`, no expiry validation will be performed.
             */
            public java.lang.Boolean getIgnoreExpiryValidation() {
              return ignoreExpiryValidation;
            }

            /** Required. If `true`, no expiry validation will be performed. */
            public Update setIgnoreExpiryValidation(java.lang.Boolean ignoreExpiryValidation) {
              this.ignoreExpiryValidation = ignoreExpiryValidation;
              return this;
            }

            /**
             * If `true`, do not throw an error when the file contains a chain with no newline
             * between each certificate. By default, a newline is needed between each certificate in
             * a chain.
             */
            @com.google.api.client.util.Key
            private java.lang.Boolean ignoreNewlineValidation;

            /** If `true`, do not throw an error when the file contains a chain with no newline between each
           certificate. By default, a newline is needed between each certificate in a chain.
             */
            public java.lang.Boolean getIgnoreNewlineValidation() {
              return ignoreNewlineValidation;
            }

            /**
             * If `true`, do not throw an error when the file contains a chain with no newline
             * between each certificate. By default, a newline is needed between each certificate in
             * a chain.
             */
            public Update setIgnoreNewlineValidation(java.lang.Boolean ignoreNewlineValidation) {
              this.ignoreNewlineValidation = ignoreNewlineValidation;
              return this;
            }

            @Override
            public Update set(String parameterName, Object value) {
              return (Update) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Keyvaluemaps collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Keyvaluemaps.List request = apigee.keyvaluemaps().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Keyvaluemaps keyvaluemaps() {
        return new Keyvaluemaps();
      }

      /**
       * The "keyvaluemaps" collection of methods.
       */
      public class Keyvaluemaps {

        /**
         * Creates a key value map in an environment.
         *
         * Create a request for the method "keyvaluemaps.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to create the key value map.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a key value map in an environment.
           *
           * Create a request for the method "keyvaluemaps.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to create the key value map.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to create the key value map. Must be of
           * the form `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to create the key value map. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to create the key value map. Must be of
           * the form `organizations/{organization}/environments/{environment}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Delete a key value map in an environment.
         *
         * Create a request for the method "keyvaluemaps.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the key value map.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");

          /**
           * Delete a key value map in an environment.
           *
           * Create a request for the method "keyvaluemaps.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the key value map.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the key value map. Must be of the form
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the key value map. Must be of the form
         `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the key value map. Must be of the form
           * `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * List key value maps in an environment.
         *
         * Create a request for the method "keyvaluemaps.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the environment in which to list key value maps.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keyvaluemaps.List.> {

          private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * List key value maps in an environment.
           *
           * Create a request for the method "keyvaluemaps.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the environment in which to list key value maps.
        Must be of the form
         *        `organizations/{organization}/environments/{environment}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Keyvaluemaps.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the environment in which to list key value maps. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the environment in which to list key value maps. Must be of the form
         `organizations/{organization}/environments/{environment}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the environment in which to list key value maps. Must be of the
           * form `organizations/{organization}/environments/{environment}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the OptimizedStats collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.OptimizedStats.List request = apigee.optimizedStats().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public OptimizedStats optimizedStats() {
        return new OptimizedStats();
      }

      /**
       * The "optimizedStats" collection of methods.
       */
      public class OptimizedStats {

        /**
         * This api is similar to GetStats except that the response is less verbose. In the current scheme,
         * a query parameter _optimized instructs Edge Analytics to change the response but since this
         * behavior is not possible with protocol buffer and since this parameter is predominantly used by
         * Edge UI, we are introducing a separate api.
         *
         * Create a request for the method "optimizedStats.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The organization and environment name for which the interactive
        query will be executed.
         *        Must be of the form
         *        `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings. E.g. apiproxy,
        target_host. The
         *        value of dimensions should be comma separated list as
        shown below
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OptimizedStats> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/optimizedStats/.*$");

          /**
           * This api is similar to GetStats except that the response is less verbose. In the current
           * scheme, a query parameter _optimized instructs Edge Analytics to change the response but since
           * this behavior is not possible with protocol buffer and since this parameter is predominantly
           * used by Edge UI, we are introducing a separate api.
           *
           * Create a request for the method "optimizedStats.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The organization and environment name for which the interactive
        query will be executed.
         *        Must be of the form
         *        `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings. E.g. apiproxy,
        target_host. The
         *        value of dimensions should be comma separated list as
        shown below
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1OptimizedStats.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/optimizedStats/.*$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The organization and environment name for which the interactive query will be
           * executed. Must be of the form
           * `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
           * Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host.
           * The value of dimensions should be comma separated list as shown below
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The organization and environment name for which the interactive query will be executed.
         Must be of the form
         `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}` Dimensions let
         you view metrics in meaningful groupings. E.g. apiproxy, target_host. The value of dimensions
         should be comma separated list as shown below
         `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The organization and environment name for which the interactive query will be
           * executed. Must be of the form
           * `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
           * Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host.
           * The value of dimensions should be comma separated list as shown below
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/optimizedStats/.*$");
            }
            this.name = name;
            return this;
          }

          /** Legacy field. not used anymore */
          @com.google.api.client.util.Key
          private java.lang.String accuracy;

          /** Legacy field. not used anymore
           */
          public java.lang.String getAccuracy() {
            return accuracy;
          }

          /** Legacy field. not used anymore */
          public Get setAccuracy(java.lang.String accuracy) {
            this.accuracy = accuracy;
            return this;
          }

          /**
           * If customers want to query custom aggregate tables, then this parameter can be used to
           * specify the table name. If this parameter is skipped, then Edge Query will try to
           * retrieve the data from fact tables which will be expensive.
           */
          @com.google.api.client.util.Key
          private java.lang.String aggTable;

          /** If customers want to query custom aggregate tables, then this parameter can be used to specify the
         table name. If this parameter is skipped, then Edge Query will try to retrieve the data from fact
         tables which will be expensive.
           */
          public java.lang.String getAggTable() {
            return aggTable;
          }

          /**
           * If customers want to query custom aggregate tables, then this parameter can be used to
           * specify the table name. If this parameter is skipped, then Edge Query will try to
           * retrieve the data from fact tables which will be expensive.
           */
          public Get setAggTable(java.lang.String aggTable) {
            this.aggTable = aggTable;
            return this;
          }

          /** Enables drill-down on specific dimension values */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Enables drill-down on specific dimension values
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Enables drill-down on specific dimension values */
          public Get setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * This parameter is used to limit the number of result items. Default and the max value
           * is 14400
           */
          @com.google.api.client.util.Key
          private java.lang.String limit;

          /** This parameter is used to limit the number of result items. Default and the max value is 14400
           */
          public java.lang.String getLimit() {
            return limit;
          }

          /**
           * This parameter is used to limit the number of result items. Default and the max value
           * is 14400
           */
          public Get setLimit(java.lang.String limit) {
            this.limit = limit;
            return this;
          }

          /**
           * Use offset with limit to enable pagination of results. For example, to display results
           * 11-20, set limit to '10' and offset to '10'.
           */
          @com.google.api.client.util.Key
          private java.lang.String offset;

          /** Use offset with limit to enable pagination of results. For example, to display results 11-20, set
         limit to '10' and offset to '10'.
           */
          public java.lang.String getOffset() {
            return offset;
          }

          /**
           * Use offset with limit to enable pagination of results. For example, to display results
           * 11-20, set limit to '10' and offset to '10'.
           */
          public Get setOffset(java.lang.String offset) {
            this.offset = offset;
            return this;
          }

          /** Legacy field: not used anymore */
          @com.google.api.client.util.Key
          private java.lang.Boolean realtime;

          /** Legacy field: not used anymore
           */
          public java.lang.Boolean getRealtime() {
            return realtime;
          }

          /** Legacy field: not used anymore */
          public Get setRealtime(java.lang.Boolean realtime) {
            this.realtime = realtime;
            return this;
          }

          /**
           * Required. The select parameter contains a comma separated list of metrics E.g.
           * sum(message_count),sum(error_count)
           */
          @com.google.api.client.util.Key
          private java.lang.String select;

          /** Required. The select parameter contains a comma separated list of metrics E.g.
         sum(message_count),sum(error_count)
           */
          public java.lang.String getSelect() {
            return select;
          }

          /**
           * Required. The select parameter contains a comma separated list of metrics E.g.
           * sum(message_count),sum(error_count)
           */
          public Get setSelect(java.lang.String select) {
            this.select = select;
            return this;
          }

          /** This parameter routes the query to api monitoring service for last hour */
          @com.google.api.client.util.Key
          private java.lang.Boolean sonar;

          /** This parameter routes the query to api monitoring service for last hour
           */
          public java.lang.Boolean getSonar() {
            return sonar;
          }

          /** This parameter routes the query to api monitoring service for last hour */
          public Get setSonar(java.lang.Boolean sonar) {
            this.sonar = sonar;
            return this;
          }

          /**
           * This parameter specifies if the sort order should be ascending or descending Supported
           * values are DESC and ASC.
           */
          @com.google.api.client.util.Key
          private java.lang.String sort;

          /** This parameter specifies if the sort order should be ascending or descending Supported values are
         DESC and ASC.
           */
          public java.lang.String getSort() {
            return sort;
          }

          /**
           * This parameter specifies if the sort order should be ascending or descending Supported
           * values are DESC and ASC.
           */
          public Get setSort(java.lang.String sort) {
            this.sort = sort;
            return this;
          }

          /** Comma separated list of columns to sort the final result. */
          @com.google.api.client.util.Key
          private java.lang.String sortby;

          /** Comma separated list of columns to sort the final result.
           */
          public java.lang.String getSortby() {
            return sortby;
          }

          /** Comma separated list of columns to sort the final result. */
          public Get setSortby(java.lang.String sortby) {
            this.sortby = sortby;
            return this;
          }

          /**
           * Required. Time interval for the interactive query. Time range is specified as start~end
           * E.g. 04/15/2017 00:00~05/15/2017 23:59
           */
          @com.google.api.client.util.Key
          private java.lang.String timeRange;

          /** Required. Time interval for the interactive query. Time range is specified as start~end E.g.
         04/15/2017 00:00~05/15/2017 23:59
           */
          public java.lang.String getTimeRange() {
            return timeRange;
          }

          /**
           * Required. Time interval for the interactive query. Time range is specified as start~end
           * E.g. 04/15/2017 00:00~05/15/2017 23:59
           */
          public Get setTimeRange(java.lang.String timeRange) {
            this.timeRange = timeRange;
            return this;
          }

          /**
           * A value of second, minute, hour, day, week, month. Time Unit specifies the granularity
           * of metrics returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String timeUnit;

          /** A value of second, minute, hour, day, week, month. Time Unit specifies the granularity of metrics
         returned.
           */
          public java.lang.String getTimeUnit() {
            return timeUnit;
          }

          /**
           * A value of second, minute, hour, day, week, month. Time Unit specifies the granularity
           * of metrics returned.
           */
          public Get setTimeUnit(java.lang.String timeUnit) {
            this.timeUnit = timeUnit;
            return this;
          }

          /**
           * Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          @com.google.api.client.util.Key
          private java.lang.String topk;

          /** Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          public java.lang.String getTopk() {
            return topk;
          }

          /**
           * Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          public Get setTopk(java.lang.String topk) {
            this.topk = topk;
            return this;
          }

          /**
           * Lists timestamps in ascending order if set to true. Recommend setting this value to
           * true if you are using sortby with sort=DESC.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean tsAscending;

          /** Lists timestamps in ascending order if set to true. Recommend setting this value to true if you are
         using sortby with sort=DESC.
           */
          public java.lang.Boolean getTsAscending() {
            return tsAscending;
          }

          /**
           * Lists timestamps in ascending order if set to true. Recommend setting this value to
           * true if you are using sortby with sort=DESC.
           */
          public Get setTsAscending(java.lang.Boolean tsAscending) {
            this.tsAscending = tsAscending;
            return this;
          }

          /** This parameters contains the timezone offset value */
          @com.google.api.client.util.Key
          private java.lang.String tzo;

          /** This parameters contains the timezone offset value
           */
          public java.lang.String getTzo() {
            return tzo;
          }

          /** This parameters contains the timezone offset value */
          public Get setTzo(java.lang.String tzo) {
            this.tzo = tzo;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Queries collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Queries.List request = apigee.queries().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Queries queries() {
        return new Queries();
      }

      /**
       * The "queries" collection of methods.
       */
      public class Queries {

        /**
         * Submit a query to be processed in the background. If the submission of the query succeeds, the
         * API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201,
         * the `state` of "enqueued" means that the request succeeded.
         *
         * Create a request for the method "queries.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization and environment names.
        Must be of the form
         *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery> {

          private static final String REST_PATH = "v1/{+parent}/queries";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Submit a query to be processed in the background. If the submission of the query succeeds, the
           * API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201,
           * the `state` of "enqueued" means that the request succeeded.
           *
           * Create a request for the method "queries.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization and environment names.
        Must be of the form
         *        `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Query content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent organization and environment names. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization and environment names. Must be of the form
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent organization and environment names. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Get query status If the query is still in progress, the `state` is set to "running" After the
         * query has completed successfully, `state` is set to "completed"
         *
         * Create a request for the method "queries.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the asynchronous query to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/queries/[^/]+$");

          /**
           * Get query status If the query is still in progress, the `state` is set to "running" After the
           * query has completed successfully, `state` is set to "completed"
           *
           * Create a request for the method "queries.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the asynchronous query to get. Must be of the form
         *        `organizations/{org}/environments/{env}/queries/{queryId}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQuery.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the asynchronous query to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the asynchronous query to get. Must be of the form
         `organizations/{org}/environments/{env}/queries/{queryId}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the asynchronous query to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * After the query is completed, use this API to retrieve the results. If the request succeeds, and
         * there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The
         * name of the downloaded file will be:   OfflineQueryResult-.zip
         *
         * Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
         *
         * Create a request for the method "queries.getResult".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetResult#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the asynchronous query result to get. Must be of the
        form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/result`.
         * @return the request
         */
        public GetResult getResult(java.lang.String name) throws java.io.IOException {
          GetResult result = new GetResult(name);
          initialize(result);
          return result;
        }

        public class GetResult extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$");

          /**
           * After the query is completed, use this API to retrieve the results. If the request succeeds,
           * and there is a non-zero result set, the result is downloaded to the client as a zipped JSON
           * file. The name of the downloaded file will be:   OfflineQueryResult-.zip
           *
           * Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
           *
           * Create a request for the method "queries.getResult".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetResult#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetResult#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the asynchronous query result to get. Must be of the
        form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           * @since 1.13
           */
          protected GetResult(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetResult set$Xgafv(java.lang.String $Xgafv) {
            return (GetResult) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetResult setAccessToken(java.lang.String accessToken) {
            return (GetResult) super.setAccessToken(accessToken);
          }

          @Override
          public GetResult setAlt(java.lang.String alt) {
            return (GetResult) super.setAlt(alt);
          }

          @Override
          public GetResult setCallback(java.lang.String callback) {
            return (GetResult) super.setCallback(callback);
          }

          @Override
          public GetResult setFields(java.lang.String fields) {
            return (GetResult) super.setFields(fields);
          }

          @Override
          public GetResult setKey(java.lang.String key) {
            return (GetResult) super.setKey(key);
          }

          @Override
          public GetResult setOauthToken(java.lang.String oauthToken) {
            return (GetResult) super.setOauthToken(oauthToken);
          }

          @Override
          public GetResult setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetResult) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetResult setQuotaUser(java.lang.String quotaUser) {
            return (GetResult) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetResult setUploadType(java.lang.String uploadType) {
            return (GetResult) super.setUploadType(uploadType);
          }

          @Override
          public GetResult setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetResult) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the asynchronous query result to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the asynchronous query result to get. Must be of the form
         `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the asynchronous query result to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/result`.
           */
          public GetResult setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetResult set(String parameterName, Object value) {
            return (GetResult) super.set(parameterName, value);
          }
        }
        /**
         * Create a request for the method "queries.getResultView".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the asynchronous query result view to get. Must be of the
        form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
         * @return the request
         */
        public GetResultView getResultView(java.lang.String name) throws java.io.IOException {
          GetResultView result = new GetResultView(name);
          initialize(result);
          return result;
        }

        public class GetResultView extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQueryResultView> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resultView$");

          /**
           * Create a request for the method "queries.getResultView".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetResultView#execute()} method to invoke the remote operation. <p>
           * {@link GetResultView#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
           * equest)} must be called to initialize this instance immediately after invoking the constructor.
           * </p>
           *
           * @param name Required. Name of the asynchronous query result view to get. Must be of the
        form
         *        `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
           * @since 1.13
           */
          protected GetResultView(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AsyncQueryResultView.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resultView$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetResultView set$Xgafv(java.lang.String $Xgafv) {
            return (GetResultView) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetResultView setAccessToken(java.lang.String accessToken) {
            return (GetResultView) super.setAccessToken(accessToken);
          }

          @Override
          public GetResultView setAlt(java.lang.String alt) {
            return (GetResultView) super.setAlt(alt);
          }

          @Override
          public GetResultView setCallback(java.lang.String callback) {
            return (GetResultView) super.setCallback(callback);
          }

          @Override
          public GetResultView setFields(java.lang.String fields) {
            return (GetResultView) super.setFields(fields);
          }

          @Override
          public GetResultView setKey(java.lang.String key) {
            return (GetResultView) super.setKey(key);
          }

          @Override
          public GetResultView setOauthToken(java.lang.String oauthToken) {
            return (GetResultView) super.setOauthToken(oauthToken);
          }

          @Override
          public GetResultView setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetResultView) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetResultView setQuotaUser(java.lang.String quotaUser) {
            return (GetResultView) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetResultView setUploadType(java.lang.String uploadType) {
            return (GetResultView) super.setUploadType(uploadType);
          }

          @Override
          public GetResultView setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetResultView) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the asynchronous query result view to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the asynchronous query result view to get. Must be of the form
         `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the asynchronous query result view to get. Must be of the form
           * `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.
           */
          public GetResultView setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resultView$");
            }
            this.name = name;
            return this;
          }

          @Override
          public GetResultView set(String parameterName, Object value) {
            return (GetResultView) super.set(parameterName, value);
          }
        }
        /**
         * Return a list of Asynchronous Queries
         *
         * Create a request for the method "queries.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent organization and environment names.
        Must be of the form
         *        `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAsyncQueriesResponse> {

          private static final String REST_PATH = "v1/{+parent}/queries";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Return a list of Asynchronous Queries
           *
           * Create a request for the method "queries.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent organization and environment names.
        Must be of the form
         *        `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAsyncQueriesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent organization and environment names. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent organization and environment names. Must be of the form
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent organization and environment names. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Filter response list by dataset.
           *
           * Example: `api`, `mint`
           */
          @com.google.api.client.util.Key
          private java.lang.String dataset;

          /** Filter response list by dataset.

         Example: `api`, `mint`
           */
          public java.lang.String getDataset() {
            return dataset;
          }

          /**
           * Filter response list by dataset.
           *
           * Example: `api`, `mint`
           */
          public List setDataset(java.lang.String dataset) {
            this.dataset = dataset;
            return this;
          }

          /**
           * Filter response list by returning asynchronous queries that created after this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          @com.google.api.client.util.Key
          private java.lang.String from;

          /** Filter response list by returning asynchronous queries that created after this date time. Time must
         be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          public java.lang.String getFrom() {
            return from;
          }

          /**
           * Filter response list by returning asynchronous queries that created after this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
           */
          public List setFrom(java.lang.String from) {
            this.from = from;
            return this;
          }

          /**
           * Flag to include asynchronous queries that don't have a report denifition.
           */
          @com.google.api.client.util.Key
          private java.lang.String inclQueriesWithoutReport;

          /** Flag to include asynchronous queries that don't have a report denifition.
           */
          public java.lang.String getInclQueriesWithoutReport() {
            return inclQueriesWithoutReport;
          }

          /**
           * Flag to include asynchronous queries that don't have a report denifition.
           */
          public List setInclQueriesWithoutReport(java.lang.String inclQueriesWithoutReport) {
            this.inclQueriesWithoutReport = inclQueriesWithoutReport;
            return this;
          }

          /** Filter response list by asynchronous query status */
          @com.google.api.client.util.Key
          private java.lang.String status;

          /** Filter response list by asynchronous query status
           */
          public java.lang.String getStatus() {
            return status;
          }

          /** Filter response list by asynchronous query status */
          public List setStatus(java.lang.String status) {
            this.status = status;
            return this;
          }

          /** Filter response list by user who submitted queries */
          @com.google.api.client.util.Key
          private java.lang.String submittedBy;

          /** Filter response list by user who submitted queries
           */
          public java.lang.String getSubmittedBy() {
            return submittedBy;
          }

          /** Filter response list by user who submitted queries */
          public List setSubmittedBy(java.lang.String submittedBy) {
            this.submittedBy = submittedBy;
            return this;
          }

          /**
           * Filter response list by returning asynchronous queries that created before this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          @com.google.api.client.util.Key
          private java.lang.String to;

          /** Filter response list by returning asynchronous queries that created before this date time. Time
         must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          public java.lang.String getTo() {
            return to;
          }

          /**
           * Filter response list by returning asynchronous queries that created before this date
           * time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
           */
          public List setTo(java.lang.String to) {
            this.to = to;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the References collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.References.List request = apigee.references().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public References references() {
        return new References();
      }

      /**
       * The "references" collection of methods.
       */
      public class References {

        /**
         * Creates a Reference in the specified environment.
         *
         * Create a request for the method "references.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name under which the Reference will
        be created. Must be of the form
         *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+parent}/references";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a Reference in the specified environment.
           *
           * Create a request for the method "references.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name under which the Reference will
        be created. Must be of the form
         *        `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name under which the Reference will be created. Must
           * be of the form `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name under which the Reference will be created. Must be of the
         form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name under which the Reference will be created. Must
           * be of the form `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a Reference from an environment. Returns the deleted Reference resource.
         *
         * Create a request for the method "references.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Reference to delete. Must be
        of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/references/[^/]+$");

          /**
           * Deletes a Reference from an environment. Returns the deleted Reference resource.
           *
           * Create a request for the method "references.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Reference to delete. Must be
        of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Reference to delete. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Reference to delete. Must be of the form
         `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Reference to delete. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a Reference resource.
         *
         * Create a request for the method "references.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Reference to get. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/references/[^/]+$");

          /**
           * Gets a Reference resource.
           *
           * Create a request for the method "references.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Reference to get. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Reference to get. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Reference to get. Must be of the form
         `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Reference to get. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all References in an environment as a JSON array.
         *
         * Create a request for the method "references.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name. Must be of the form
        `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.References.List.> {

          private static final String REST_PATH = "v1/{+parent}/references";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all References in an environment as a JSON array.
           *
           * Create a request for the method "references.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name. Must be of the form
        `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.References.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name. Must be of the form
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing Reference. Note that this operation has PUT semantics; it will replace the
         * entirety of the existing Reference with the resource in the request body.
         *
         * Create a request for the method "references.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the Reference to update. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/references/[^/]+$");

          /**
           * Updates an existing Reference. Note that this operation has PUT semantics; it will replace the
           * entirety of the existing Reference with the resource in the request body.
           *
           * Create a request for the method "references.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the Reference to update. Must be of the form
         *        `organizations/{org}/environments/{env}/references/{ref}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Reference.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the Reference to update. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the Reference to update. Must be of the form
         `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the Reference to update. Must be of the form
           * `organizations/{org}/environments/{env}/references/{ref}`.
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/references/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Resourcefiles collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Resourcefiles.List request = apigee.resourcefiles().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Resourcefiles resourcefiles() {
        return new Resourcefiles();
      }

      /**
       * The "resourcefiles" collection of methods.
       */
      public class Resourcefiles {

        /**
         * Creates a resource file.
         *
         * Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`.
         *
         * For more information about resource files, see [Resource files](/api-platform/develop/resource-
         * files).
         *
         * Create a request for the method "resourcefiles.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in which to create the resource file in the
        following format:
         *        `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a resource file.
           *
           * Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`.
           *
           * For more information about resource files, see [Resource files](/api-platform/develop/resource-
           * files).
           *
           * Create a request for the method "resourcefiles.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in which to create the resource file in the
        following format:
         *        `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in which to create the resource file in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in which to create the resource file in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in which to create the resource file in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Required. Name of the resource file.  Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource file.  Must match the regular expression:
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the resource file.  Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Create setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. Resource file type. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          public Create setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a resource file.
         *
         * For more information about resource files, see [Resource files](/api-platform/develop/resource-
         * files).
         *
         * Create a request for the method "resourcefiles.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in the following format:
         *        `organizations/{org}/environments/{env}`.
         * @param type Required. Resource file type. {{ resource_file_type }}
         * @param name Required. ID of the resource file to delete. Must match the regular
        expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
         * @return the request
         */
        public Delete delete(java.lang.String parent, java.lang.String type, java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(parent, type, name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}/{name}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Deletes a resource file.
           *
           * For more information about resource files, see [Resource files](/api-platform/develop/resource-
           * files).
           *
           * Create a request for the method "resourcefiles.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in the following format:
         *        `organizations/{org}/environments/{env}`.
           * @param type Required. Resource file type. {{ resource_file_type }}
           * @param name Required. ID of the resource file to delete. Must match the regular
        expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           * @since 1.13
           */
          protected Delete(java.lang.String parent, java.lang.String type, java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          public Delete setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. Resource file type. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          public Delete setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          /**
           * Required. ID of the resource file to delete. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the resource file to delete. Must match the regular expression:
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the resource file to delete. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Delete setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets the contents of a resource file.
         *
         * For more information about resource files, see [Resource files](/api-platform/develop/resource-
         * files).
         *
         * Create a request for the method "resourcefiles.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in the following format:
         *        `organizations/{org}/environments/{env}`.
         * @param type Required. Resource file type.  {{ resource_file_type }}
         * @param name Required. ID of the resource file. Must match the regular
        expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
         * @return the request
         */
        public Get get(java.lang.String parent, java.lang.String type, java.lang.String name) throws java.io.IOException {
          Get result = new Get(parent, type, name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}/{name}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Gets the contents of a resource file.
           *
           * For more information about resource files, see [Resource files](/api-platform/develop/resource-
           * files).
           *
           * Create a request for the method "resourcefiles.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in the following format:
         *        `organizations/{org}/environments/{env}`.
           * @param type Required. Resource file type.  {{ resource_file_type }}
           * @param name Required. ID of the resource file. Must match the regular
        expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           * @since 1.13
           */
          protected Get(java.lang.String parent, java.lang.String type, java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          public Get setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. Resource file type.  {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. Resource file type.  {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Required. Resource file type.  {{ resource_file_type }} */
          public Get setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          /**
           * Required. ID of the resource file. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the resource file. Must match the regular expression:
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the resource file. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Get setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all resource files.
         *
         * For more information about resource files, see [Resource files](/api-platform/develop/resource-
         * files).
         *
         * Create a request for the method "resourcefiles.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in which to list resource files in the following
        format:
         *        `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all resource files.
           *
           * For more information about resource files, see [Resource files](/api-platform/develop/resource-
           * files).
           *
           * Create a request for the method "resourcefiles.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in which to list resource files in the following
        format:
         *        `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in which to list resource files in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in which to list resource files in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in which to list resource files in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Type of resource files to list. {{ resource_file_type }}
           */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Optional. Type of resource files to list. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /**
           * Optional. Type of resource files to list. {{ resource_file_type }}
           */
          public List setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Lists all resource files.
         *
         * For more information about resource files, see [Resource files](/api-platform/develop/resource-
         * files).
         *
         * Create a request for the method "resourcefiles.listEnvironmentResources".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link ListEnvironmentResources#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. Name of the environment in which to list resource files in the following
        format:
         *        `organizations/{org}/environments/{env}`.
         * @param type Optional. Type of resource files to list.
        {{ resource_file_type }}
         * @return the request
         */
        public ListEnvironmentResources listEnvironmentResources(java.lang.String parent, java.lang.String type) throws java.io.IOException {
          ListEnvironmentResources result = new ListEnvironmentResources(parent, type);
          initialize(result);
          return result;
        }

        public class ListEnvironmentResources extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all resource files.
           *
           * For more information about resource files, see [Resource files](/api-platform/develop/resource-
           * files).
           *
           * Create a request for the method "resourcefiles.listEnvironmentResources".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link ListEnvironmentResources#execute()} method to invoke the remote
           * operation. <p> {@link ListEnvironmentResources#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in which to list resource files in the following
        format:
         *        `organizations/{org}/environments/{env}`.
           * @param type Optional. Type of resource files to list.
        {{ resource_file_type }}
           * @since 1.13
           */
          protected ListEnvironmentResources(java.lang.String parent, java.lang.String type) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEnvironmentResourcesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListEnvironmentResources set$Xgafv(java.lang.String $Xgafv) {
            return (ListEnvironmentResources) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListEnvironmentResources setAccessToken(java.lang.String accessToken) {
            return (ListEnvironmentResources) super.setAccessToken(accessToken);
          }

          @Override
          public ListEnvironmentResources setAlt(java.lang.String alt) {
            return (ListEnvironmentResources) super.setAlt(alt);
          }

          @Override
          public ListEnvironmentResources setCallback(java.lang.String callback) {
            return (ListEnvironmentResources) super.setCallback(callback);
          }

          @Override
          public ListEnvironmentResources setFields(java.lang.String fields) {
            return (ListEnvironmentResources) super.setFields(fields);
          }

          @Override
          public ListEnvironmentResources setKey(java.lang.String key) {
            return (ListEnvironmentResources) super.setKey(key);
          }

          @Override
          public ListEnvironmentResources setOauthToken(java.lang.String oauthToken) {
            return (ListEnvironmentResources) super.setOauthToken(oauthToken);
          }

          @Override
          public ListEnvironmentResources setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListEnvironmentResources) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListEnvironmentResources setQuotaUser(java.lang.String quotaUser) {
            return (ListEnvironmentResources) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListEnvironmentResources setUploadType(java.lang.String uploadType) {
            return (ListEnvironmentResources) super.setUploadType(uploadType);
          }

          @Override
          public ListEnvironmentResources setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListEnvironmentResources) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in which to list resource files in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in which to list resource files in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in which to list resource files in the following
           * format: `organizations/{org}/environments/{env}`.
           */
          public ListEnvironmentResources setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. Type of resource files to list. {{ resource_file_type }}
           */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Optional. Type of resource files to list. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /**
           * Optional. Type of resource files to list. {{ resource_file_type }}
           */
          public ListEnvironmentResources setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          @Override
          public ListEnvironmentResources set(String parameterName, Object value) {
            return (ListEnvironmentResources) super.set(parameterName, value);
          }
        }
        /**
         * Updates a resource file.
         *
         * Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`.
         *
         * For more information about resource files, see [Resource files](/api-platform/develop/resource-
         * files).
         *
         * Create a request for the method "resourcefiles.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the environment in the following format:
         *        `organizations/{org}/environments/{env}`.
         * @param type Required. Resource file type. {{ resource_file_type }}
         * @param name Required. ID of the resource file to update. Must match the regular
        expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public Update update(java.lang.String parent, java.lang.String type, java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          Update result = new Update(parent, type, name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile> {

          private static final String REST_PATH = "v1/{+parent}/resourcefiles/{type}/{name}";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Updates a resource file.
           *
           * Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`.
           *
           * For more information about resource files, see [Resource files](/api-platform/develop/resource-
           * files).
           *
           * Create a request for the method "resourcefiles.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the environment in the following format:
         *        `organizations/{org}/environments/{env}`.
           * @param type Required. Resource file type. {{ resource_file_type }}
           * @param name Required. ID of the resource file to update. Must match the regular
        expression:
         *        [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected Update(java.lang.String parent, java.lang.String type, java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceFile.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the environment in the following format:
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the environment in the following format:
           * `organizations/{org}/environments/{env}`.
           */
          public Update setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          @com.google.api.client.util.Key
          private java.lang.String type;

          /** Required. Resource file type. {{ resource_file_type }}
           */
          public java.lang.String getType() {
            return type;
          }

          /** Required. Resource file type. {{ resource_file_type }} */
          public Update setType(java.lang.String type) {
            this.type = type;
            return this;
          }

          /**
           * Required. ID of the resource file to update. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the resource file to update. Must match the regular expression:
         [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the resource file to update. Must match the regular expression:
           * [a-zA-Z0-9:/\\!@#$%^&{}\[\]()+\-=,.~'` ]{1,255}
           */
          public Update setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Sharedflows collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Sharedflows.List request = apigee.sharedflows().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Sharedflows sharedflows() {
        return new Sharedflows();
      }

      /**
       * The "sharedflows" collection of methods.
       */
      public class Sharedflows {

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of a shared flow in an environment.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name representing a shared flow in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$");

            /**
             * Lists all deployments of a shared flow in an environment.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name representing a shared flow in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name representing a shared flow in an environment in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Revisions collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Revisions revisions() {
          return new Revisions();
        }

        /**
         * The "revisions" collection of methods.
         */
        public class Revisions {

          /**
           * Undeploys a shared flow revision from an environment.
           *
           * Create a request for the method "revisions.deployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Deployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name of the shared flow revision to undeploy in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
           * @return the request
           */
          public Deployments deployments(java.lang.String name) throws java.io.IOException {
            Deployments result = new Deployments(name);
            initialize(result);
            return result;
          }

          public class Deployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Undeploys a shared flow revision from an environment.
             *
             * Create a request for the method "revisions.deployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Deployments#execute()} method to invoke the remote operation. <p>
             * {@link
             * Deployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param name Required. Name of the shared flow revision to undeploy in the following format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             * @since 1.13
             */
            protected Deployments(java.lang.String name) {
              super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public Deployments set$Xgafv(java.lang.String $Xgafv) {
              return (Deployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public Deployments setAccessToken(java.lang.String accessToken) {
              return (Deployments) super.setAccessToken(accessToken);
            }

            @Override
            public Deployments setAlt(java.lang.String alt) {
              return (Deployments) super.setAlt(alt);
            }

            @Override
            public Deployments setCallback(java.lang.String callback) {
              return (Deployments) super.setCallback(callback);
            }

            @Override
            public Deployments setFields(java.lang.String fields) {
              return (Deployments) super.setFields(fields);
            }

            @Override
            public Deployments setKey(java.lang.String key) {
              return (Deployments) super.setKey(key);
            }

            @Override
            public Deployments setOauthToken(java.lang.String oauthToken) {
              return (Deployments) super.setOauthToken(oauthToken);
            }

            @Override
            public Deployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Deployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Deployments setQuotaUser(java.lang.String quotaUser) {
              return (Deployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public Deployments setUploadType(java.lang.String uploadType) {
              return (Deployments) super.setUploadType(uploadType);
            }

            @Override
            public Deployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (Deployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the shared flow revision to undeploy in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name of the shared flow revision to undeploy in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name of the shared flow revision to undeploy in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public Deployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public Deployments set(String parameterName, Object value) {
              return (Deployments) super.set(parameterName, value);
            }
          }
          /**
           * Gets the deployment of a shared flow revision and actual state reported by runtime pods.
           *
           * Create a request for the method "revisions.getDeployments".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
           *
           * @param name Required. Name representing a shared flow in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
           * @return the request
           */
          public GetDeployments getDeployments(java.lang.String name) throws java.io.IOException {
            GetDeployments result = new GetDeployments(name);
            initialize(result);
            return result;
          }

          public class GetDeployments extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment> {

            private static final String REST_PATH = "v1/{+name}/deployments";

            private final java.util.regex.Pattern NAME_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Gets the deployment of a shared flow revision and actual state reported by runtime pods.
             *
             * Create a request for the method "revisions.getDeployments".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link GetDeployments#execute()} method to invoke the remote operation.
             * <p> {@link GetDeployments#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
             * ientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param name Required. Name representing a shared flow in an environment in the following
          format:
           *        `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             * @since 1.13
             */
            protected GetDeployments(java.lang.String name) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Deployment.class);
              this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public GetDeployments set$Xgafv(java.lang.String $Xgafv) {
              return (GetDeployments) super.set$Xgafv($Xgafv);
            }

            @Override
            public GetDeployments setAccessToken(java.lang.String accessToken) {
              return (GetDeployments) super.setAccessToken(accessToken);
            }

            @Override
            public GetDeployments setAlt(java.lang.String alt) {
              return (GetDeployments) super.setAlt(alt);
            }

            @Override
            public GetDeployments setCallback(java.lang.String callback) {
              return (GetDeployments) super.setCallback(callback);
            }

            @Override
            public GetDeployments setFields(java.lang.String fields) {
              return (GetDeployments) super.setFields(fields);
            }

            @Override
            public GetDeployments setKey(java.lang.String key) {
              return (GetDeployments) super.setKey(key);
            }

            @Override
            public GetDeployments setOauthToken(java.lang.String oauthToken) {
              return (GetDeployments) super.setOauthToken(oauthToken);
            }

            @Override
            public GetDeployments setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (GetDeployments) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public GetDeployments setQuotaUser(java.lang.String quotaUser) {
              return (GetDeployments) super.setQuotaUser(quotaUser);
            }

            @Override
            public GetDeployments setUploadType(java.lang.String uploadType) {
              return (GetDeployments) super.setUploadType(uploadType);
            }

            @Override
            public GetDeployments setUploadProtocol(java.lang.String uploadProtocol) {
              return (GetDeployments) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            @com.google.api.client.util.Key
            private java.lang.String name;

            /** Required. Name representing a shared flow in an environment in the following format:
           `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public java.lang.String getName() {
              return name;
            }

            /**
             * Required. Name representing a shared flow in an environment in the following format:
             * `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
             */
            public GetDeployments setName(java.lang.String name) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                    "Parameter name must conform to the pattern " +
                    "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.name = name;
              return this;
            }

            @Override
            public GetDeployments set(String parameterName, Object value) {
              return (GetDeployments) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Stats collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Stats.List request = apigee.stats().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Stats stats() {
        return new Stats();
      }

      /**
       * The "stats" collection of methods.
       */
      public class Stats {

        /**
         * Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic,
         * message counts, API call latency, response size, and cache hits and counts. Dimensions let you
         * view metrics in meaningful groups. The stats api does accept dimensions as path params. The
         * dimensions are optional in which case the metrics are computed on the entire data for the given
         * timerange.
         *
         * Create a request for the method "stats.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The organization and environment name for which the interactive
        query will be executed.
         *        Must be of the form
         *        `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings. E.g. apiproxy,
        target_host. The
         *        value of dimensions should be comma separated list as
        shown below
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Stats> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/stats/.*$");

          /**
           * Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic,
           * message counts, API call latency, response size, and cache hits and counts. Dimensions let you
           * view metrics in meaningful groups. The stats api does accept dimensions as path params. The
           * dimensions are optional in which case the metrics are computed on the entire data for the given
           * timerange.
           *
           * Create a request for the method "stats.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The organization and environment name for which the interactive
        query will be executed.
         *        Must be of the form
         *        `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
         *        Dimensions let you view metrics in meaningful groupings. E.g. apiproxy,
        target_host. The
         *        value of dimensions should be comma separated list as
        shown below
         *        `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Stats.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/stats/.*$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The organization and environment name for which the interactive query will be
           * executed. Must be of the form
           * `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
           * Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host.
           * The value of dimensions should be comma separated list as shown below
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The organization and environment name for which the interactive query will be executed.
         Must be of the form
         `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}` Dimensions let
         you view metrics in meaningful groupings. E.g. apiproxy, target_host. The value of dimensions
         should be comma separated list as shown below
         `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The organization and environment name for which the interactive query will be
           * executed. Must be of the form
           * `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`
           * Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host.
           * The value of dimensions should be comma separated list as shown below
           * `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/stats/.*$");
            }
            this.name = name;
            return this;
          }

          /**
           * Legacy field. not used anymore This field is present to support UI calls which still
           * use this parameter
           */
          @com.google.api.client.util.Key
          private java.lang.String accuracy;

          /** Legacy field. not used anymore This field is present to support UI calls which still use this
         parameter
           */
          public java.lang.String getAccuracy() {
            return accuracy;
          }

          /**
           * Legacy field. not used anymore This field is present to support UI calls which still
           * use this parameter
           */
          public Get setAccuracy(java.lang.String accuracy) {
            this.accuracy = accuracy;
            return this;
          }

          /**
           * If customers want to query custom aggregate tables, then this parameter can be used to
           * specify the table name. If this parameter is skipped, then Edge Query will try to
           * retrieve the data from fact tables which will be expensive.
           */
          @com.google.api.client.util.Key
          private java.lang.String aggTable;

          /** If customers want to query custom aggregate tables, then this parameter can be used to specify the
         table name. If this parameter is skipped, then Edge Query will try to retrieve the data from fact
         tables which will be expensive.
           */
          public java.lang.String getAggTable() {
            return aggTable;
          }

          /**
           * If customers want to query custom aggregate tables, then this parameter can be used to
           * specify the table name. If this parameter is skipped, then Edge Query will try to
           * retrieve the data from fact tables which will be expensive.
           */
          public Get setAggTable(java.lang.String aggTable) {
            this.aggTable = aggTable;
            return this;
          }

          /** Enables drill-down on specific dimension values */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** Enables drill-down on specific dimension values
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** Enables drill-down on specific dimension values */
          public Get setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /**
           * This parameter is used to limit the number of result items. Default and the max value
           * is 14400
           */
          @com.google.api.client.util.Key
          private java.lang.String limit;

          /** This parameter is used to limit the number of result items. Default and the max value is 14400
           */
          public java.lang.String getLimit() {
            return limit;
          }

          /**
           * This parameter is used to limit the number of result items. Default and the max value
           * is 14400
           */
          public Get setLimit(java.lang.String limit) {
            this.limit = limit;
            return this;
          }

          /**
           * Use offset with limit to enable pagination of results. For example, to display results
           * 11-20, set limit to '10' and offset to '10'.
           */
          @com.google.api.client.util.Key
          private java.lang.String offset;

          /** Use offset with limit to enable pagination of results. For example, to display results 11-20, set
         limit to '10' and offset to '10'.
           */
          public java.lang.String getOffset() {
            return offset;
          }

          /**
           * Use offset with limit to enable pagination of results. For example, to display results
           * 11-20, set limit to '10' and offset to '10'.
           */
          public Get setOffset(java.lang.String offset) {
            this.offset = offset;
            return this;
          }

          /** Legacy field: not used anymore */
          @com.google.api.client.util.Key
          private java.lang.Boolean realtime;

          /** Legacy field: not used anymore
           */
          public java.lang.Boolean getRealtime() {
            return realtime;
          }

          /** Legacy field: not used anymore */
          public Get setRealtime(java.lang.Boolean realtime) {
            this.realtime = realtime;
            return this;
          }

          /**
           * The select parameter contains a comma separated list of metrics E.g.
           * sum(message_count),sum(error_count)
           */
          @com.google.api.client.util.Key
          private java.lang.String select;

          /** The select parameter contains a comma separated list of metrics E.g.
         sum(message_count),sum(error_count)
           */
          public java.lang.String getSelect() {
            return select;
          }

          /**
           * The select parameter contains a comma separated list of metrics E.g.
           * sum(message_count),sum(error_count)
           */
          public Get setSelect(java.lang.String select) {
            this.select = select;
            return this;
          }

          /** This parameter routes the query to api monitoring service for last hour */
          @com.google.api.client.util.Key
          private java.lang.Boolean sonar;

          /** This parameter routes the query to api monitoring service for last hour
           */
          public java.lang.Boolean getSonar() {
            return sonar;
          }

          /** This parameter routes the query to api monitoring service for last hour */
          public Get setSonar(java.lang.Boolean sonar) {
            this.sonar = sonar;
            return this;
          }

          /**
           * This parameter specifies if the sort order should be ascending or descending Supported
           * values are DESC and ASC.
           */
          @com.google.api.client.util.Key
          private java.lang.String sort;

          /** This parameter specifies if the sort order should be ascending or descending Supported values are
         DESC and ASC.
           */
          public java.lang.String getSort() {
            return sort;
          }

          /**
           * This parameter specifies if the sort order should be ascending or descending Supported
           * values are DESC and ASC.
           */
          public Get setSort(java.lang.String sort) {
            this.sort = sort;
            return this;
          }

          /** Comma separated list of columns to sort the final result. */
          @com.google.api.client.util.Key
          private java.lang.String sortby;

          /** Comma separated list of columns to sort the final result.
           */
          public java.lang.String getSortby() {
            return sortby;
          }

          /** Comma separated list of columns to sort the final result. */
          public Get setSortby(java.lang.String sortby) {
            this.sortby = sortby;
            return this;
          }

          /**
           * Time interval for the interactive query. Time range is specified as start~end E.g.
           * 04/15/2017 00:00~05/15/2017 23:59
           */
          @com.google.api.client.util.Key
          private java.lang.String timeRange;

          /** Time interval for the interactive query. Time range is specified as start~end E.g. 04/15/2017
         00:00~05/15/2017 23:59
           */
          public java.lang.String getTimeRange() {
            return timeRange;
          }

          /**
           * Time interval for the interactive query. Time range is specified as start~end E.g.
           * 04/15/2017 00:00~05/15/2017 23:59
           */
          public Get setTimeRange(java.lang.String timeRange) {
            this.timeRange = timeRange;
            return this;
          }

          /**
           * A value of second, minute, hour, day, week, month. Time Unit specifies the granularity
           * of metrics returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String timeUnit;

          /** A value of second, minute, hour, day, week, month. Time Unit specifies the granularity of metrics
         returned.
           */
          public java.lang.String getTimeUnit() {
            return timeUnit;
          }

          /**
           * A value of second, minute, hour, day, week, month. Time Unit specifies the granularity
           * of metrics returned.
           */
          public Get setTimeUnit(java.lang.String timeUnit) {
            this.timeUnit = timeUnit;
            return this;
          }

          /**
           * Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          @com.google.api.client.util.Key
          private java.lang.String topk;

          /** Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          public java.lang.String getTopk() {
            return topk;
          }

          /**
           * Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.
           */
          public Get setTopk(java.lang.String topk) {
            this.topk = topk;
            return this;
          }

          /**
           * Lists timestamps in ascending order if set to true. Recommend setting this value to
           * true if you are using sortby with sort=DESC.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean tsAscending;

          /** Lists timestamps in ascending order if set to true. Recommend setting this value to true if you are
         using sortby with sort=DESC.
           */
          public java.lang.Boolean getTsAscending() {
            return tsAscending;
          }

          /**
           * Lists timestamps in ascending order if set to true. Recommend setting this value to
           * true if you are using sortby with sort=DESC.
           */
          public Get setTsAscending(java.lang.Boolean tsAscending) {
            this.tsAscending = tsAscending;
            return this;
          }

          /** This parameters contains the timezone offset value */
          @com.google.api.client.util.Key
          private java.lang.String tzo;

          /** This parameters contains the timezone offset value
           */
          public java.lang.String getTzo() {
            return tzo;
          }

          /** This parameters contains the timezone offset value */
          public Get setTzo(java.lang.String tzo) {
            this.tzo = tzo;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Targetservers collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Targetservers.List request = apigee.targetservers().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Targetservers targetservers() {
        return new Targetservers();
      }

      /**
       * The "targetservers" collection of methods.
       */
      public class Targetservers {

        /**
         * Creates a TargetServer in the specified environment.
         *
         * Create a request for the method "targetservers.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name under which the TargetServer will
        be created. Must be of the
         *        form `organizations/{org}/environments/{env}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+parent}/targetservers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Creates a TargetServer in the specified environment.
           *
           * Create a request for the method "targetservers.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name under which the TargetServer will
        be created. Must be of the
         *        form `organizations/{org}/environments/{env}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name under which the TargetServer will be created.
           * Must be of the form `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name under which the TargetServer will be created. Must be of the
         form `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name under which the TargetServer will be created.
           * Must be of the form `organizations/{org}/environments/{env}`.
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /**
           * Optional. The ID to give the TargetServer. This will overwrite the value in
           * TargetServer.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Optional. The ID to give the TargetServer. This will overwrite the value in TargetServer.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Optional. The ID to give the TargetServer. This will overwrite the value in
           * TargetServer.
           */
          public Create setName(java.lang.String name) {
            this.name = name;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a TargetServer from an environment. Returns the deleted TargetServer resource.
         *
         * Create a request for the method "targetservers.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TargetServer to delete. Must be
        of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");

          /**
           * Deletes a TargetServer from an environment. Returns the deleted TargetServer resource.
           *
           * Create a request for the method "targetservers.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TargetServer to delete. Must be
        of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TargetServer to delete. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TargetServer to delete. Must be of the form
         `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TargetServer to delete. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a TargetServer resource.
         *
         * Create a request for the method "targetservers.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TargetServer to get. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");

          /**
           * Gets a TargetServer resource.
           *
           * Create a request for the method "targetservers.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TargetServer to get. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TargetServer to get. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TargetServer to get. Must be of the form
         `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TargetServer to get. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all TargetServers in an environment as a JSON array.
         *
         * Create a request for the method "targetservers.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The parent environment name. Must be of the form
        `organizations/{org}/environments/{env}`.
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Targetservers.List.> {

          private static final String REST_PATH = "v1/{+parent}/targetservers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+$");

          /**
           * Lists all TargetServers in an environment as a JSON array.
           *
           * Create a request for the method "targetservers.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The parent environment name. Must be of the form
        `organizations/{org}/environments/{env}`.
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Environments.Targetservers.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The parent environment name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The parent environment name. Must be of the form
         `organizations/{org}/environments/{env}`.
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The parent environment name. Must be of the form
           * `organizations/{org}/environments/{env}`.
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace the
         * entirety of the existing TargetServer with the resource in the request body.
         *
         * Create a request for the method "targetservers.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the TargetServer to replace. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");

          /**
           * Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace
           * the entirety of the existing TargetServer with the resource in the request body.
           *
           * Create a request for the method "targetservers.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the TargetServer to replace. Must be of the form
         *        `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TargetServer.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the TargetServer to replace. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the TargetServer to replace. Must be of the form
         `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the TargetServer to replace. Must be of the form
           * `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Keyvaluemaps collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Keyvaluemaps.List request = apigee.keyvaluemaps().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Keyvaluemaps keyvaluemaps() {
      return new Keyvaluemaps();
    }

    /**
     * The "keyvaluemaps" collection of methods.
     */
    public class Keyvaluemaps {

      /**
       * Creates a key value map in an organization.
       *
       * Create a request for the method "keyvaluemaps.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the organization in which to create the key value map
      file. Must be of the
       *        form `organizations/{organization}`.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

        private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a key value map in an organization.
         *
         * Create a request for the method "keyvaluemaps.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the organization in which to create the key value map
      file. Must be of the
       *        form `organizations/{organization}`.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the organization in which to create the key value map file. Must be
         * of the form `organizations/{organization}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the organization in which to create the key value map file. Must be of the
       form `organizations/{organization}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the organization in which to create the key value map file. Must be
         * of the form `organizations/{organization}`.
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Delete a key value map in an organization.
       *
       * Create a request for the method "keyvaluemaps.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the key value map.
      Must be of the form
       *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/keyvaluemaps/[^/]+$");

        /**
         * Delete a key value map in an organization.
         *
         * Create a request for the method "keyvaluemaps.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the key value map.
      Must be of the form
       *        `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeyValueMap.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/keyvaluemaps/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the key value map. Must be of the form
         * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the key value map. Must be of the form
       `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the key value map. Must be of the form
         * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/keyvaluemaps/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * List key value maps in an organization.
       *
       * Create a request for the method "keyvaluemaps.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the organization in which to list key value maps.
      Must be of the form
       *        `organizations/{organization}`.
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Keyvaluemaps.List.> {

        private static final String REST_PATH = "v1/{+parent}/keyvaluemaps";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * List key value maps in an organization.
         *
         * Create a request for the method "keyvaluemaps.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the organization in which to list key value maps.
      Must be of the form
       *        `organizations/{organization}`.
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Keyvaluemaps.List..class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the organization in which to list key value maps. Must be of the
         * form `organizations/{organization}`.
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the organization in which to list key value maps. Must be of the form
       `organizations/{organization}`.
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the organization in which to list key value maps. Must be of the
         * form `organizations/{organization}`.
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Operations collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Operations.List request = apigee.operations().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Operations operations() {
      return new Operations();
    }

    /**
     * The "operations" collection of methods.
     */
    public class Operations {

      /**
       * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort to
       * cancel the operation, but success is not guaranteed.  If the server doesn't support this method,
       * it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or other
       * methods to check whether the cancellation succeeded or whether the operation completed despite
       * cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an
       * operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to
       * `Code.CANCELLED`.
       *
       * Create a request for the method "operations.cancel".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Cancel#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be cancelled.
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleLongrunningCancelOperationRequest}
       * @return the request
       */
      public Cancel cancel(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleLongrunningCancelOperationRequest content) throws java.io.IOException {
        Cancel result = new Cancel(name, content);
        initialize(result);
        return result;
      }

      public class Cancel extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}:cancel";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Starts asynchronous cancellation on a long-running operation.  The server makes a best effort
         * to cancel the operation, but success is not guaranteed.  If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.  Clients can use Operations.GetOperation or
         * other methods to check whether the cancellation succeeded or whether the operation completed
         * despite cancellation. On successful cancellation, the operation is not deleted; instead, it
         * becomes an operation with an Operation.error value with a google.rpc.Status.code of 1,
         * corresponding to `Code.CANCELLED`.
         *
         * Create a request for the method "operations.cancel".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Cancel#execute()} method to invoke the remote operation. <p> {@link
         * Cancel#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be cancelled.
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleLongrunningCancelOperationRequest}
         * @since 1.13
         */
        protected Cancel(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleLongrunningCancelOperationRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Cancel set$Xgafv(java.lang.String $Xgafv) {
          return (Cancel) super.set$Xgafv($Xgafv);
        }

        @Override
        public Cancel setAccessToken(java.lang.String accessToken) {
          return (Cancel) super.setAccessToken(accessToken);
        }

        @Override
        public Cancel setAlt(java.lang.String alt) {
          return (Cancel) super.setAlt(alt);
        }

        @Override
        public Cancel setCallback(java.lang.String callback) {
          return (Cancel) super.setCallback(callback);
        }

        @Override
        public Cancel setFields(java.lang.String fields) {
          return (Cancel) super.setFields(fields);
        }

        @Override
        public Cancel setKey(java.lang.String key) {
          return (Cancel) super.setKey(key);
        }

        @Override
        public Cancel setOauthToken(java.lang.String oauthToken) {
          return (Cancel) super.setOauthToken(oauthToken);
        }

        @Override
        public Cancel setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Cancel) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Cancel setQuotaUser(java.lang.String quotaUser) {
          return (Cancel) super.setQuotaUser(quotaUser);
        }

        @Override
        public Cancel setUploadType(java.lang.String uploadType) {
          return (Cancel) super.setUploadType(uploadType);
        }

        @Override
        public Cancel setUploadProtocol(java.lang.String uploadProtocol) {
          return (Cancel) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be cancelled. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be cancelled.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be cancelled. */
        public Cancel setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Cancel set(String parameterName, Object value) {
          return (Cancel) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a long-running operation. This method indicates that the client is no longer interested
       * in the operation result. It does not cancel the operation. If the server doesn't support this
       * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
       *
       * Create a request for the method "operations.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource to be deleted.
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleProtobufEmpty> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Deletes a long-running operation. This method indicates that the client is no longer interested
         * in the operation result. It does not cancel the operation. If the server doesn't support this
         * method, it returns `google.rpc.Code.UNIMPLEMENTED`.
         *
         * Create a request for the method "operations.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource to be deleted.
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleProtobufEmpty.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource to be deleted. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource to be deleted.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource to be deleted. */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets the latest state of a long-running operation.  Clients can use this method to poll the
       * operation result at intervals as recommended by the API service.
       *
       * Create a request for the method "operations.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation resource.
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningOperation> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/operations/[^/]+$");

        /**
         * Gets the latest state of a long-running operation.  Clients can use this method to poll the
         * operation result at intervals as recommended by the API service.
         *
         * Create a request for the method "operations.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation resource.
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningOperation.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation resource. */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/operations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists operations that match the specified filter in the request. If the server doesn't support
       * this method, it returns `UNIMPLEMENTED`.
       *
       * NOTE: the `name` binding allows API services to override the binding to use different resource
       * name schemes, such as `users/operations`. To override the binding, API services can add a binding
       * such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
       * compatibility, the default name includes the operations collection id, however overriding users
       * must ensure the name binding is the parent resource, without the operations collection id.
       *
       * Create a request for the method "operations.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param name The name of the operation's parent resource.
       * @return the request
       */
      public List list(java.lang.String name) throws java.io.IOException {
        List result = new List(name);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleLongrunningListOperationsResponse> {

        private static final String REST_PATH = "v1/{+name}/operations";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists operations that match the specified filter in the request. If the server doesn't support
         * this method, it returns `UNIMPLEMENTED`.
         *
         * NOTE: the `name` binding allows API services to override the binding to use different resource
         * name schemes, such as `users/operations`. To override the binding, API services can add a
         * binding such as `"/v1/{name=users}/operations"` to their service configuration. For backwards
         * compatibility, the default name includes the operations collection id, however overriding users
         * must ensure the name binding is the parent resource, without the operations collection id.
         *
         * Create a request for the method "operations.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name The name of the operation's parent resource.
         * @since 1.13
         */
        protected List(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleLongrunningListOperationsResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /** The name of the operation's parent resource. */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** The name of the operation's parent resource.
         */
        public java.lang.String getName() {
          return name;
        }

        /** The name of the operation's parent resource. */
        public List setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.name = name;
          return this;
        }

        /** The standard list filter. */
        @com.google.api.client.util.Key
        private java.lang.String filter;

        /** The standard list filter.
         */
        public java.lang.String getFilter() {
          return filter;
        }

        /** The standard list filter. */
        public List setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        /** The standard list page size. */
        @com.google.api.client.util.Key
        private java.lang.Integer pageSize;

        /** The standard list page size.
         */
        public java.lang.Integer getPageSize() {
          return pageSize;
        }

        /** The standard list page size. */
        public List setPageSize(java.lang.Integer pageSize) {
          this.pageSize = pageSize;
          return this;
        }

        /** The standard list page token. */
        @com.google.api.client.util.Key
        private java.lang.String pageToken;

        /** The standard list page token.
         */
        public java.lang.String getPageToken() {
          return pageToken;
        }

        /** The standard list page token. */
        public List setPageToken(java.lang.String pageToken) {
          this.pageToken = pageToken;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Portals collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Portals.List request = apigee.portals().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Portals portals() {
      return new Portals();
    }

    /**
     * The "portals" collection of methods.
     */
    public class Portals {

      /**
       * Gets a health check from the server.
       *
       * Create a request for the method "portals.getStatus".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetStatus#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in
      your request:
       *        `organizations/{org}`
       * @return the request
       */
      public GetStatus getStatus(java.lang.String parent) throws java.io.IOException {
        GetStatus result = new GetStatus(parent);
        initialize(result);
        return result;
      }

      public class GetStatus extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ServerStatus> {

        private static final String REST_PATH = "v1/{+parent}/portals/status";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Gets a health check from the server.
         *
         * Create a request for the method "portals.getStatus".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetStatus#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetStatus#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in
      your request:
       *        `organizations/{org}`
         * @since 1.13
         */
        protected GetStatus(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ServerStatus.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetStatus set$Xgafv(java.lang.String $Xgafv) {
          return (GetStatus) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetStatus setAccessToken(java.lang.String accessToken) {
          return (GetStatus) super.setAccessToken(accessToken);
        }

        @Override
        public GetStatus setAlt(java.lang.String alt) {
          return (GetStatus) super.setAlt(alt);
        }

        @Override
        public GetStatus setCallback(java.lang.String callback) {
          return (GetStatus) super.setCallback(callback);
        }

        @Override
        public GetStatus setFields(java.lang.String fields) {
          return (GetStatus) super.setFields(fields);
        }

        @Override
        public GetStatus setKey(java.lang.String key) {
          return (GetStatus) super.setKey(key);
        }

        @Override
        public GetStatus setOauthToken(java.lang.String oauthToken) {
          return (GetStatus) super.setOauthToken(oauthToken);
        }

        @Override
        public GetStatus setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetStatus) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetStatus setQuotaUser(java.lang.String quotaUser) {
          return (GetStatus) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetStatus setUploadType(java.lang.String uploadType) {
          return (GetStatus) super.setUploadType(uploadType);
        }

        @Override
        public GetStatus setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetStatus) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public GetStatus setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetStatus set(String parameterName, Object value) {
          return (GetStatus) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Providers collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Providers.List request = apigee.providers().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Providers providers() {
      return new Providers();
    }

    /**
     * The "providers" collection of methods.
     */
    public class Providers {

      /**
       * Clears the scope of an identity provider. Not a recognized rest pattern
       *
       * Create a request for the method "providers.clearScope".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link ClearScope#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the identity provider. Use the following structure in your request:
       *        `organizations/{org}/providers/{provider}`
       * @return the request
       */
      public ClearScope clearScope(java.lang.String name) throws java.io.IOException {
        ClearScope result = new ClearScope(name);
        initialize(result);
        return result;
      }

      public class ClearScope extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/providers/[^/]+$");

        /**
         * Clears the scope of an identity provider. Not a recognized rest pattern
         *
         * Create a request for the method "providers.clearScope".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link ClearScope#execute()} method to invoke the remote operation. <p>
         * {@link
         * ClearScope#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the identity provider. Use the following structure in your request:
       *        `organizations/{org}/providers/{provider}`
         * @since 1.13
         */
        protected ClearScope(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/providers/[^/]+$");
          }
        }

        @Override
        public ClearScope set$Xgafv(java.lang.String $Xgafv) {
          return (ClearScope) super.set$Xgafv($Xgafv);
        }

        @Override
        public ClearScope setAccessToken(java.lang.String accessToken) {
          return (ClearScope) super.setAccessToken(accessToken);
        }

        @Override
        public ClearScope setAlt(java.lang.String alt) {
          return (ClearScope) super.setAlt(alt);
        }

        @Override
        public ClearScope setCallback(java.lang.String callback) {
          return (ClearScope) super.setCallback(callback);
        }

        @Override
        public ClearScope setFields(java.lang.String fields) {
          return (ClearScope) super.setFields(fields);
        }

        @Override
        public ClearScope setKey(java.lang.String key) {
          return (ClearScope) super.setKey(key);
        }

        @Override
        public ClearScope setOauthToken(java.lang.String oauthToken) {
          return (ClearScope) super.setOauthToken(oauthToken);
        }

        @Override
        public ClearScope setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (ClearScope) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public ClearScope setQuotaUser(java.lang.String quotaUser) {
          return (ClearScope) super.setQuotaUser(quotaUser);
        }

        @Override
        public ClearScope setUploadType(java.lang.String uploadType) {
          return (ClearScope) super.setUploadType(uploadType);
        }

        @Override
        public ClearScope setUploadProtocol(java.lang.String uploadProtocol) {
          return (ClearScope) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the identity provider. Use the following structure in your request:
         * `organizations/{org}/providers/{provider}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the identity provider. Use the following structure in your request:
       `organizations/{org}/providers/{provider}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the identity provider. Use the following structure in your request:
         * `organizations/{org}/providers/{provider}`
         */
        public ClearScope setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/providers/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public ClearScope set(String parameterName, Object value) {
          return (ClearScope) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Resources collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Resources.List request = apigee.resources().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Resources resources() {
        return new Resources();
      }

      /**
       * The "resources" collection of methods.
       */
      public class Resources {

        /**
         * Creates a resource ID for the resource path. Not a recognized rest pattern
         *
         * Create a request for the method "resources.createResource".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link CreateResource#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/resources/{resource}`
         * @return the request
         */
        public CreateResource createResource(java.lang.String name) throws java.io.IOException {
          CreateResource result = new CreateResource(name);
          initialize(result);
          return result;
        }

        public class CreateResource extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/providers/[^/]+/resources/[^/]+$");

          /**
           * Creates a resource ID for the resource path. Not a recognized rest pattern
           *
           * Create a request for the method "resources.createResource".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link CreateResource#execute()} method to invoke the remote operation.
           * <p> {@link CreateResource#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
           * ientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param name Required. Name of the resource. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/resources/{resource}`
           * @since 1.13
           */
          protected CreateResource(java.lang.String name) {
            super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/resources/[^/]+$");
            }
          }

          @Override
          public CreateResource set$Xgafv(java.lang.String $Xgafv) {
            return (CreateResource) super.set$Xgafv($Xgafv);
          }

          @Override
          public CreateResource setAccessToken(java.lang.String accessToken) {
            return (CreateResource) super.setAccessToken(accessToken);
          }

          @Override
          public CreateResource setAlt(java.lang.String alt) {
            return (CreateResource) super.setAlt(alt);
          }

          @Override
          public CreateResource setCallback(java.lang.String callback) {
            return (CreateResource) super.setCallback(callback);
          }

          @Override
          public CreateResource setFields(java.lang.String fields) {
            return (CreateResource) super.setFields(fields);
          }

          @Override
          public CreateResource setKey(java.lang.String key) {
            return (CreateResource) super.setKey(key);
          }

          @Override
          public CreateResource setOauthToken(java.lang.String oauthToken) {
            return (CreateResource) super.setOauthToken(oauthToken);
          }

          @Override
          public CreateResource setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (CreateResource) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public CreateResource setQuotaUser(java.lang.String quotaUser) {
            return (CreateResource) super.setQuotaUser(quotaUser);
          }

          @Override
          public CreateResource setUploadType(java.lang.String uploadType) {
            return (CreateResource) super.setUploadType(uploadType);
          }

          @Override
          public CreateResource setUploadProtocol(java.lang.String uploadProtocol) {
            return (CreateResource) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the resource. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/resources/{resource}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource. Use the following structure in your request:
         `organizations/{org}/providers/{provider}/resources/{resource}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the resource. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/resources/{resource}`
           */
          public CreateResource setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/resources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public CreateResource set(String parameterName, Object value) {
            return (CreateResource) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a resource.
         *
         * Create a request for the method "resources.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/resources/{resource}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/providers/[^/]+/resources/[^/]+$");

          /**
           * Deletes a resource.
           *
           * Create a request for the method "resources.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/resources/{resource}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/resources/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the resource. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/resources/{resource}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource. Use the following structure in your request:
         `organizations/{org}/providers/{provider}/resources/{resource}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the resource. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/resources/{resource}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/resources/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Users collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Users.List request = apigee.users().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Users users() {
        return new Users();
      }

      /**
       * The "users" collection of methods.
       */
      public class Users {

        /**
         * Deletes a user.
         *
         * Create a request for the method "users.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the user. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/users/{user}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/providers/[^/]+/users/[^/]+$");

          /**
           * Deletes a user.
           *
           * Create a request for the method "users.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the user. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/users/{user}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/users/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the user. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/users/{user}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the user. Use the following structure in your request:
         `organizations/{org}/providers/{provider}/users/{user}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the user. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/users/{user}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/users/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Retrieves a user.
         *
         * Create a request for the method "users.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the user. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/users/{user}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUserResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/providers/[^/]+/users/[^/]+$");

          /**
           * Retrieves a user.
           *
           * Create a request for the method "users.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the user. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/users/{user}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUserResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/users/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the user. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/users/{user}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the user. Use the following structure in your request:
         `organizations/{org}/providers/{provider}/users/{user}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the user. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/users/{user}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/users/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all users.
         *
         * Create a request for the method "users.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the identity provider. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUserListResponse> {

          private static final String REST_PATH = "v1/{+parent}/users";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/providers/[^/]+$");

          /**
           * Lists all users.
           *
           * Create a request for the method "users.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the identity provider. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUserListResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the identity provider. Use the following structure in your request:
         `organizations/{org}/providers/{provider}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          /** Number of items. */
          @com.google.api.client.util.Key
          private java.lang.String count;

          /** Number of items.
           */
          public java.lang.String getCount() {
            return count;
          }

          /** Number of items. */
          public List setCount(java.lang.String count) {
            this.count = count;
            return this;
          }

          /** String used to filter the list. */
          @com.google.api.client.util.Key
          private java.lang.String filter;

          /** String used to filter the list.
           */
          public java.lang.String getFilter() {
            return filter;
          }

          /** String used to filter the list. */
          public List setFilter(java.lang.String filter) {
            this.filter = filter;
            return this;
          }

          /** Field on which to sort the list. */
          @com.google.api.client.util.Key
          private java.lang.String sortBy;

          /** Field on which to sort the list.
           */
          public java.lang.String getSortBy() {
            return sortBy;
          }

          /** Field on which to sort the list. */
          public List setSortBy(java.lang.String sortBy) {
            this.sortBy = sortBy;
            return this;
          }

          /** Order in which to sort the list, such as ascending or descending. */
          @com.google.api.client.util.Key
          private java.lang.String sortOrder;

          /** Order in which to sort the list, such as ascending or descending.
           */
          public java.lang.String getSortOrder() {
            return sortOrder;
          }

          /** Order in which to sort the list, such as ascending or descending. */
          public List setSortOrder(java.lang.String sortOrder) {
            this.sortOrder = sortOrder;
            return this;
          }

          /** Starting index of the list. */
          @com.google.api.client.util.Key
          private java.lang.String startIndex;

          /** Starting index of the list.
           */
          public java.lang.String getStartIndex() {
            return startIndex;
          }

          /** Starting index of the list. */
          public List setStartIndex(java.lang.String startIndex) {
            this.startIndex = startIndex;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a user.
         *
         * Create a request for the method "users.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the user. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/users/{user}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUser}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUser content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUserResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/providers/[^/]+/users/[^/]+$");

          /**
           * Updates a user.
           *
           * Create a request for the method "users.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the user. Use the following structure in your request:
         *        `organizations/{org}/providers/{provider}/users/{user}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUser}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUser content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ConsumerUserResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/users/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the user. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/users/{user}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the user. Use the following structure in your request:
         `organizations/{org}/providers/{provider}/users/{user}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the user. Use the following structure in your request:
           * `organizations/{org}/providers/{provider}/users/{user}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/providers/[^/]+/users/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Reports collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Reports.List request = apigee.reports().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Reports reports() {
      return new Reports();
    }

    /**
     * The "reports" collection of methods.
     */
    public class Reports {

      /**
       * Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create
       * custom dashboards in addition to the standard dashboards which are provided. The Custom Report in
       * its simplest form contains specifications about metrics, dimensions and filters. It is important
       * to note that the custom report by itself does not provide an executable entity. The Edge UI
       * converts the custom report definition into an analytics query and displays the result in a chart.
       *
       * Create a request for the method "reports.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the Custom Report will
      be created. Must be of the
       *        form:
        `organizations/{organization_id}/reports`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport> {

        private static final String REST_PATH = "v1/{+parent}/reports";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to
         * create custom dashboards in addition to the standard dashboards which are provided. The Custom
         * Report in its simplest form contains specifications about metrics, dimensions and filters. It
         * is important to note that the custom report by itself does not provide an executable entity.
         * The Edge UI converts the custom report definition into an analytics query and displays the
         * result in a chart.
         *
         * Create a request for the method "reports.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the Custom Report will
      be created. Must be of the
       *        form:
        `organizations/{organization_id}/reports`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the Custom Report will be created.
         * Must be of the form: `organizations/{organization_id}/reports`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the Custom Report will be created. Must be of
       the form: `organizations/{organization_id}/reports`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the Custom Report will be created.
         * Must be of the form: `organizations/{organization_id}/reports`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes an existing custom report definition
       *
       * Create a request for the method "reports.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteCustomReportResponse> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/reports/[^/]+$");

        /**
         * Deletes an existing custom report definition
         *
         * Create a request for the method "reports.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DeleteCustomReportResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Retrieve a custom report definition.
       *
       * Create a request for the method "reports.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/reports/[^/]+$");

        /**
         * Retrieve a custom report definition.
         *
         * Create a request for the method "reports.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Return a list of Custom Reports
       *
       * Create a request for the method "reports.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The parent organization name under which the API product will
      be listed
       *        `organizations/{organization_id}/reports`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCustomReportsResponse> {

        private static final String REST_PATH = "v1/{+parent}/reports";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Return a list of Custom Reports
         *
         * Create a request for the method "reports.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The parent organization name under which the API product will
      be listed
       *        `organizations/{organization_id}/reports`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListCustomReportsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The parent organization name under which the API product will be listed
         * `organizations/{organization_id}/reports`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The parent organization name under which the API product will be listed
       `organizations/{organization_id}/reports`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The parent organization name under which the API product will be listed
         * `organizations/{organization_id}/reports`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Set to 'true' to get expanded details about each custom report. */
        @com.google.api.client.util.Key
        private java.lang.Boolean expand;

        /** Set to 'true' to get expanded details about each custom report.
         */
        public java.lang.Boolean getExpand() {
          return expand;
        }

        /** Set to 'true' to get expanded details about each custom report. */
        public List setExpand(java.lang.Boolean expand) {
          this.expand = expand;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * Update an existing custom report definition
       *
       * Create a request for the method "reports.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/reports/[^/]+$");

        /**
         * Update an existing custom report definition
         *
         * Create a request for the method "reports.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Custom Report name of the form:
        `organizations/{organization_id}/reports/{report_name}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomReport.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Custom Report name of the form:
         * `organizations/{organization_id}/reports/{report_name}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/reports/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Sharedflows collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Sharedflows.List request = apigee.sharedflows().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Sharedflows sharedflows() {
      return new Sharedflows();
    }

    /**
     * The "sharedflows" collection of methods.
     */
    public class Sharedflows {

      /**
       * Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow
       * already exists, this creates a new revision of it. If the shared flow does not exist, this
       * creates it.
       *
       * Once imported, the shared flow revision must be deployed before it can be accessed at runtime.
       *
       * The size limit of a shared flow bundle is 15 MB.
       *
       * Create a request for the method "sharedflows.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the parent organization under which to create the
      shared flow. Must be of the
       *        form:
        `organizations/{organization_id}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision> {

        private static final String REST_PATH = "v1/{+parent}/sharedflows";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow
         * already exists, this creates a new revision of it. If the shared flow does not exist, this
         * creates it.
         *
         * Once imported, the shared flow revision must be deployed before it can be accessed at runtime.
         *
         * The size limit of a shared flow bundle is 15 MB.
         *
         * Create a request for the method "sharedflows.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the parent organization under which to create the
      shared flow. Must be of the
       *        form:
        `organizations/{organization_id}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the parent organization under which to create the shared flow. Must
         * be of the form: `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the parent organization under which to create the shared flow. Must be of the
       form: `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the parent organization under which to create the shared flow. Must
         * be of the form: `organizations/{organization_id}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Required. Must be set to either `import` or `validate`. */
        @com.google.api.client.util.Key
        private java.lang.String action;

        /** Required. Must be set to either `import` or `validate`.
         */
        public java.lang.String getAction() {
          return action;
        }

        /** Required. Must be set to either `import` or `validate`. */
        public Create setAction(java.lang.String action) {
          this.action = action;
          return this;
        }

        /** Required. The name to give the shared flow */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name to give the shared flow
         */
        public java.lang.String getName() {
          return name;
        }

        /** Required. The name to give the shared flow */
        public Create setName(java.lang.String name) {
          this.name = name;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can
       * delete it.
       *
       * Create a request for the method "sharedflows.delete".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       *
       * @param name Required. shared flow name of the form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
       * @return the request
       */
      public Delete delete(java.lang.String name) throws java.io.IOException {
        Delete result = new Delete(name);
        initialize(result);
        return result;
      }

      public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

        /**
         * Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can
         * delete it.
         *
         * Create a request for the method "sharedflows.delete".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
         * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. shared flow name of the form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         * @since 1.13
         */
        protected Delete(java.lang.String name) {
          super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
        }

        @Override
        public Delete set$Xgafv(java.lang.String $Xgafv) {
          return (Delete) super.set$Xgafv($Xgafv);
        }

        @Override
        public Delete setAccessToken(java.lang.String accessToken) {
          return (Delete) super.setAccessToken(accessToken);
        }

        @Override
        public Delete setAlt(java.lang.String alt) {
          return (Delete) super.setAlt(alt);
        }

        @Override
        public Delete setCallback(java.lang.String callback) {
          return (Delete) super.setCallback(callback);
        }

        @Override
        public Delete setFields(java.lang.String fields) {
          return (Delete) super.setFields(fields);
        }

        @Override
        public Delete setKey(java.lang.String key) {
          return (Delete) super.setKey(key);
        }

        @Override
        public Delete setOauthToken(java.lang.String oauthToken) {
          return (Delete) super.setOauthToken(oauthToken);
        }

        @Override
        public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Delete) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Delete setQuotaUser(java.lang.String quotaUser) {
          return (Delete) super.setQuotaUser(quotaUser);
        }

        @Override
        public Delete setUploadType(java.lang.String uploadType) {
          return (Delete) super.setUploadType(uploadType);
        }

        @Override
        public Delete setUploadProtocol(java.lang.String uploadProtocol) {
          return (Delete) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. shared flow name of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. shared flow name of the form:
       `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. shared flow name of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public Delete setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Delete set(String parameterName, Object value) {
          return (Delete) super.set(parameterName, value);
        }
      }
      /**
       * Gets a shared flow by name, including a list of its revisions.
       *
       * Create a request for the method "sharedflows.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. The name of the shared flow to get. Must be of the
      form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

        /**
         * Gets a shared flow by name, including a list of its revisions.
         *
         * Create a request for the method "sharedflows.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. The name of the shared flow to get. Must be of the
      form:
       *        `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlow.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the shared flow to get. Must be of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. The name of the shared flow to get. Must be of the form:
       `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. The name of the shared flow to get. Must be of the form:
         * `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/sharedflows/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists all shared flows in the organization.
       *
       * Create a request for the method "sharedflows.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. The name of the parent organization under which to get shared
      flows. Must be of the form:
       *        `organizations/{organization_id}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSharedFlowsResponse> {

        private static final String REST_PATH = "v1/{+parent}/sharedflows";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all shared flows in the organization.
         *
         * Create a request for the method "sharedflows.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. The name of the parent organization under which to get shared
      flows. Must be of the form:
       *        `organizations/{organization_id}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListSharedFlowsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. The name of the parent organization under which to get shared flows. Must be of
         * the form: `organizations/{organization_id}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. The name of the parent organization under which to get shared flows. Must be of the form:
       `organizations/{organization_id}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. The name of the parent organization under which to get shared flows. Must be of
         * the form: `organizations/{organization_id}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        /** Indicates whether to include shared flow metadata in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeMetaData;

        /** Indicates whether to include shared flow metadata in the response.
         */
        public java.lang.Boolean getIncludeMetaData() {
          return includeMetaData;
        }

        /** Indicates whether to include shared flow metadata in the response. */
        public List setIncludeMetaData(java.lang.Boolean includeMetaData) {
          this.includeMetaData = includeMetaData;
          return this;
        }

        /** Indicates whether to include a list of revisions in the response. */
        @com.google.api.client.util.Key
        private java.lang.Boolean includeRevisions;

        /** Indicates whether to include a list of revisions in the response.
         */
        public java.lang.Boolean getIncludeRevisions() {
          return includeRevisions;
        }

        /** Indicates whether to include a list of revisions in the response. */
        public List setIncludeRevisions(java.lang.Boolean includeRevisions) {
          this.includeRevisions = includeRevisions;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Deployments collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Deployments deployments() {
        return new Deployments();
      }

      /**
       * The "deployments" collection of methods.
       */
      public class Deployments {

        /**
         * Lists all deployments of a shared flow.
         *
         * Create a request for the method "deployments.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the shared flow for which to return deployment information in the
        following
         *        format:
          `organizations/{org}/sharedflows/{sharedflow}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

          private static final String REST_PATH = "v1/{+parent}/deployments";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

          /**
           * Lists all deployments of a shared flow.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the shared flow for which to return deployment information in the
        following
         *        format:
          `organizations/{org}/sharedflows/{sharedflow}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the shared flow for which to return deployment information in the
           * following format: `organizations/{org}/sharedflows/{sharedflow}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the shared flow for which to return deployment information in the following
         format: `organizations/{org}/sharedflows/{sharedflow}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the shared flow for which to return deployment information in the
           * following format: `organizations/{org}/sharedflows/{sharedflow}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Revisions collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Revisions.List request = apigee.revisions().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Revisions revisions() {
        return new Revisions();
      }

      /**
       * The "revisions" collection of methods.
       */
      public class Revisions {

        /**
         * Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy
         * the shared flow before deleting it.
         *
         * Create a request for the method "revisions.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the shared flow revision to delete. Must be of the
        form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

          /**
           * Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy
           * the shared flow before deleting it.
           *
           * Create a request for the method "revisions.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the shared flow revision to delete. Must be of the
        form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the shared flow revision to delete. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the shared flow revision to delete. Must be of the form:
         `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the shared flow revision to delete. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a revision of a shared flow.
         *
         * If `format=bundle` is passed, it instead outputs a shared flow revision as a ZIP-formatted bundle
         * of code and config files.
         *
         * Create a request for the method "revisions.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. The name of the shared flow revision to get. Must be of the
        form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleApiHttpBody> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

          /**
           * Gets a revision of a shared flow.
           *
           * If `format=bundle` is passed, it instead outputs a shared flow revision as a ZIP-formatted
           * bundle of code and config files.
           *
           * Create a request for the method "revisions.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. The name of the shared flow revision to get. Must be of the
        form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleApiHttpBody.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the shared flow revision to get. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the shared flow revision to get. Must be of the form:
         `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the shared flow revision to get. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the
           * bundle metadata is returned.
           */
          @com.google.api.client.util.Key
          private java.lang.String format;

          /** Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the bundle metadata
         is returned.
           */
          public java.lang.String getFormat() {
            return format;
          }

          /**
           * Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the
           * bundle metadata is returned.
           */
          public Get setFormat(java.lang.String format) {
            this.format = format;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists all revisions for a shared flow.
         *
         * Create a request for the method "revisions.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. The name of the parent API proxy under which to get API proxy
        revisions. Must be of the
         *        form:
          `organizations/{organization_id}/sharedflows/{shared_flow_id}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.Apigee.Organizations.Sharedflows.Revisions.List.> {

          private static final String REST_PATH = "v1/{+parent}/revisions";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+$");

          /**
           * Lists all revisions for a shared flow.
           *
           * Create a request for the method "revisions.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. The name of the parent API proxy under which to get API proxy
        revisions. Must be of the
         *        form:
          `organizations/{organization_id}/sharedflows/{shared_flow_id}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.Apigee.Organizations.Sharedflows.Revisions.List..class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the parent API proxy under which to get API proxy revisions. Must
           * be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. The name of the parent API proxy under which to get API proxy revisions. Must be of the
         form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. The name of the parent API proxy under which to get API proxy revisions. Must
           * be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates a shared flow revision. This operation is only allowed on revisions which have never been
         * deployed. After deployment a revision becomes immutable, even if it becomes undeployed.
         *
         * The payload is a ZIP-formatted shared flow.  Content type must be either multipart/form-data or
         * application/octet-stream.
         *
         * Create a request for the method "revisions.updateSharedFlowRevision".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateSharedFlowRevision#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. The name of the shared flow revision to update.
        Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public UpdateSharedFlowRevision updateSharedFlowRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          UpdateSharedFlowRevision result = new UpdateSharedFlowRevision(name, content);
          initialize(result);
          return result;
        }

        public class UpdateSharedFlowRevision extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

          /**
           * Updates a shared flow revision. This operation is only allowed on revisions which have never
           * been deployed. After deployment a revision becomes immutable, even if it becomes undeployed.
           *
           * The payload is a ZIP-formatted shared flow.  Content type must be either multipart/form-data or
           * application/octet-stream.
           *
           * Create a request for the method "revisions.updateSharedFlowRevision".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateSharedFlowRevision#execute()} method to invoke the remote
           * operation. <p> {@link UpdateSharedFlowRevision#initialize(com.google.api.client.googleapis.serv
           * ices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param name Required. The name of the shared flow revision to update.
        Must be of the form:
         *        `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected UpdateSharedFlowRevision(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SharedFlowRevision.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
          }

          @Override
          public UpdateSharedFlowRevision set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateSharedFlowRevision) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateSharedFlowRevision setAccessToken(java.lang.String accessToken) {
            return (UpdateSharedFlowRevision) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateSharedFlowRevision setAlt(java.lang.String alt) {
            return (UpdateSharedFlowRevision) super.setAlt(alt);
          }

          @Override
          public UpdateSharedFlowRevision setCallback(java.lang.String callback) {
            return (UpdateSharedFlowRevision) super.setCallback(callback);
          }

          @Override
          public UpdateSharedFlowRevision setFields(java.lang.String fields) {
            return (UpdateSharedFlowRevision) super.setFields(fields);
          }

          @Override
          public UpdateSharedFlowRevision setKey(java.lang.String key) {
            return (UpdateSharedFlowRevision) super.setKey(key);
          }

          @Override
          public UpdateSharedFlowRevision setOauthToken(java.lang.String oauthToken) {
            return (UpdateSharedFlowRevision) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateSharedFlowRevision setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateSharedFlowRevision) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateSharedFlowRevision setQuotaUser(java.lang.String quotaUser) {
            return (UpdateSharedFlowRevision) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateSharedFlowRevision setUploadType(java.lang.String uploadType) {
            return (UpdateSharedFlowRevision) super.setUploadType(uploadType);
          }

          @Override
          public UpdateSharedFlowRevision setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateSharedFlowRevision) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. The name of the shared flow revision to update. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. The name of the shared flow revision to update. Must be of the form:
         `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. The name of the shared flow revision to update. Must be of the form:
           * `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
           */
          public UpdateSharedFlowRevision setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
            }
            this.name = name;
            return this;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. It is kept
           * for compatibility with existing APIs. Must be `true` or `false` if provided.
           */
          @com.google.api.client.util.Key
          private java.lang.Boolean validate;

          /** Ignored. All uploads are validated regardless of the value of this field. It is kept for
         compatibility with existing APIs. Must be `true` or `false` if provided.
           */
          public java.lang.Boolean getValidate() {
            return validate;
          }

          /**
           * Ignored. All uploads are validated regardless of the value of this field. It is kept
           * for compatibility with existing APIs. Must be `true` or `false` if provided.
           */
          public UpdateSharedFlowRevision setValidate(java.lang.Boolean validate) {
            this.validate = validate;
            return this;
          }

          @Override
          public UpdateSharedFlowRevision set(String parameterName, Object value) {
            return (UpdateSharedFlowRevision) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Deployments collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Deployments.List request = apigee.deployments().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Deployments deployments() {
          return new Deployments();
        }

        /**
         * The "deployments" collection of methods.
         */
        public class Deployments {

          /**
           * Lists all deployments of a shared flow revision.
           *
           * Create a request for the method "deployments.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the API proxy revision for which to return deployment information
          in the following
           *        format:
            `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse> {

            private static final String REST_PATH = "v1/{+parent}/deployments";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");

            /**
             * Lists all deployments of a shared flow revision.
             *
             * Create a request for the method "deployments.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the API proxy revision for which to return deployment information
          in the following
           *        format:
            `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListDeploymentsResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format:
             * `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the API proxy revision for which to return deployment information in the
           following format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the API proxy revision for which to return deployment information
             * in the following format:
             * `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
    }
    /**
     * An accessor for creating requests from the Sites collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Sites.List request = apigee.sites().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Sites sites() {
      return new Sites();
    }

    /**
     * The "sites" collection of methods.
     */
    public class Sites {

      /**
       * Creates a new portal.
       *
       * Create a request for the method "sites.create".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Create#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in your
      request:
       *        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData}
       * @return the request
       */
      public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData content) throws java.io.IOException {
        Create result = new Create(parent, content);
        initialize(result);
        return result;
      }

      public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Site> {

        private static final String REST_PATH = "v1/{+parent}/sites";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Creates a new portal.
         *
         * Create a request for the method "sites.create".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
         * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your
      request:
       *        `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData}
         * @since 1.13
         */
        protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Site.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Create set$Xgafv(java.lang.String $Xgafv) {
          return (Create) super.set$Xgafv($Xgafv);
        }

        @Override
        public Create setAccessToken(java.lang.String accessToken) {
          return (Create) super.setAccessToken(accessToken);
        }

        @Override
        public Create setAlt(java.lang.String alt) {
          return (Create) super.setAlt(alt);
        }

        @Override
        public Create setCallback(java.lang.String callback) {
          return (Create) super.setCallback(callback);
        }

        @Override
        public Create setFields(java.lang.String fields) {
          return (Create) super.setFields(fields);
        }

        @Override
        public Create setKey(java.lang.String key) {
          return (Create) super.setKey(key);
        }

        @Override
        public Create setOauthToken(java.lang.String oauthToken) {
          return (Create) super.setOauthToken(oauthToken);
        }

        @Override
        public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Create) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Create setQuotaUser(java.lang.String quotaUser) {
          return (Create) super.setQuotaUser(quotaUser);
        }

        @Override
        public Create setUploadType(java.lang.String uploadType) {
          return (Create) super.setUploadType(uploadType);
        }

        @Override
        public Create setUploadProtocol(java.lang.String uploadProtocol) {
          return (Create) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public Create setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Create set(String parameterName, Object value) {
          return (Create) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the audience feature flag setting for a portal.
       *
       * Create a request for the method "sites.getAudiencesenabled".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetAudiencesenabled#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public GetAudiencesenabled getAudiencesenabled(java.lang.String parent) throws java.io.IOException {
        GetAudiencesenabled result = new GetAudiencesenabled(parent);
        initialize(result);
        return result;
      }

      public class GetAudiencesenabled extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ZoneAudienceEnabledResponse> {

        private static final String REST_PATH = "v1/{+parent}/audiencesenabled";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Retrieves the audience feature flag setting for a portal.
         *
         * Create a request for the method "sites.getAudiencesenabled".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetAudiencesenabled#execute()} method to invoke the remote
         * operation. <p> {@link GetAudiencesenabled#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected GetAudiencesenabled(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ZoneAudienceEnabledResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetAudiencesenabled set$Xgafv(java.lang.String $Xgafv) {
          return (GetAudiencesenabled) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetAudiencesenabled setAccessToken(java.lang.String accessToken) {
          return (GetAudiencesenabled) super.setAccessToken(accessToken);
        }

        @Override
        public GetAudiencesenabled setAlt(java.lang.String alt) {
          return (GetAudiencesenabled) super.setAlt(alt);
        }

        @Override
        public GetAudiencesenabled setCallback(java.lang.String callback) {
          return (GetAudiencesenabled) super.setCallback(callback);
        }

        @Override
        public GetAudiencesenabled setFields(java.lang.String fields) {
          return (GetAudiencesenabled) super.setFields(fields);
        }

        @Override
        public GetAudiencesenabled setKey(java.lang.String key) {
          return (GetAudiencesenabled) super.setKey(key);
        }

        @Override
        public GetAudiencesenabled setOauthToken(java.lang.String oauthToken) {
          return (GetAudiencesenabled) super.setOauthToken(oauthToken);
        }

        @Override
        public GetAudiencesenabled setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetAudiencesenabled) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetAudiencesenabled setQuotaUser(java.lang.String quotaUser) {
          return (GetAudiencesenabled) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetAudiencesenabled setUploadType(java.lang.String uploadType) {
          return (GetAudiencesenabled) super.setUploadType(uploadType);
        }

        @Override
        public GetAudiencesenabled setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetAudiencesenabled) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public GetAudiencesenabled setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetAudiencesenabled set(String parameterName, Object value) {
          return (GetAudiencesenabled) super.set(parameterName, value);
        }
      }
      /**
       * Gets the portal configuration.
       *
       * Create a request for the method "sites.getConfig".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetConfig#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in
      your request:
       *        `organizations/{org}`
       * @return the request
       */
      public GetConfig getConfig(java.lang.String parent) throws java.io.IOException {
        GetConfig result = new GetConfig(parent);
        initialize(result);
        return result;
      }

      public class GetConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalConfigResponse> {

        private static final String REST_PATH = "v1/{+parent}/sites/config";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Gets the portal configuration.
         *
         * Create a request for the method "sites.getConfig".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetConfig#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in
      your request:
       *        `organizations/{org}`
         * @since 1.13
         */
        protected GetConfig(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PortalConfigResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetConfig set$Xgafv(java.lang.String $Xgafv) {
          return (GetConfig) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetConfig setAccessToken(java.lang.String accessToken) {
          return (GetConfig) super.setAccessToken(accessToken);
        }

        @Override
        public GetConfig setAlt(java.lang.String alt) {
          return (GetConfig) super.setAlt(alt);
        }

        @Override
        public GetConfig setCallback(java.lang.String callback) {
          return (GetConfig) super.setCallback(callback);
        }

        @Override
        public GetConfig setFields(java.lang.String fields) {
          return (GetConfig) super.setFields(fields);
        }

        @Override
        public GetConfig setKey(java.lang.String key) {
          return (GetConfig) super.setKey(key);
        }

        @Override
        public GetConfig setOauthToken(java.lang.String oauthToken) {
          return (GetConfig) super.setOauthToken(oauthToken);
        }

        @Override
        public GetConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetConfig) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetConfig setQuotaUser(java.lang.String quotaUser) {
          return (GetConfig) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetConfig setUploadType(java.lang.String uploadType) {
          return (GetConfig) super.setUploadType(uploadType);
        }

        @Override
        public GetConfig setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetConfig) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public GetConfig setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetConfig set(String parameterName, Object value) {
          return (GetConfig) super.set(parameterName, value);
        }
      }
      /**
       * Gets the custom CSS for a portal.
       *
       * Create a request for the method "sites.getCustomcss".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetCustomcss#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public GetCustomcss getCustomcss(java.lang.String parent) throws java.io.IOException {
        GetCustomcss result = new GetCustomcss(parent);
        initialize(result);
        return result;
      }

      public class GetCustomcss extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomCss> {

        private static final String REST_PATH = "v1/{+parent}/customcss";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Gets the custom CSS for a portal.
         *
         * Create a request for the method "sites.getCustomcss".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetCustomcss#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetCustomcss#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected GetCustomcss(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomCss.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetCustomcss set$Xgafv(java.lang.String $Xgafv) {
          return (GetCustomcss) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetCustomcss setAccessToken(java.lang.String accessToken) {
          return (GetCustomcss) super.setAccessToken(accessToken);
        }

        @Override
        public GetCustomcss setAlt(java.lang.String alt) {
          return (GetCustomcss) super.setAlt(alt);
        }

        @Override
        public GetCustomcss setCallback(java.lang.String callback) {
          return (GetCustomcss) super.setCallback(callback);
        }

        @Override
        public GetCustomcss setFields(java.lang.String fields) {
          return (GetCustomcss) super.setFields(fields);
        }

        @Override
        public GetCustomcss setKey(java.lang.String key) {
          return (GetCustomcss) super.setKey(key);
        }

        @Override
        public GetCustomcss setOauthToken(java.lang.String oauthToken) {
          return (GetCustomcss) super.setOauthToken(oauthToken);
        }

        @Override
        public GetCustomcss setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetCustomcss) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetCustomcss setQuotaUser(java.lang.String quotaUser) {
          return (GetCustomcss) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetCustomcss setUploadType(java.lang.String uploadType) {
          return (GetCustomcss) super.setUploadType(uploadType);
        }

        @Override
        public GetCustomcss setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetCustomcss) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public GetCustomcss setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetCustomcss set(String parameterName, Object value) {
          return (GetCustomcss) super.set(parameterName, value);
        }
      }
      /**
       * Gets the draft token for a portal.
       *
       * Create a request for the method "sites.getDrafttoken".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetDrafttoken#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public GetDrafttoken getDrafttoken(java.lang.String parent) throws java.io.IOException {
        GetDrafttoken result = new GetDrafttoken(parent);
        initialize(result);
        return result;
      }

      public class GetDrafttoken extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse> {

        private static final String REST_PATH = "v1/{+parent}/drafttoken";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Gets the draft token for a portal.
         *
         * Create a request for the method "sites.getDrafttoken".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetDrafttoken#execute()} method to invoke the remote operation. <p>
         * {@link GetDrafttoken#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
         * equest)} must be called to initialize this instance immediately after invoking the constructor.
         * </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected GetDrafttoken(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetDrafttoken set$Xgafv(java.lang.String $Xgafv) {
          return (GetDrafttoken) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetDrafttoken setAccessToken(java.lang.String accessToken) {
          return (GetDrafttoken) super.setAccessToken(accessToken);
        }

        @Override
        public GetDrafttoken setAlt(java.lang.String alt) {
          return (GetDrafttoken) super.setAlt(alt);
        }

        @Override
        public GetDrafttoken setCallback(java.lang.String callback) {
          return (GetDrafttoken) super.setCallback(callback);
        }

        @Override
        public GetDrafttoken setFields(java.lang.String fields) {
          return (GetDrafttoken) super.setFields(fields);
        }

        @Override
        public GetDrafttoken setKey(java.lang.String key) {
          return (GetDrafttoken) super.setKey(key);
        }

        @Override
        public GetDrafttoken setOauthToken(java.lang.String oauthToken) {
          return (GetDrafttoken) super.setOauthToken(oauthToken);
        }

        @Override
        public GetDrafttoken setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetDrafttoken) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetDrafttoken setQuotaUser(java.lang.String quotaUser) {
          return (GetDrafttoken) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetDrafttoken setUploadType(java.lang.String uploadType) {
          return (GetDrafttoken) super.setUploadType(uploadType);
        }

        @Override
        public GetDrafttoken setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetDrafttoken) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public GetDrafttoken setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetDrafttoken set(String parameterName, Object value) {
          return (GetDrafttoken) super.set(parameterName, value);
        }
      }
      /**
       * Lists the keystores and certs that are available for TLS configuration.
       *
       * Create a request for the method "sites.getKeystores".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetKeystores#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public GetKeystores getKeystores(java.lang.String parent) throws java.io.IOException {
        GetKeystores result = new GetKeystores(parent);
        initialize(result);
        return result;
      }

      public class GetKeystores extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeystoreSetResponse> {

        private static final String REST_PATH = "v1/{+parent}/keystores";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Lists the keystores and certs that are available for TLS configuration.
         *
         * Create a request for the method "sites.getKeystores".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetKeystores#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetKeystores#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected GetKeystores(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1KeystoreSetResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetKeystores set$Xgafv(java.lang.String $Xgafv) {
          return (GetKeystores) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetKeystores setAccessToken(java.lang.String accessToken) {
          return (GetKeystores) super.setAccessToken(accessToken);
        }

        @Override
        public GetKeystores setAlt(java.lang.String alt) {
          return (GetKeystores) super.setAlt(alt);
        }

        @Override
        public GetKeystores setCallback(java.lang.String callback) {
          return (GetKeystores) super.setCallback(callback);
        }

        @Override
        public GetKeystores setFields(java.lang.String fields) {
          return (GetKeystores) super.setFields(fields);
        }

        @Override
        public GetKeystores setKey(java.lang.String key) {
          return (GetKeystores) super.setKey(key);
        }

        @Override
        public GetKeystores setOauthToken(java.lang.String oauthToken) {
          return (GetKeystores) super.setOauthToken(oauthToken);
        }

        @Override
        public GetKeystores setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetKeystores) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetKeystores setQuotaUser(java.lang.String quotaUser) {
          return (GetKeystores) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetKeystores setUploadType(java.lang.String uploadType) {
          return (GetKeystores) super.setUploadType(uploadType);
        }

        @Override
        public GetKeystores setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetKeystores) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public GetKeystores setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetKeystores set(String parameterName, Object value) {
          return (GetKeystores) super.set(parameterName, value);
        }
      }
      /**
       * Gets the organization type for a portal.
       *
       * Create a request for the method "sites.getOrgtype".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetOrgtype#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public GetOrgtype getOrgtype(java.lang.String parent) throws java.io.IOException {
        GetOrgtype result = new GetOrgtype(parent);
        initialize(result);
        return result;
      }

      public class GetOrgtype extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse> {

        private static final String REST_PATH = "v1/{+parent}/orgtype";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Gets the organization type for a portal.
         *
         * Create a request for the method "sites.getOrgtype".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetOrgtype#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetOrgtype#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected GetOrgtype(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetOrgtype set$Xgafv(java.lang.String $Xgafv) {
          return (GetOrgtype) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetOrgtype setAccessToken(java.lang.String accessToken) {
          return (GetOrgtype) super.setAccessToken(accessToken);
        }

        @Override
        public GetOrgtype setAlt(java.lang.String alt) {
          return (GetOrgtype) super.setAlt(alt);
        }

        @Override
        public GetOrgtype setCallback(java.lang.String callback) {
          return (GetOrgtype) super.setCallback(callback);
        }

        @Override
        public GetOrgtype setFields(java.lang.String fields) {
          return (GetOrgtype) super.setFields(fields);
        }

        @Override
        public GetOrgtype setKey(java.lang.String key) {
          return (GetOrgtype) super.setKey(key);
        }

        @Override
        public GetOrgtype setOauthToken(java.lang.String oauthToken) {
          return (GetOrgtype) super.setOauthToken(oauthToken);
        }

        @Override
        public GetOrgtype setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetOrgtype) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetOrgtype setQuotaUser(java.lang.String quotaUser) {
          return (GetOrgtype) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetOrgtype setUploadType(java.lang.String uploadType) {
          return (GetOrgtype) super.setUploadType(uploadType);
        }

        @Override
        public GetOrgtype setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetOrgtype) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public GetOrgtype setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetOrgtype set(String parameterName, Object value) {
          return (GetOrgtype) super.set(parameterName, value);
        }
      }
      /**
       * Gets the details for a portal.
       *
       * Create a request for the method "sites.getPortal".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetPortal#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public GetPortal getPortal(java.lang.String parent) throws java.io.IOException {
        GetPortal result = new GetPortal(parent);
        initialize(result);
        return result;
      }

      public class GetPortal extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Site> {

        private static final String REST_PATH = "v1/{+parent}/portal";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Gets the details for a portal.
         *
         * Create a request for the method "sites.getPortal".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetPortal#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetPortal#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected GetPortal(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Site.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetPortal set$Xgafv(java.lang.String $Xgafv) {
          return (GetPortal) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetPortal setAccessToken(java.lang.String accessToken) {
          return (GetPortal) super.setAccessToken(accessToken);
        }

        @Override
        public GetPortal setAlt(java.lang.String alt) {
          return (GetPortal) super.setAlt(alt);
        }

        @Override
        public GetPortal setCallback(java.lang.String callback) {
          return (GetPortal) super.setCallback(callback);
        }

        @Override
        public GetPortal setFields(java.lang.String fields) {
          return (GetPortal) super.setFields(fields);
        }

        @Override
        public GetPortal setKey(java.lang.String key) {
          return (GetPortal) super.setKey(key);
        }

        @Override
        public GetPortal setOauthToken(java.lang.String oauthToken) {
          return (GetPortal) super.setOauthToken(oauthToken);
        }

        @Override
        public GetPortal setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetPortal) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetPortal setQuotaUser(java.lang.String quotaUser) {
          return (GetPortal) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetPortal setUploadType(java.lang.String uploadType) {
          return (GetPortal) super.setUploadType(uploadType);
        }

        @Override
        public GetPortal setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetPortal) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public GetPortal setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetPortal set(String parameterName, Object value) {
          return (GetPortal) super.set(parameterName, value);
        }
      }
      /**
       * Lists all published APIs.
       *
       * Create a request for the method "sites.getPublishedapis".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetPublishedapis#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public GetPublishedapis getPublishedapis(java.lang.String parent) throws java.io.IOException {
        GetPublishedapis result = new GetPublishedapis(parent);
        initialize(result);
        return result;
      }

      public class GetPublishedapis extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PublishedApisPageResponse> {

        private static final String REST_PATH = "v1/{+parent}/publishedapis";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Lists all published APIs.
         *
         * Create a request for the method "sites.getPublishedapis".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetPublishedapis#execute()} method to invoke the remote operation.
         * <p> {@link GetPublishedapis#initialize(com.google.api.client.googleapis.services.AbstractGoogle
         * ClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected GetPublishedapis(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PublishedApisPageResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetPublishedapis set$Xgafv(java.lang.String $Xgafv) {
          return (GetPublishedapis) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetPublishedapis setAccessToken(java.lang.String accessToken) {
          return (GetPublishedapis) super.setAccessToken(accessToken);
        }

        @Override
        public GetPublishedapis setAlt(java.lang.String alt) {
          return (GetPublishedapis) super.setAlt(alt);
        }

        @Override
        public GetPublishedapis setCallback(java.lang.String callback) {
          return (GetPublishedapis) super.setCallback(callback);
        }

        @Override
        public GetPublishedapis setFields(java.lang.String fields) {
          return (GetPublishedapis) super.setFields(fields);
        }

        @Override
        public GetPublishedapis setKey(java.lang.String key) {
          return (GetPublishedapis) super.setKey(key);
        }

        @Override
        public GetPublishedapis setOauthToken(java.lang.String oauthToken) {
          return (GetPublishedapis) super.setOauthToken(oauthToken);
        }

        @Override
        public GetPublishedapis setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetPublishedapis) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetPublishedapis setQuotaUser(java.lang.String quotaUser) {
          return (GetPublishedapis) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetPublishedapis setUploadType(java.lang.String uploadType) {
          return (GetPublishedapis) super.setUploadType(uploadType);
        }

        @Override
        public GetPublishedapis setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetPublishedapis) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public GetPublishedapis setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @com.google.api.client.util.Key
        private java.lang.String filter;

        /**

         */
        public java.lang.String getFilter() {
          return filter;
        }

        public GetPublishedapis setFilter(java.lang.String filter) {
          this.filter = filter;
          return this;
        }

        @Override
        public GetPublishedapis set(String parameterName, Object value) {
          return (GetPublishedapis) super.set(parameterName, value);
        }
      }
      /**
       * Gets the SMTP configuration for a portal.
       *
       * Create a request for the method "sites.getSmtp".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetSmtp#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public GetSmtp getSmtp(java.lang.String parent) throws java.io.IOException {
        GetSmtp result = new GetSmtp(parent);
        initialize(result);
        return result;
      }

      public class GetSmtp extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SmtpConfigResponse> {

        private static final String REST_PATH = "v1/{+parent}/smtp";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Gets the SMTP configuration for a portal.
         *
         * Create a request for the method "sites.getSmtp".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetSmtp#execute()} method to invoke the remote operation. <p>
         * {@link
         * GetSmtp#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected GetSmtp(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SmtpConfigResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetSmtp set$Xgafv(java.lang.String $Xgafv) {
          return (GetSmtp) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetSmtp setAccessToken(java.lang.String accessToken) {
          return (GetSmtp) super.setAccessToken(accessToken);
        }

        @Override
        public GetSmtp setAlt(java.lang.String alt) {
          return (GetSmtp) super.setAlt(alt);
        }

        @Override
        public GetSmtp setCallback(java.lang.String callback) {
          return (GetSmtp) super.setCallback(callback);
        }

        @Override
        public GetSmtp setFields(java.lang.String fields) {
          return (GetSmtp) super.setFields(fields);
        }

        @Override
        public GetSmtp setKey(java.lang.String key) {
          return (GetSmtp) super.setKey(key);
        }

        @Override
        public GetSmtp setOauthToken(java.lang.String oauthToken) {
          return (GetSmtp) super.setOauthToken(oauthToken);
        }

        @Override
        public GetSmtp setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetSmtp) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetSmtp setQuotaUser(java.lang.String quotaUser) {
          return (GetSmtp) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetSmtp setUploadType(java.lang.String uploadType) {
          return (GetSmtp) super.setUploadType(uploadType);
        }

        @Override
        public GetSmtp setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetSmtp) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public GetSmtp setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetSmtp set(String parameterName, Object value) {
          return (GetSmtp) super.set(parameterName, value);
        }
      }
      /**
       * Gets the title and contents of the page on the portal.
       *
       * Create a request for the method "sites.render".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Render#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public Render render(java.lang.String parent) throws java.io.IOException {
        Render result = new Render(parent);
        initialize(result);
        return result;
      }

      public class Render extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageContentResponse> {

        private static final String REST_PATH = "v1/{+parent}/render";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Gets the title and contents of the page on the portal.
         *
         * Create a request for the method "sites.render".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Render#execute()} method to invoke the remote operation. <p> {@link
         * Render#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected Render(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageContentResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Render set$Xgafv(java.lang.String $Xgafv) {
          return (Render) super.set$Xgafv($Xgafv);
        }

        @Override
        public Render setAccessToken(java.lang.String accessToken) {
          return (Render) super.setAccessToken(accessToken);
        }

        @Override
        public Render setAlt(java.lang.String alt) {
          return (Render) super.setAlt(alt);
        }

        @Override
        public Render setCallback(java.lang.String callback) {
          return (Render) super.setCallback(callback);
        }

        @Override
        public Render setFields(java.lang.String fields) {
          return (Render) super.setFields(fields);
        }

        @Override
        public Render setKey(java.lang.String key) {
          return (Render) super.setKey(key);
        }

        @Override
        public Render setOauthToken(java.lang.String oauthToken) {
          return (Render) super.setOauthToken(oauthToken);
        }

        @Override
        public Render setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Render) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Render setQuotaUser(java.lang.String quotaUser) {
          return (Render) super.setQuotaUser(quotaUser);
        }

        @Override
        public Render setUploadType(java.lang.String uploadType) {
          return (Render) super.setUploadType(uploadType);
        }

        @Override
        public Render setUploadProtocol(java.lang.String uploadProtocol) {
          return (Render) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public Render setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @com.google.api.client.util.Key
        private java.lang.String draft;

        /**

         */
        public java.lang.String getDraft() {
          return draft;
        }

        public Render setDraft(java.lang.String draft) {
          this.draft = draft;
          return this;
        }

        @com.google.api.client.util.Key
        private java.lang.String pageId;

        /**

         */
        public java.lang.String getPageId() {
          return pageId;
        }

        public Render setPageId(java.lang.String pageId) {
          this.pageId = pageId;
          return this;
        }

        @Override
        public Render set(String parameterName, Object value) {
          return (Render) super.set(parameterName, value);
        }
      }
      /**
       * Sends a test email using the email template.
       *
       * Create a request for the method "sites.send-test-email".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link SendTestEmail#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SendTestEmailPayload}
       * @return the request
       */
      public SendTestEmail sendTestEmail(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SendTestEmailPayload content) throws java.io.IOException {
        SendTestEmail result = new SendTestEmail(parent, content);
        initialize(result);
        return result;
      }

      public class SendTestEmail extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

        private static final String REST_PATH = "v1/{+parent}/send-test-email";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Sends a test email using the email template.
         *
         * Create a request for the method "sites.send-test-email".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link SendTestEmail#execute()} method to invoke the remote operation. <p>
         * {@link SendTestEmail#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientR
         * equest)} must be called to initialize this instance immediately after invoking the constructor.
         * </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SendTestEmailPayload}
         * @since 1.13
         */
        protected SendTestEmail(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SendTestEmailPayload content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public SendTestEmail set$Xgafv(java.lang.String $Xgafv) {
          return (SendTestEmail) super.set$Xgafv($Xgafv);
        }

        @Override
        public SendTestEmail setAccessToken(java.lang.String accessToken) {
          return (SendTestEmail) super.setAccessToken(accessToken);
        }

        @Override
        public SendTestEmail setAlt(java.lang.String alt) {
          return (SendTestEmail) super.setAlt(alt);
        }

        @Override
        public SendTestEmail setCallback(java.lang.String callback) {
          return (SendTestEmail) super.setCallback(callback);
        }

        @Override
        public SendTestEmail setFields(java.lang.String fields) {
          return (SendTestEmail) super.setFields(fields);
        }

        @Override
        public SendTestEmail setKey(java.lang.String key) {
          return (SendTestEmail) super.setKey(key);
        }

        @Override
        public SendTestEmail setOauthToken(java.lang.String oauthToken) {
          return (SendTestEmail) super.setOauthToken(oauthToken);
        }

        @Override
        public SendTestEmail setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (SendTestEmail) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public SendTestEmail setQuotaUser(java.lang.String quotaUser) {
          return (SendTestEmail) super.setQuotaUser(quotaUser);
        }

        @Override
        public SendTestEmail setUploadType(java.lang.String uploadType) {
          return (SendTestEmail) super.setUploadType(uploadType);
        }

        @Override
        public SendTestEmail setUploadProtocol(java.lang.String uploadProtocol) {
          return (SendTestEmail) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public SendTestEmail setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public SendTestEmail set(String parameterName, Object value) {
          return (SendTestEmail) super.set(parameterName, value);
        }
      }
      /**
       * Deletes a portal.
       *
       * Create a request for the method "sites.trash".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Trash#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @return the request
       */
      public Trash trash(java.lang.String parent) throws java.io.IOException {
        Trash result = new Trash(parent);
        initialize(result);
        return result;
      }

      public class Trash extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

        private static final String REST_PATH = "v1/{+parent}/trash";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Deletes a portal.
         *
         * Create a request for the method "sites.trash".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Trash#execute()} method to invoke the remote operation. <p> {@link
         * Trash#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @since 1.13
         */
        protected Trash(java.lang.String parent) {
          super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public Trash set$Xgafv(java.lang.String $Xgafv) {
          return (Trash) super.set$Xgafv($Xgafv);
        }

        @Override
        public Trash setAccessToken(java.lang.String accessToken) {
          return (Trash) super.setAccessToken(accessToken);
        }

        @Override
        public Trash setAlt(java.lang.String alt) {
          return (Trash) super.setAlt(alt);
        }

        @Override
        public Trash setCallback(java.lang.String callback) {
          return (Trash) super.setCallback(callback);
        }

        @Override
        public Trash setFields(java.lang.String fields) {
          return (Trash) super.setFields(fields);
        }

        @Override
        public Trash setKey(java.lang.String key) {
          return (Trash) super.setKey(key);
        }

        @Override
        public Trash setOauthToken(java.lang.String oauthToken) {
          return (Trash) super.setOauthToken(oauthToken);
        }

        @Override
        public Trash setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Trash) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Trash setQuotaUser(java.lang.String quotaUser) {
          return (Trash) super.setQuotaUser(quotaUser);
        }

        @Override
        public Trash setUploadType(java.lang.String uploadType) {
          return (Trash) super.setUploadType(uploadType);
        }

        @Override
        public Trash setUploadProtocol(java.lang.String uploadProtocol) {
          return (Trash) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public Trash setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Trash set(String parameterName, Object value) {
          return (Trash) super.set(parameterName, value);
        }
      }
      /**
       * Updates the custom CSS for a portal.
       *
       * Create a request for the method "sites.updateCustomcss".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateCustomcss#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateCustomCssRequest}
       * @return the request
       */
      public UpdateCustomcss updateCustomcss(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateCustomCssRequest content) throws java.io.IOException {
        UpdateCustomcss result = new UpdateCustomcss(parent, content);
        initialize(result);
        return result;
      }

      public class UpdateCustomcss extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomCss> {

        private static final String REST_PATH = "v1/{+parent}/customcss";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Updates the custom CSS for a portal.
         *
         * Create a request for the method "sites.updateCustomcss".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateCustomcss#execute()} method to invoke the remote operation.
         * <p> {@link UpdateCustomcss#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
         * lientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateCustomCssRequest}
         * @since 1.13
         */
        protected UpdateCustomcss(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateCustomCssRequest content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomCss.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public UpdateCustomcss set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateCustomcss) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateCustomcss setAccessToken(java.lang.String accessToken) {
          return (UpdateCustomcss) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateCustomcss setAlt(java.lang.String alt) {
          return (UpdateCustomcss) super.setAlt(alt);
        }

        @Override
        public UpdateCustomcss setCallback(java.lang.String callback) {
          return (UpdateCustomcss) super.setCallback(callback);
        }

        @Override
        public UpdateCustomcss setFields(java.lang.String fields) {
          return (UpdateCustomcss) super.setFields(fields);
        }

        @Override
        public UpdateCustomcss setKey(java.lang.String key) {
          return (UpdateCustomcss) super.setKey(key);
        }

        @Override
        public UpdateCustomcss setOauthToken(java.lang.String oauthToken) {
          return (UpdateCustomcss) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateCustomcss setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateCustomcss) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateCustomcss setQuotaUser(java.lang.String quotaUser) {
          return (UpdateCustomcss) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateCustomcss setUploadType(java.lang.String uploadType) {
          return (UpdateCustomcss) super.setUploadType(uploadType);
        }

        @Override
        public UpdateCustomcss setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateCustomcss) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public UpdateCustomcss setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public UpdateCustomcss set(String parameterName, Object value) {
          return (UpdateCustomcss) super.set(parameterName, value);
        }
      }
      /**
       * Updates a portal.
       *
       * Create a request for the method "sites.updatePortal".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdatePortal#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData}
       * @return the request
       */
      public UpdatePortal updatePortal(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData content) throws java.io.IOException {
        UpdatePortal result = new UpdatePortal(parent, content);
        initialize(result);
        return result;
      }

      public class UpdatePortal extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Site> {

        private static final String REST_PATH = "v1/{+parent}/portal";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Updates a portal.
         *
         * Create a request for the method "sites.updatePortal".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdatePortal#execute()} method to invoke the remote operation. <p>
         * {@link
         * UpdatePortal#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData}
         * @since 1.13
         */
        protected UpdatePortal(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Site.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public UpdatePortal set$Xgafv(java.lang.String $Xgafv) {
          return (UpdatePortal) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdatePortal setAccessToken(java.lang.String accessToken) {
          return (UpdatePortal) super.setAccessToken(accessToken);
        }

        @Override
        public UpdatePortal setAlt(java.lang.String alt) {
          return (UpdatePortal) super.setAlt(alt);
        }

        @Override
        public UpdatePortal setCallback(java.lang.String callback) {
          return (UpdatePortal) super.setCallback(callback);
        }

        @Override
        public UpdatePortal setFields(java.lang.String fields) {
          return (UpdatePortal) super.setFields(fields);
        }

        @Override
        public UpdatePortal setKey(java.lang.String key) {
          return (UpdatePortal) super.setKey(key);
        }

        @Override
        public UpdatePortal setOauthToken(java.lang.String oauthToken) {
          return (UpdatePortal) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdatePortal setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdatePortal) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdatePortal setQuotaUser(java.lang.String quotaUser) {
          return (UpdatePortal) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdatePortal setUploadType(java.lang.String uploadType) {
          return (UpdatePortal) super.setUploadType(uploadType);
        }

        @Override
        public UpdatePortal setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdatePortal) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public UpdatePortal setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public UpdatePortal set(String parameterName, Object value) {
          return (UpdatePortal) super.set(parameterName, value);
        }
      }
      /**
       * Updates the SMTP configuration for a portal.
       *
       * Create a request for the method "sites.updateSmtp".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link UpdateSmtp#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SmtpConfig}
       * @return the request
       */
      public UpdateSmtp updateSmtp(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SmtpConfig content) throws java.io.IOException {
        UpdateSmtp result = new UpdateSmtp(parent, content);
        initialize(result);
        return result;
      }

      public class UpdateSmtp extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SmtpConfigResponse> {

        private static final String REST_PATH = "v1/{+parent}/smtp";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

        /**
         * Updates the SMTP configuration for a portal.
         *
         * Create a request for the method "sites.updateSmtp".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link UpdateSmtp#execute()} method to invoke the remote operation. <p>
         * {@link
         * UpdateSmtp#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
       *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SmtpConfig}
         * @since 1.13
         */
        protected UpdateSmtp(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SmtpConfig content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SmtpConfigResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
        }

        @Override
        public UpdateSmtp set$Xgafv(java.lang.String $Xgafv) {
          return (UpdateSmtp) super.set$Xgafv($Xgafv);
        }

        @Override
        public UpdateSmtp setAccessToken(java.lang.String accessToken) {
          return (UpdateSmtp) super.setAccessToken(accessToken);
        }

        @Override
        public UpdateSmtp setAlt(java.lang.String alt) {
          return (UpdateSmtp) super.setAlt(alt);
        }

        @Override
        public UpdateSmtp setCallback(java.lang.String callback) {
          return (UpdateSmtp) super.setCallback(callback);
        }

        @Override
        public UpdateSmtp setFields(java.lang.String fields) {
          return (UpdateSmtp) super.setFields(fields);
        }

        @Override
        public UpdateSmtp setKey(java.lang.String key) {
          return (UpdateSmtp) super.setKey(key);
        }

        @Override
        public UpdateSmtp setOauthToken(java.lang.String oauthToken) {
          return (UpdateSmtp) super.setOauthToken(oauthToken);
        }

        @Override
        public UpdateSmtp setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (UpdateSmtp) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public UpdateSmtp setQuotaUser(java.lang.String quotaUser) {
          return (UpdateSmtp) super.setQuotaUser(quotaUser);
        }

        @Override
        public UpdateSmtp setUploadType(java.lang.String uploadType) {
          return (UpdateSmtp) super.setUploadType(uploadType);
        }

        @Override
        public UpdateSmtp setUploadProtocol(java.lang.String uploadProtocol) {
          return (UpdateSmtp) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the portal. Use the following structure in your request:
       `organizations/{org}/sites/{site}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the portal. Use the following structure in your request:
         * `organizations/{org}/sites/{site}`
         */
        public UpdateSmtp setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/sites/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public UpdateSmtp set(String parameterName, Object value) {
          return (UpdateSmtp) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Apidocs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Apidocs.List request = apigee.apidocs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Apidocs apidocs() {
        return new Apidocs();
      }

      /**
       * The "apidocs" collection of methods.
       */
      public class Apidocs {

        /**
         * Publishes an API to the portal.
         *
         * Create a request for the method "apidocs.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocBody}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocBody content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc> {

          private static final String REST_PATH = "v1/{+parent}/apidocs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Publishes an API to the portal.
           *
           * Create a request for the method "apidocs.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocBody}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Removes a published API from the portal.
         *
         * Create a request for the method "apidocs.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. ID of the published API. Use the following structure in
        your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");

          /**
           * Removes a published API from the portal.
           *
           * Create a request for the method "apidocs.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. ID of the published API. Use the following structure in
        your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. ID of the published API. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the published API. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the published API. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Removes the current OpenAPI Specification snapshot from the published API.
         *
         * Create a request for the method "apidocs.deleteSnapshot".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link DeleteSnapshot#execute()} method to invoke the remote operation.
         *
         * @param name Required. ID of the published API. Must be of the form
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
         * @return the request
         */
        public DeleteSnapshot deleteSnapshot(java.lang.String name) throws java.io.IOException {
          DeleteSnapshot result = new DeleteSnapshot(name);
          initialize(result);
          return result;
        }

        public class DeleteSnapshot extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc> {

          private static final String REST_PATH = "v1/{+name}/snapshot";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");

          /**
           * Removes the current OpenAPI Specification snapshot from the published API.
           *
           * Create a request for the method "apidocs.deleteSnapshot".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link DeleteSnapshot#execute()} method to invoke the remote operation.
           * <p> {@link DeleteSnapshot#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
           * ientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param name Required. ID of the published API. Must be of the form
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           * @since 1.13
           */
          protected DeleteSnapshot(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
          }

          @Override
          public DeleteSnapshot set$Xgafv(java.lang.String $Xgafv) {
            return (DeleteSnapshot) super.set$Xgafv($Xgafv);
          }

          @Override
          public DeleteSnapshot setAccessToken(java.lang.String accessToken) {
            return (DeleteSnapshot) super.setAccessToken(accessToken);
          }

          @Override
          public DeleteSnapshot setAlt(java.lang.String alt) {
            return (DeleteSnapshot) super.setAlt(alt);
          }

          @Override
          public DeleteSnapshot setCallback(java.lang.String callback) {
            return (DeleteSnapshot) super.setCallback(callback);
          }

          @Override
          public DeleteSnapshot setFields(java.lang.String fields) {
            return (DeleteSnapshot) super.setFields(fields);
          }

          @Override
          public DeleteSnapshot setKey(java.lang.String key) {
            return (DeleteSnapshot) super.setKey(key);
          }

          @Override
          public DeleteSnapshot setOauthToken(java.lang.String oauthToken) {
            return (DeleteSnapshot) super.setOauthToken(oauthToken);
          }

          @Override
          public DeleteSnapshot setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (DeleteSnapshot) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public DeleteSnapshot setQuotaUser(java.lang.String quotaUser) {
            return (DeleteSnapshot) super.setQuotaUser(quotaUser);
          }

          @Override
          public DeleteSnapshot setUploadType(java.lang.String uploadType) {
            return (DeleteSnapshot) super.setUploadType(uploadType);
          }

          @Override
          public DeleteSnapshot setUploadProtocol(java.lang.String uploadProtocol) {
            return (DeleteSnapshot) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. ID of the published API. Must be of the form
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the published API. Must be of the form
         `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the published API. Must be of the form
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public DeleteSnapshot setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public DeleteSnapshot set(String parameterName, Object value) {
            return (DeleteSnapshot) super.set(parameterName, value);
          }
        }
        /**
         * Gets the details for a published API.
         *
         * Create a request for the method "apidocs.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. ID of the published API. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");

          /**
           * Gets the details for a published API.
           *
           * Create a request for the method "apidocs.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. ID of the published API. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. ID of the published API. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the published API. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the published API. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the details for all published APIs.
         *
         * Create a request for the method "apidocs.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiDocsResponse> {

          private static final String REST_PATH = "v1/{+parent}/apidocs";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Lists the details for all published APIs.
           *
           * Create a request for the method "apidocs.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListApiDocsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Lists the APIs that can be published to the portal.
         *
         * Create a request for the method "apidocs.listPublishableProducts".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link ListPublishableProducts#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs:listPublishableProducts`
         * @return the request
         */
        public ListPublishableProducts listPublishableProducts(java.lang.String parent) throws java.io.IOException {
          ListPublishableProducts result = new ListPublishableProducts(parent);
          initialize(result);
          return result;
        }

        public class ListPublishableProducts extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListPublishableProductsResponse> {

          private static final String REST_PATH = "v1/{+parent}/apidocs:listPublishableProducts";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Lists the APIs that can be published to the portal.
           *
           * Create a request for the method "apidocs.listPublishableProducts".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link ListPublishableProducts#execute()} method to invoke the remote
           * operation. <p> {@link ListPublishableProducts#initialize(com.google.api.client.googleapis.servi
           * ces.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs:listPublishableProducts`
           * @since 1.13
           */
          protected ListPublishableProducts(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListPublishableProductsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListPublishableProducts set$Xgafv(java.lang.String $Xgafv) {
            return (ListPublishableProducts) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListPublishableProducts setAccessToken(java.lang.String accessToken) {
            return (ListPublishableProducts) super.setAccessToken(accessToken);
          }

          @Override
          public ListPublishableProducts setAlt(java.lang.String alt) {
            return (ListPublishableProducts) super.setAlt(alt);
          }

          @Override
          public ListPublishableProducts setCallback(java.lang.String callback) {
            return (ListPublishableProducts) super.setCallback(callback);
          }

          @Override
          public ListPublishableProducts setFields(java.lang.String fields) {
            return (ListPublishableProducts) super.setFields(fields);
          }

          @Override
          public ListPublishableProducts setKey(java.lang.String key) {
            return (ListPublishableProducts) super.setKey(key);
          }

          @Override
          public ListPublishableProducts setOauthToken(java.lang.String oauthToken) {
            return (ListPublishableProducts) super.setOauthToken(oauthToken);
          }

          @Override
          public ListPublishableProducts setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListPublishableProducts) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListPublishableProducts setQuotaUser(java.lang.String quotaUser) {
            return (ListPublishableProducts) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListPublishableProducts setUploadType(java.lang.String uploadType) {
            return (ListPublishableProducts) super.setUploadType(uploadType);
          }

          @Override
          public ListPublishableProducts setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListPublishableProducts) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs:listPublishableProducts`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apidocs:listPublishableProducts`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs:listPublishableProducts`
           */
          public ListPublishableProducts setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public ListPublishableProducts set(String parameterName, Object value) {
            return (ListPublishableProducts) super.set(parameterName, value);
          }
        }
        /**
         * Uploads the contents of an OpenAPI Specification snapshot for a published API.
         *
         * Create a request for the method "apidocs.snapshot".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Snapshot#execute()} method to invoke the remote operation.
         *
         * @param name Required. ID of the published API. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public Snapshot snapshot(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          Snapshot result = new Snapshot(name, content);
          initialize(result);
          return result;
        }

        public class Snapshot extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc> {

          private static final String REST_PATH = "v1/{+name}/snapshot";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");

          /**
           * Uploads the contents of an OpenAPI Specification snapshot for a published API.
           *
           * Create a request for the method "apidocs.snapshot".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Snapshot#execute()} method to invoke the remote operation. <p>
           * {@link
           * Snapshot#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. ID of the published API. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected Snapshot(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
          }

          @Override
          public Snapshot set$Xgafv(java.lang.String $Xgafv) {
            return (Snapshot) super.set$Xgafv($Xgafv);
          }

          @Override
          public Snapshot setAccessToken(java.lang.String accessToken) {
            return (Snapshot) super.setAccessToken(accessToken);
          }

          @Override
          public Snapshot setAlt(java.lang.String alt) {
            return (Snapshot) super.setAlt(alt);
          }

          @Override
          public Snapshot setCallback(java.lang.String callback) {
            return (Snapshot) super.setCallback(callback);
          }

          @Override
          public Snapshot setFields(java.lang.String fields) {
            return (Snapshot) super.setFields(fields);
          }

          @Override
          public Snapshot setKey(java.lang.String key) {
            return (Snapshot) super.setKey(key);
          }

          @Override
          public Snapshot setOauthToken(java.lang.String oauthToken) {
            return (Snapshot) super.setOauthToken(oauthToken);
          }

          @Override
          public Snapshot setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Snapshot) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Snapshot setQuotaUser(java.lang.String quotaUser) {
            return (Snapshot) super.setQuotaUser(quotaUser);
          }

          @Override
          public Snapshot setUploadType(java.lang.String uploadType) {
            return (Snapshot) super.setUploadType(uploadType);
          }

          @Override
          public Snapshot setUploadProtocol(java.lang.String uploadProtocol) {
            return (Snapshot) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. ID of the published API. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the published API. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the published API. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public Snapshot setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Snapshot set(String parameterName, Object value) {
            return (Snapshot) super.set(parameterName, value);
          }
        }
        /**
         * Updates the details or specification for a published API.
         *
         * Create a request for the method "apidocs.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. ID of the published API. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocBody}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocBody content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");

          /**
           * Updates the details or specification for a published API.
           *
           * Create a request for the method "apidocs.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. ID of the published API. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocBody}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDocBody content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiDoc.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. ID of the published API. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. ID of the published API. Use the following structure in your request:
         `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. ID of the published API. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/apidocs/{apidoc}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/apidocs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Customcss collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Customcss.List request = apigee.customcss().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Customcss customcss() {
        return new Customcss();
      }

      /**
       * The "customcss" collection of methods.
       */
      public class Customcss {

        /**
         * Gets the information required for the theme editor.
         *
         * Create a request for the method "customcss.getEditorschema".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetEditorschema#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name for the custom CSS. Use the following structure in your
        request:
         *        `organizations/{org}/sites/customcss`
         * @return the request
         */
        public GetEditorschema getEditorschema(java.lang.String parent) throws java.io.IOException {
          GetEditorschema result = new GetEditorschema(parent);
          initialize(result);
          return result;
        }

        public class GetEditorschema extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EditorSchema> {

          private static final String REST_PATH = "v1/{+parent}/editorschema";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/customcss$");

          /**
           * Gets the information required for the theme editor.
           *
           * Create a request for the method "customcss.getEditorschema".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetEditorschema#execute()} method to invoke the remote operation.
           * <p> {@link GetEditorschema#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
           * lientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param parent Required. Name for the custom CSS. Use the following structure in your
        request:
         *        `organizations/{org}/sites/customcss`
           * @since 1.13
           */
          protected GetEditorschema(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EditorSchema.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/customcss$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetEditorschema set$Xgafv(java.lang.String $Xgafv) {
            return (GetEditorschema) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetEditorschema setAccessToken(java.lang.String accessToken) {
            return (GetEditorschema) super.setAccessToken(accessToken);
          }

          @Override
          public GetEditorschema setAlt(java.lang.String alt) {
            return (GetEditorschema) super.setAlt(alt);
          }

          @Override
          public GetEditorschema setCallback(java.lang.String callback) {
            return (GetEditorschema) super.setCallback(callback);
          }

          @Override
          public GetEditorschema setFields(java.lang.String fields) {
            return (GetEditorschema) super.setFields(fields);
          }

          @Override
          public GetEditorschema setKey(java.lang.String key) {
            return (GetEditorschema) super.setKey(key);
          }

          @Override
          public GetEditorschema setOauthToken(java.lang.String oauthToken) {
            return (GetEditorschema) super.setOauthToken(oauthToken);
          }

          @Override
          public GetEditorschema setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetEditorschema) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetEditorschema setQuotaUser(java.lang.String quotaUser) {
            return (GetEditorschema) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetEditorschema setUploadType(java.lang.String uploadType) {
            return (GetEditorschema) super.setUploadType(uploadType);
          }

          @Override
          public GetEditorschema setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetEditorschema) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name for the custom CSS. Use the following structure in your request:
           * `organizations/{org}/sites/customcss`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name for the custom CSS. Use the following structure in your request:
         `organizations/{org}/sites/customcss`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name for the custom CSS. Use the following structure in your request:
           * `organizations/{org}/sites/customcss`
           */
          public GetEditorschema setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/customcss$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public GetEditorschema set(String parameterName, Object value) {
            return (GetEditorschema) super.set(parameterName, value);
          }
        }
        /**
         * Publishes the custom CSS for a portal
         *
         * Create a request for the method "customcss.publish".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Publish#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name for the custom CSS. Use the following structure in your
        request:
         *        `organizations/{org}/sites/customcss`
         * @return the request
         */
        public Publish publish(java.lang.String parent) throws java.io.IOException {
          Publish result = new Publish(parent);
          initialize(result);
          return result;
        }

        public class Publish extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/publish";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/customcss$");

          /**
           * Publishes the custom CSS for a portal
           *
           * Create a request for the method "customcss.publish".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Publish#execute()} method to invoke the remote operation. <p>
           * {@link
           * Publish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name for the custom CSS. Use the following structure in your
        request:
         *        `organizations/{org}/sites/customcss`
           * @since 1.13
           */
          protected Publish(java.lang.String parent) {
            super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/customcss$");
            }
          }

          @Override
          public Publish set$Xgafv(java.lang.String $Xgafv) {
            return (Publish) super.set$Xgafv($Xgafv);
          }

          @Override
          public Publish setAccessToken(java.lang.String accessToken) {
            return (Publish) super.setAccessToken(accessToken);
          }

          @Override
          public Publish setAlt(java.lang.String alt) {
            return (Publish) super.setAlt(alt);
          }

          @Override
          public Publish setCallback(java.lang.String callback) {
            return (Publish) super.setCallback(callback);
          }

          @Override
          public Publish setFields(java.lang.String fields) {
            return (Publish) super.setFields(fields);
          }

          @Override
          public Publish setKey(java.lang.String key) {
            return (Publish) super.setKey(key);
          }

          @Override
          public Publish setOauthToken(java.lang.String oauthToken) {
            return (Publish) super.setOauthToken(oauthToken);
          }

          @Override
          public Publish setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Publish) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Publish setQuotaUser(java.lang.String quotaUser) {
            return (Publish) super.setQuotaUser(quotaUser);
          }

          @Override
          public Publish setUploadType(java.lang.String uploadType) {
            return (Publish) super.setUploadType(uploadType);
          }

          @Override
          public Publish setUploadProtocol(java.lang.String uploadProtocol) {
            return (Publish) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name for the custom CSS. Use the following structure in your request:
           * `organizations/{org}/sites/customcss`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name for the custom CSS. Use the following structure in your request:
         `organizations/{org}/sites/customcss`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name for the custom CSS. Use the following structure in your request:
           * `organizations/{org}/sites/customcss`
           */
          public Publish setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/customcss$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Publish set(String parameterName, Object value) {
            return (Publish) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Dns collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Dns.List request = apigee.dns().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Dns dns() {
        return new Dns();
      }

      /**
       * The "dns" collection of methods.
       */
      public class Dns {

        /**
         * Checks DNS to verify that a domain has the expected canonical name (CNAME) record.
         *
         * Create a request for the method "dns.check".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Check#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your
        request:
         *        `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DnsCnameCheck}
         * @return the request
         */
        public Check check(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DnsCnameCheck content) throws java.io.IOException {
          Check result = new Check(parent, content);
          initialize(result);
          return result;
        }

        public class Check extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DomainVerifiedResponse> {

          private static final String REST_PATH = "v1/{+parent}/sites/dns/check";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+$");

          /**
           * Checks DNS to verify that a domain has the expected canonical name (CNAME) record.
           *
           * Create a request for the method "dns.check".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Check#execute()} method to invoke the remote operation. <p> {@link
           * Check#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the Apigee organization. Use the following structure in your
        request:
         *        `organizations/{org}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DnsCnameCheck}
           * @since 1.13
           */
          protected Check(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DnsCnameCheck content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DomainVerifiedResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
          }

          @Override
          public Check set$Xgafv(java.lang.String $Xgafv) {
            return (Check) super.set$Xgafv($Xgafv);
          }

          @Override
          public Check setAccessToken(java.lang.String accessToken) {
            return (Check) super.setAccessToken(accessToken);
          }

          @Override
          public Check setAlt(java.lang.String alt) {
            return (Check) super.setAlt(alt);
          }

          @Override
          public Check setCallback(java.lang.String callback) {
            return (Check) super.setCallback(callback);
          }

          @Override
          public Check setFields(java.lang.String fields) {
            return (Check) super.setFields(fields);
          }

          @Override
          public Check setKey(java.lang.String key) {
            return (Check) super.setKey(key);
          }

          @Override
          public Check setOauthToken(java.lang.String oauthToken) {
            return (Check) super.setOauthToken(oauthToken);
          }

          @Override
          public Check setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Check) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Check setQuotaUser(java.lang.String quotaUser) {
            return (Check) super.setQuotaUser(quotaUser);
          }

          @Override
          public Check setUploadType(java.lang.String uploadType) {
            return (Check) super.setUploadType(uploadType);
          }

          @Override
          public Check setUploadProtocol(java.lang.String uploadProtocol) {
            return (Check) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the Apigee organization. Use the following structure in your request:
           * `organizations/{org}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the Apigee organization. Use the following structure in your request:
         `organizations/{org}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the Apigee organization. Use the following structure in your request:
           * `organizations/{org}`
           */
          public Check setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Check set(String parameterName, Object value) {
            return (Check) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Drafttoken collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Drafttoken.List request = apigee.drafttoken().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Drafttoken drafttoken() {
        return new Drafttoken();
      }

      /**
       * The "drafttoken" collection of methods.
       */
      public class Drafttoken {

        /**
         * Verifies a draft token for a portal.
         *
         * Create a request for the method "drafttoken.verify".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Verify#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyDraftTokenPayload}
         * @return the request
         */
        public Verify verify(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyDraftTokenPayload content) throws java.io.IOException {
          Verify result = new Verify(parent, content);
          initialize(result);
          return result;
        }

        public class Verify extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/drafttoken/verify";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Verifies a draft token for a portal.
           *
           * Create a request for the method "drafttoken.verify".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Verify#execute()} method to invoke the remote operation. <p> {@link
           * Verify#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyDraftTokenPayload}
           * @since 1.13
           */
          protected Verify(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyDraftTokenPayload content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Verify set$Xgafv(java.lang.String $Xgafv) {
            return (Verify) super.set$Xgafv($Xgafv);
          }

          @Override
          public Verify setAccessToken(java.lang.String accessToken) {
            return (Verify) super.setAccessToken(accessToken);
          }

          @Override
          public Verify setAlt(java.lang.String alt) {
            return (Verify) super.setAlt(alt);
          }

          @Override
          public Verify setCallback(java.lang.String callback) {
            return (Verify) super.setCallback(callback);
          }

          @Override
          public Verify setFields(java.lang.String fields) {
            return (Verify) super.setFields(fields);
          }

          @Override
          public Verify setKey(java.lang.String key) {
            return (Verify) super.setKey(key);
          }

          @Override
          public Verify setOauthToken(java.lang.String oauthToken) {
            return (Verify) super.setOauthToken(oauthToken);
          }

          @Override
          public Verify setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Verify) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Verify setQuotaUser(java.lang.String quotaUser) {
            return (Verify) super.setQuotaUser(quotaUser);
          }

          @Override
          public Verify setUploadType(java.lang.String uploadType) {
            return (Verify) super.setUploadType(uploadType);
          }

          @Override
          public Verify setUploadProtocol(java.lang.String uploadProtocol) {
            return (Verify) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Verify setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Verify set(String parameterName, Object value) {
            return (Verify) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Email collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Email.List request = apigee.email().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Email email() {
        return new Email();
      }

      /**
       * The "email" collection of methods.
       */
      public class Email {

        /**
         * Gets an email template for a portal.
         *
         * Create a request for the method "email.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the email template. Use the following structure in your
        request:
         *        `organizations/{org}/sites/{site}/email/{email}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EmailTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/email/[^/]+$");

          /**
           * Gets an email template for a portal.
           *
           * Create a request for the method "email.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the email template. Use the following structure in your
        request:
         *        `organizations/{org}/sites/{site}/email/{email}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EmailTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/email/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the email template. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/email/{email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the email template. Use the following structure in your request:
         `organizations/{org}/sites/{site}/email/{email}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the email template. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/email/{email}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/email/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Updates an email template for a portal.
         *
         * Create a request for the method "email.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the email template. Use the following structure in your
        request:
         *        `organizations/{org}/sites/{site}/email/{email}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EmailTemplateBody}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EmailTemplateBody content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EmailTemplate> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/email/[^/]+$");

          /**
           * Updates an email template for a portal.
           *
           * Create a request for the method "email.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the email template. Use the following structure in your
        request:
         *        `organizations/{org}/sites/{site}/email/{email}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EmailTemplateBody}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EmailTemplateBody content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1EmailTemplate.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/email/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the email template. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/email/{email}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the email template. Use the following structure in your request:
         `organizations/{org}/sites/{site}/email/{email}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the email template. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/email/{email}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/email/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the File collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.File.List request = apigee.file().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public File file() {
        return new File();
      }

      /**
       * The "file" collection of methods.
       */
      public class File {

        /**
         * Deletes a file from the portal.
         *
         * Create a request for the method "file.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FilenamePayload}
         * @return the request
         */
        public Delete delete(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FilenamePayload content) throws java.io.IOException {
          Delete result = new Delete(parent, content);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/file/delete";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Deletes a file from the portal.
           *
           * Create a request for the method "file.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FilenamePayload}
           * @since 1.13
           */
          protected Delete(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1FilenamePayload content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Delete setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Uploads a file to the portal.
         *
         * Create a request for the method "file.post".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Post#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
         * @return the request
         */
        public Post post(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) throws java.io.IOException {
          Post result = new Post(parent, content);
          initialize(result);
          return result;
        }

        public class Post extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1File> {

          private static final String REST_PATH = "v1/{+parent}/file/post";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Uploads a file to the portal.
           *
           * Create a request for the method "file.post".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Post#execute()} method to invoke the remote operation. <p> {@link
           * Post#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleApiHttpBody}
           * @since 1.13
           */
          protected Post(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleApiHttpBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1File.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Post set$Xgafv(java.lang.String $Xgafv) {
            return (Post) super.set$Xgafv($Xgafv);
          }

          @Override
          public Post setAccessToken(java.lang.String accessToken) {
            return (Post) super.setAccessToken(accessToken);
          }

          @Override
          public Post setAlt(java.lang.String alt) {
            return (Post) super.setAlt(alt);
          }

          @Override
          public Post setCallback(java.lang.String callback) {
            return (Post) super.setCallback(callback);
          }

          @Override
          public Post setFields(java.lang.String fields) {
            return (Post) super.setFields(fields);
          }

          @Override
          public Post setKey(java.lang.String key) {
            return (Post) super.setKey(key);
          }

          @Override
          public Post setOauthToken(java.lang.String oauthToken) {
            return (Post) super.setOauthToken(oauthToken);
          }

          @Override
          public Post setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Post) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Post setQuotaUser(java.lang.String quotaUser) {
            return (Post) super.setQuotaUser(quotaUser);
          }

          @Override
          public Post setUploadType(java.lang.String uploadType) {
            return (Post) super.setUploadType(uploadType);
          }

          @Override
          public Post setUploadProtocol(java.lang.String uploadProtocol) {
            return (Post) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Post setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Post set(String parameterName, Object value) {
            return (Post) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the List collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.List.List request = apigee.list().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public List list() {
          return new List();
        }

        /**
         * The "list" collection of methods.
         */
        public class List {

          /**
           * Lists all files stored on the portal.
           *
           * Create a request for the method "list.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link ListRequest#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
           *        `organizations/{org}/sites/{site}`
           * @return the request
           */
          public ListRequest list(java.lang.String parent) throws java.io.IOException {
            ListRequest result = new ListRequest(parent);
            initialize(result);
            return result;
          }

          public class ListRequest extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListFilesResponse> {

            private static final String REST_PATH = "v1/{+parent}/file/list";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

            /**
             * Lists all files stored on the portal.
             *
             * Create a request for the method "list.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link ListRequest#execute()} method to invoke the remote operation. <p>
             * {@link
             * ListRequest#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
             * must be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the portal. Use the following structure in your request:
           *        `organizations/{org}/sites/{site}`
             * @since 1.13
             */
            protected ListRequest(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListFilesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sites/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public ListRequest set$Xgafv(java.lang.String $Xgafv) {
              return (ListRequest) super.set$Xgafv($Xgafv);
            }

            @Override
            public ListRequest setAccessToken(java.lang.String accessToken) {
              return (ListRequest) super.setAccessToken(accessToken);
            }

            @Override
            public ListRequest setAlt(java.lang.String alt) {
              return (ListRequest) super.setAlt(alt);
            }

            @Override
            public ListRequest setCallback(java.lang.String callback) {
              return (ListRequest) super.setCallback(callback);
            }

            @Override
            public ListRequest setFields(java.lang.String fields) {
              return (ListRequest) super.setFields(fields);
            }

            @Override
            public ListRequest setKey(java.lang.String key) {
              return (ListRequest) super.setKey(key);
            }

            @Override
            public ListRequest setOauthToken(java.lang.String oauthToken) {
              return (ListRequest) super.setOauthToken(oauthToken);
            }

            @Override
            public ListRequest setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (ListRequest) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public ListRequest setQuotaUser(java.lang.String quotaUser) {
              return (ListRequest) super.setQuotaUser(quotaUser);
            }

            @Override
            public ListRequest setUploadType(java.lang.String uploadType) {
              return (ListRequest) super.setUploadType(uploadType);
            }

            @Override
            public ListRequest setUploadProtocol(java.lang.String uploadProtocol) {
              return (ListRequest) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the portal. Use the following structure in your request:
             * `organizations/{org}/sites/{site}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the portal. Use the following structure in your request:
           `organizations/{org}/sites/{site}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the portal. Use the following structure in your request:
             * `organizations/{org}/sites/{site}`
             */
            public ListRequest setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sites/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public ListRequest set(String parameterName, Object value) {
              return (ListRequest) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Menuitems collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Menuitems.List request = apigee.menuitems().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Menuitems menuitems() {
        return new Menuitems();
      }

      /**
       * The "menuitems" collection of methods.
       */
      public class Menuitems {

        /**
         * Creates a menu item.
         *
         * Create a request for the method "menuitems.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItemData}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItemData content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItem> {

          private static final String REST_PATH = "v1/{+parent}/menuitems";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Creates a menu item.
           *
           * Create a request for the method "menuitems.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItemData}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItemData content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItem.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a menu item.
         *
         * Create a request for the method "menuitems.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the menu item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/menuitems/{menuitem}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");

          /**
           * Deletes a menu item.
           *
           * Create a request for the method "menuitems.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the menu item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the menu item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the menu item. Use the following structure in your request:
         `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the menu item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Lists all menu items.
         *
         * Create a request for the method "menuitems.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListMenuItemsResponse> {

          private static final String REST_PATH = "v1/{+parent}/menuitems";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Lists all menu items.
           *
           * Create a request for the method "menuitems.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListMenuItemsResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Lists the menu items for a menu type.
         *
         * Create a request for the method "menuitems.listItemsByType".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link ListItemsByType#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the menu item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/menuitems/{menuitem}`
         * @return the request
         */
        public ListItemsByType listItemsByType(java.lang.String name) throws java.io.IOException {
          ListItemsByType result = new ListItemsByType(name);
          initialize(result);
          return result;
        }

        public class ListItemsByType extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListMenuItemsResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");

          /**
           * Lists the menu items for a menu type.
           *
           * Create a request for the method "menuitems.listItemsByType".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link ListItemsByType#execute()} method to invoke the remote operation.
           * <p> {@link ListItemsByType#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
           * lientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param name Required. Name of the menu item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           * @since 1.13
           */
          protected ListItemsByType(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListMenuItemsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListItemsByType set$Xgafv(java.lang.String $Xgafv) {
            return (ListItemsByType) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListItemsByType setAccessToken(java.lang.String accessToken) {
            return (ListItemsByType) super.setAccessToken(accessToken);
          }

          @Override
          public ListItemsByType setAlt(java.lang.String alt) {
            return (ListItemsByType) super.setAlt(alt);
          }

          @Override
          public ListItemsByType setCallback(java.lang.String callback) {
            return (ListItemsByType) super.setCallback(callback);
          }

          @Override
          public ListItemsByType setFields(java.lang.String fields) {
            return (ListItemsByType) super.setFields(fields);
          }

          @Override
          public ListItemsByType setKey(java.lang.String key) {
            return (ListItemsByType) super.setKey(key);
          }

          @Override
          public ListItemsByType setOauthToken(java.lang.String oauthToken) {
            return (ListItemsByType) super.setOauthToken(oauthToken);
          }

          @Override
          public ListItemsByType setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListItemsByType) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListItemsByType setQuotaUser(java.lang.String quotaUser) {
            return (ListItemsByType) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListItemsByType setUploadType(java.lang.String uploadType) {
            return (ListItemsByType) super.setUploadType(uploadType);
          }

          @Override
          public ListItemsByType setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListItemsByType) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the menu item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the menu item. Use the following structure in your request:
         `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the menu item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           */
          public ListItemsByType setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public ListItemsByType set(String parameterName, Object value) {
            return (ListItemsByType) super.set(parameterName, value);
          }
        }
        /**
         * Publishes all menu items.
         *
         * Create a request for the method "menuitems.publish".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Publish#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/menuitems`
         * @return the request
         */
        public Publish publish(java.lang.String parent) throws java.io.IOException {
          Publish result = new Publish(parent);
          initialize(result);
          return result;
        }

        public class Publish extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/publish";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/menuitems$");

          /**
           * Publishes all menu items.
           *
           * Create a request for the method "menuitems.publish".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Publish#execute()} method to invoke the remote operation. <p>
           * {@link
           * Publish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/menuitems`
           * @since 1.13
           */
          protected Publish(java.lang.String parent) {
            super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menuitems$");
            }
          }

          @Override
          public Publish set$Xgafv(java.lang.String $Xgafv) {
            return (Publish) super.set$Xgafv($Xgafv);
          }

          @Override
          public Publish setAccessToken(java.lang.String accessToken) {
            return (Publish) super.setAccessToken(accessToken);
          }

          @Override
          public Publish setAlt(java.lang.String alt) {
            return (Publish) super.setAlt(alt);
          }

          @Override
          public Publish setCallback(java.lang.String callback) {
            return (Publish) super.setCallback(callback);
          }

          @Override
          public Publish setFields(java.lang.String fields) {
            return (Publish) super.setFields(fields);
          }

          @Override
          public Publish setKey(java.lang.String key) {
            return (Publish) super.setKey(key);
          }

          @Override
          public Publish setOauthToken(java.lang.String oauthToken) {
            return (Publish) super.setOauthToken(oauthToken);
          }

          @Override
          public Publish setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Publish) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Publish setQuotaUser(java.lang.String quotaUser) {
            return (Publish) super.setQuotaUser(quotaUser);
          }

          @Override
          public Publish setUploadType(java.lang.String uploadType) {
            return (Publish) super.setUploadType(uploadType);
          }

          @Override
          public Publish setUploadProtocol(java.lang.String uploadProtocol) {
            return (Publish) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menuitems`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Use the following structure in your request: `organizations/{org}/sites/{site}/menuitems`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menuitems`
           */
          public Publish setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menuitems$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Publish set(String parameterName, Object value) {
            return (Publish) super.set(parameterName, value);
          }
        }
        /**
         * Updates a menu item.
         *
         * Create a request for the method "menuitems.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the menu item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/menuitems/{menuitem}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItemData}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItemData content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItem> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");

          /**
           * Updates a menu item.
           *
           * Create a request for the method "menuitems.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the menu item. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItemData}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItemData content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuItem.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the menu item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the menu item. Use the following structure in your request:
         `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the menu item. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Save collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Save.List request = apigee.save().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Save save() {
          return new Save();
        }

        /**
         * The "save" collection of methods.
         */
        public class Save {

          /**
           * Rearranges the order of menu items.
           *
           * Create a request for the method "save.updatePriorities".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link UpdatePriorities#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Use the following structure in your request:
           *        `organizations/{org}/sites/{site}/menuitems`
           * @param content the {@link com.google.api.services.apigee.v1.model.Apigee.Organizations.Sites.Menuitems.Save.UpdatePriorities.UpdatePrioritiesRequestContent}
           * @return the request
           */
          public UpdatePriorities updatePriorities(java.lang.String parent, com.google.api.services.apigee.v1.model.Apigee.Organizations.Sites.Menuitems.Save.UpdatePriorities.UpdatePrioritiesRequestContent content) throws java.io.IOException {
            UpdatePriorities result = new UpdatePriorities(parent, content);
            initialize(result);
            return result;
          }

          public class UpdatePriorities extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

            private static final String REST_PATH = "v1/{+parent}/save/priorities";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/menuitems$");

            /**
             * Rearranges the order of menu items.
             *
             * Create a request for the method "save.updatePriorities".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link UpdatePriorities#execute()} method to invoke the remote operation.
             * <p> {@link UpdatePriorities#initialize(com.google.api.client.googleapis.services.AbstractGoogle
             * ClientRequest)} must be called to initialize this instance immediately after invoking the
             * constructor. </p>
             *
             * @param parent Required. Use the following structure in your request:
           *        `organizations/{org}/sites/{site}/menuitems`
             * @param content the {@link com.google.api.services.apigee.v1.model.Apigee.Organizations.Sites.Menuitems.Save.UpdatePriorities.UpdatePrioritiesRequestContent}
             * @since 1.13
             */
            protected UpdatePriorities(java.lang.String parent, com.google.api.services.apigee.v1.model.Apigee.Organizations.Sites.Menuitems.Save.UpdatePriorities.UpdatePrioritiesRequestContent content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sites/[^/]+/menuitems$");
              }
            }

            @Override
            public UpdatePriorities set$Xgafv(java.lang.String $Xgafv) {
              return (UpdatePriorities) super.set$Xgafv($Xgafv);
            }

            @Override
            public UpdatePriorities setAccessToken(java.lang.String accessToken) {
              return (UpdatePriorities) super.setAccessToken(accessToken);
            }

            @Override
            public UpdatePriorities setAlt(java.lang.String alt) {
              return (UpdatePriorities) super.setAlt(alt);
            }

            @Override
            public UpdatePriorities setCallback(java.lang.String callback) {
              return (UpdatePriorities) super.setCallback(callback);
            }

            @Override
            public UpdatePriorities setFields(java.lang.String fields) {
              return (UpdatePriorities) super.setFields(fields);
            }

            @Override
            public UpdatePriorities setKey(java.lang.String key) {
              return (UpdatePriorities) super.setKey(key);
            }

            @Override
            public UpdatePriorities setOauthToken(java.lang.String oauthToken) {
              return (UpdatePriorities) super.setOauthToken(oauthToken);
            }

            @Override
            public UpdatePriorities setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (UpdatePriorities) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public UpdatePriorities setQuotaUser(java.lang.String quotaUser) {
              return (UpdatePriorities) super.setQuotaUser(quotaUser);
            }

            @Override
            public UpdatePriorities setUploadType(java.lang.String uploadType) {
              return (UpdatePriorities) super.setUploadType(uploadType);
            }

            @Override
            public UpdatePriorities setUploadProtocol(java.lang.String uploadProtocol) {
              return (UpdatePriorities) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Use the following structure in your request:
             * `organizations/{org}/sites/{site}/menuitems`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Use the following structure in your request: `organizations/{org}/sites/{site}/menuitems`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Use the following structure in your request:
             * `organizations/{org}/sites/{site}/menuitems`
             */
            public UpdatePriorities setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sites/[^/]+/menuitems$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public UpdatePriorities set(String parameterName, Object value) {
              return (UpdatePriorities) super.set(parameterName, value);
            }
          }

        }
        /**
         * An accessor for creating requests from the Toggle collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Toggle.List request = apigee.toggle().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Toggle toggle() {
          return new Toggle();
        }

        /**
         * The "toggle" collection of methods.
         */
        public class Toggle {

          /**
           * Toggles the nesting of a menu item.
           *
           * Create a request for the method "toggle.nested".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link Nested#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the menu item. Use the following structure in your
          request:
           *        `organizations/{org}/sites/{site}/menuitems/{menuitem}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NestedPayload}
           * @return the request
           */
          public Nested nested(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NestedPayload content) throws java.io.IOException {
            Nested result = new Nested(parent, content);
            initialize(result);
            return result;
          }

          public class Nested extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

            private static final String REST_PATH = "v1/{+parent}/toggle/nested";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");

            /**
             * Toggles the nesting of a menu item.
             *
             * Create a request for the method "toggle.nested".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link Nested#execute()} method to invoke the remote operation. <p> {@link
             * Nested#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
             * be called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the menu item. Use the following structure in your
          request:
           *        `organizations/{org}/sites/{site}/menuitems/{menuitem}`
             * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NestedPayload}
             * @since 1.13
             */
            protected Nested(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1NestedPayload content) {
              super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");
              }
            }

            @Override
            public Nested set$Xgafv(java.lang.String $Xgafv) {
              return (Nested) super.set$Xgafv($Xgafv);
            }

            @Override
            public Nested setAccessToken(java.lang.String accessToken) {
              return (Nested) super.setAccessToken(accessToken);
            }

            @Override
            public Nested setAlt(java.lang.String alt) {
              return (Nested) super.setAlt(alt);
            }

            @Override
            public Nested setCallback(java.lang.String callback) {
              return (Nested) super.setCallback(callback);
            }

            @Override
            public Nested setFields(java.lang.String fields) {
              return (Nested) super.setFields(fields);
            }

            @Override
            public Nested setKey(java.lang.String key) {
              return (Nested) super.setKey(key);
            }

            @Override
            public Nested setOauthToken(java.lang.String oauthToken) {
              return (Nested) super.setOauthToken(oauthToken);
            }

            @Override
            public Nested setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (Nested) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public Nested setQuotaUser(java.lang.String quotaUser) {
              return (Nested) super.setQuotaUser(quotaUser);
            }

            @Override
            public Nested setUploadType(java.lang.String uploadType) {
              return (Nested) super.setUploadType(uploadType);
            }

            @Override
            public Nested setUploadProtocol(java.lang.String uploadProtocol) {
              return (Nested) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the menu item. Use the following structure in your request:
             * `organizations/{org}/sites/{site}/menuitems/{menuitem}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the menu item. Use the following structure in your request:
           `organizations/{org}/sites/{site}/menuitems/{menuitem}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the menu item. Use the following structure in your request:
             * `organizations/{org}/sites/{site}/menuitems/{menuitem}`
             */
            public Nested setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sites/[^/]+/menuitems/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public Nested set(String parameterName, Object value) {
              return (Nested) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the Menutypes collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Menutypes.List request = apigee.menutypes().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Menutypes menutypes() {
        return new Menutypes();
      }

      /**
       * The "menutypes" collection of methods.
       */
      public class Menutypes {

        /**
         * Creates a menu type.
         *
         * Create a request for the method "menutypes.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuTypeData}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuTypeData content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuType> {

          private static final String REST_PATH = "v1/{+parent}/menutypes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Creates a menu type.
           *
           * Create a request for the method "menutypes.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuTypeData}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuTypeData content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1MenuType.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a menu type.
         *
         * Create a request for the method "menutypes.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the menu type. Use the following structure in your
        request:
         *        `organizations/{org}/sites/{site}/menutypes/{menutype}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/menutypes/[^/]+$");

          /**
           * Deletes a menu type.
           *
           * Create a request for the method "menutypes.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the menu type. Use the following structure in your
        request:
         *        `organizations/{org}/sites/{site}/menutypes/{menutype}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menutypes/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the menu type. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menutypes/{menutype}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the menu type. Use the following structure in your request:
         `organizations/{org}/sites/{site}/menutypes/{menutype}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the menu type. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/menutypes/{menutype}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/menutypes/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Lists all menu types.
         *
         * Create a request for the method "menutypes.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListMenuTypesResponse> {

          private static final String REST_PATH = "v1/{+parent}/menutypes";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Lists all menu types.
           *
           * Create a request for the method "menutypes.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListMenuTypesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Pages collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Pages.List request = apigee.pages().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Pages pages() {
        return new Pages();
      }

      /**
       * The "pages" collection of methods.
       */
      public class Pages {

        /**
         * Updates the draft content of a page on the portal.
         *
         * Create a request for the method "pages.content".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Content#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageContentPayload}
         * @return the request
         */
        public Content content(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageContentPayload content) throws java.io.IOException {
          Content result = new Content(parent, content);
          initialize(result);
          return result;
        }

        public class Content extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/content";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");

          /**
           * Updates the draft content of a page on the portal.
           *
           * Create a request for the method "pages.content".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Content#execute()} method to invoke the remote operation. <p>
           * {@link
           * Content#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageContentPayload}
           * @since 1.13
           */
          protected Content(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageContentPayload content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
          }

          @Override
          public Content set$Xgafv(java.lang.String $Xgafv) {
            return (Content) super.set$Xgafv($Xgafv);
          }

          @Override
          public Content setAccessToken(java.lang.String accessToken) {
            return (Content) super.setAccessToken(accessToken);
          }

          @Override
          public Content setAlt(java.lang.String alt) {
            return (Content) super.setAlt(alt);
          }

          @Override
          public Content setCallback(java.lang.String callback) {
            return (Content) super.setCallback(callback);
          }

          @Override
          public Content setFields(java.lang.String fields) {
            return (Content) super.setFields(fields);
          }

          @Override
          public Content setKey(java.lang.String key) {
            return (Content) super.setKey(key);
          }

          @Override
          public Content setOauthToken(java.lang.String oauthToken) {
            return (Content) super.setOauthToken(oauthToken);
          }

          @Override
          public Content setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Content) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Content setQuotaUser(java.lang.String quotaUser) {
            return (Content) super.setQuotaUser(quotaUser);
          }

          @Override
          public Content setUploadType(java.lang.String uploadType) {
            return (Content) super.setUploadType(uploadType);
          }

          @Override
          public Content setUploadProtocol(java.lang.String uploadProtocol) {
            return (Content) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the page. Use the following structure in your request:
         `organizations/{org}/sites/{site}/pages/{page}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          public Content setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Content set(String parameterName, Object value) {
            return (Content) super.set(parameterName, value);
          }
        }
        /**
         * Creates a new page on the portal.
         *
         * Create a request for the method "pages.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageBody}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageBody content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Page> {

          private static final String REST_PATH = "v1/{+parent}/pages";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Creates a new page on the portal.
           *
           * Create a request for the method "pages.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageBody}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageBody content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Page.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Deletes a page from the portal.
         *
         * Create a request for the method "pages.delete".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Delete#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
         * @return the request
         */
        public Delete delete(java.lang.String name) throws java.io.IOException {
          Delete result = new Delete(name);
          initialize(result);
          return result;
        }

        public class Delete extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");

          /**
           * Deletes a page from the portal.
           *
           * Create a request for the method "pages.delete".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Delete#execute()} method to invoke the remote operation. <p> {@link
           * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
           * @since 1.13
           */
          protected Delete(java.lang.String name) {
            super(Apigee.this, "DELETE", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
          }

          @Override
          public Delete set$Xgafv(java.lang.String $Xgafv) {
            return (Delete) super.set$Xgafv($Xgafv);
          }

          @Override
          public Delete setAccessToken(java.lang.String accessToken) {
            return (Delete) super.setAccessToken(accessToken);
          }

          @Override
          public Delete setAlt(java.lang.String alt) {
            return (Delete) super.setAlt(alt);
          }

          @Override
          public Delete setCallback(java.lang.String callback) {
            return (Delete) super.setCallback(callback);
          }

          @Override
          public Delete setFields(java.lang.String fields) {
            return (Delete) super.setFields(fields);
          }

          @Override
          public Delete setKey(java.lang.String key) {
            return (Delete) super.setKey(key);
          }

          @Override
          public Delete setOauthToken(java.lang.String oauthToken) {
            return (Delete) super.setOauthToken(oauthToken);
          }

          @Override
          public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Delete) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Delete setQuotaUser(java.lang.String quotaUser) {
            return (Delete) super.setQuotaUser(quotaUser);
          }

          @Override
          public Delete setUploadType(java.lang.String uploadType) {
            return (Delete) super.setUploadType(uploadType);
          }

          @Override
          public Delete setUploadProtocol(java.lang.String uploadProtocol) {
            return (Delete) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the page. Use the following structure in your request:
         `organizations/{org}/sites/{site}/pages/{page}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          public Delete setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Delete set(String parameterName, Object value) {
            return (Delete) super.set(parameterName, value);
          }
        }
        /**
         * Gets a page on the portal.
         *
         * Create a request for the method "pages.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Page> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");

          /**
           * Gets a page on the portal.
           *
           * Create a request for the method "pages.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Page.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the page. Use the following structure in your request:
         `organizations/{org}/sites/{site}/pages/{page}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the pages on the portal.
         *
         * Create a request for the method "pages.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListPagesResponse> {

          private static final String REST_PATH = "v1/{+parent}/pages";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Lists the pages on the portal.
           *
           * Create a request for the method "pages.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListPagesResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Publishes a page on the portal.
         *
         * Create a request for the method "pages.publish".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Publish#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
         * @return the request
         */
        public Publish publish(java.lang.String parent) throws java.io.IOException {
          Publish result = new Publish(parent);
          initialize(result);
          return result;
        }

        public class Publish extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/publish";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");

          /**
           * Publishes a page on the portal.
           *
           * Create a request for the method "pages.publish".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Publish#execute()} method to invoke the remote operation. <p>
           * {@link
           * Publish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
           * @since 1.13
           */
          protected Publish(java.lang.String parent) {
            super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
          }

          @Override
          public Publish set$Xgafv(java.lang.String $Xgafv) {
            return (Publish) super.set$Xgafv($Xgafv);
          }

          @Override
          public Publish setAccessToken(java.lang.String accessToken) {
            return (Publish) super.setAccessToken(accessToken);
          }

          @Override
          public Publish setAlt(java.lang.String alt) {
            return (Publish) super.setAlt(alt);
          }

          @Override
          public Publish setCallback(java.lang.String callback) {
            return (Publish) super.setCallback(callback);
          }

          @Override
          public Publish setFields(java.lang.String fields) {
            return (Publish) super.setFields(fields);
          }

          @Override
          public Publish setKey(java.lang.String key) {
            return (Publish) super.setKey(key);
          }

          @Override
          public Publish setOauthToken(java.lang.String oauthToken) {
            return (Publish) super.setOauthToken(oauthToken);
          }

          @Override
          public Publish setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Publish) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Publish setQuotaUser(java.lang.String quotaUser) {
            return (Publish) super.setQuotaUser(quotaUser);
          }

          @Override
          public Publish setUploadType(java.lang.String uploadType) {
            return (Publish) super.setUploadType(uploadType);
          }

          @Override
          public Publish setUploadProtocol(java.lang.String uploadProtocol) {
            return (Publish) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the page. Use the following structure in your request:
         `organizations/{org}/sites/{site}/pages/{page}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          public Publish setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Publish set(String parameterName, Object value) {
            return (Publish) super.set(parameterName, value);
          }
        }
        /**
         * Unpublishes a page on the portal.
         *
         * Create a request for the method "pages.unpublish".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Unpublish#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
         * @return the request
         */
        public Unpublish unpublish(java.lang.String parent) throws java.io.IOException {
          Unpublish result = new Unpublish(parent);
          initialize(result);
          return result;
        }

        public class Unpublish extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/unpublish";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");

          /**
           * Unpublishes a page on the portal.
           *
           * Create a request for the method "pages.unpublish".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Unpublish#execute()} method to invoke the remote operation. <p>
           * {@link
           * Unpublish#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
           * @since 1.13
           */
          protected Unpublish(java.lang.String parent) {
            super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
          }

          @Override
          public Unpublish set$Xgafv(java.lang.String $Xgafv) {
            return (Unpublish) super.set$Xgafv($Xgafv);
          }

          @Override
          public Unpublish setAccessToken(java.lang.String accessToken) {
            return (Unpublish) super.setAccessToken(accessToken);
          }

          @Override
          public Unpublish setAlt(java.lang.String alt) {
            return (Unpublish) super.setAlt(alt);
          }

          @Override
          public Unpublish setCallback(java.lang.String callback) {
            return (Unpublish) super.setCallback(callback);
          }

          @Override
          public Unpublish setFields(java.lang.String fields) {
            return (Unpublish) super.setFields(fields);
          }

          @Override
          public Unpublish setKey(java.lang.String key) {
            return (Unpublish) super.setKey(key);
          }

          @Override
          public Unpublish setOauthToken(java.lang.String oauthToken) {
            return (Unpublish) super.setOauthToken(oauthToken);
          }

          @Override
          public Unpublish setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Unpublish) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Unpublish setQuotaUser(java.lang.String quotaUser) {
            return (Unpublish) super.setQuotaUser(quotaUser);
          }

          @Override
          public Unpublish setUploadType(java.lang.String uploadType) {
            return (Unpublish) super.setUploadType(uploadType);
          }

          @Override
          public Unpublish setUploadProtocol(java.lang.String uploadProtocol) {
            return (Unpublish) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the page. Use the following structure in your request:
         `organizations/{org}/sites/{site}/pages/{page}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          public Unpublish setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Unpublish set(String parameterName, Object value) {
            return (Unpublish) super.set(parameterName, value);
          }
        }
        /**
         * Updates a page on the portal.
         *
         * Create a request for the method "pages.update".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageBody}
         * @return the request
         */
        public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageBody content) throws java.io.IOException {
          Update result = new Update(name, content);
          initialize(result);
          return result;
        }

        public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Page> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");

          /**
           * Updates a page on the portal.
           *
           * Create a request for the method "pages.update".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
           * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the page. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/pages/{page}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageBody}
           * @since 1.13
           */
          protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1PageBody content) {
            super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Page.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
          }

          @Override
          public Update set$Xgafv(java.lang.String $Xgafv) {
            return (Update) super.set$Xgafv($Xgafv);
          }

          @Override
          public Update setAccessToken(java.lang.String accessToken) {
            return (Update) super.setAccessToken(accessToken);
          }

          @Override
          public Update setAlt(java.lang.String alt) {
            return (Update) super.setAlt(alt);
          }

          @Override
          public Update setCallback(java.lang.String callback) {
            return (Update) super.setCallback(callback);
          }

          @Override
          public Update setFields(java.lang.String fields) {
            return (Update) super.setFields(fields);
          }

          @Override
          public Update setKey(java.lang.String key) {
            return (Update) super.setKey(key);
          }

          @Override
          public Update setOauthToken(java.lang.String oauthToken) {
            return (Update) super.setOauthToken(oauthToken);
          }

          @Override
          public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Update) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Update setQuotaUser(java.lang.String quotaUser) {
            return (Update) super.setQuotaUser(quotaUser);
          }

          @Override
          public Update setUploadType(java.lang.String uploadType) {
            return (Update) super.setUploadType(uploadType);
          }

          @Override
          public Update setUploadProtocol(java.lang.String uploadProtocol) {
            return (Update) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the page. Use the following structure in your request:
         `organizations/{org}/sites/{site}/pages/{page}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the page. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/pages/{page}`
           */
          public Update setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Update set(String parameterName, Object value) {
            return (Update) super.set(parameterName, value);
          }
        }

        /**
         * An accessor for creating requests from the Menutypes collection.
         *
         * <p>The typical use is:</p>
         * <pre>
         *   {@code Apigee apigee = new Apigee(...);}
         *   {@code Apigee.Menutypes.List request = apigee.menutypes().list(parameters ...)}
         * </pre>
         *
         * @return the resource collection
         */
        public Menutypes menutypes() {
          return new Menutypes();
        }

        /**
         * The "menutypes" collection of methods.
         */
        public class Menutypes {

          /**
           * Lists the menu types that reference a specific page.
           *
           * Create a request for the method "menutypes.list".
           *
           * This request holds the parameters needed by the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation.
           *
           * @param parent Required. Name of the page. Use the following structure in your request:
           *        `organizations/{org}/sites/{site}/pages/{page}`
           * @return the request
           */
          public List list(java.lang.String parent) throws java.io.IOException {
            List result = new List(parent);
            initialize(result);
            return result;
          }

          public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListMenuTypesResponse> {

            private static final String REST_PATH = "v1/{+parent}/menutypes";

            private final java.util.regex.Pattern PARENT_PATTERN =
                java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");

            /**
             * Lists the menu types that reference a specific page.
             *
             * Create a request for the method "menutypes.list".
             *
             * This request holds the parameters needed by the the apigee server.  After setting any optional
             * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
             * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
             * called to initialize this instance immediately after invoking the constructor. </p>
             *
             * @param parent Required. Name of the page. Use the following structure in your request:
           *        `organizations/{org}/sites/{site}/pages/{page}`
             * @since 1.13
             */
            protected List(java.lang.String parent) {
              super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListMenuTypesResponse.class);
              this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
              }
            }

            @Override
            public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
              return super.executeUsingHead();
            }

            @Override
            public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
              return super.buildHttpRequestUsingHead();
            }

            @Override
            public List set$Xgafv(java.lang.String $Xgafv) {
              return (List) super.set$Xgafv($Xgafv);
            }

            @Override
            public List setAccessToken(java.lang.String accessToken) {
              return (List) super.setAccessToken(accessToken);
            }

            @Override
            public List setAlt(java.lang.String alt) {
              return (List) super.setAlt(alt);
            }

            @Override
            public List setCallback(java.lang.String callback) {
              return (List) super.setCallback(callback);
            }

            @Override
            public List setFields(java.lang.String fields) {
              return (List) super.setFields(fields);
            }

            @Override
            public List setKey(java.lang.String key) {
              return (List) super.setKey(key);
            }

            @Override
            public List setOauthToken(java.lang.String oauthToken) {
              return (List) super.setOauthToken(oauthToken);
            }

            @Override
            public List setPrettyPrint(java.lang.Boolean prettyPrint) {
              return (List) super.setPrettyPrint(prettyPrint);
            }

            @Override
            public List setQuotaUser(java.lang.String quotaUser) {
              return (List) super.setQuotaUser(quotaUser);
            }

            @Override
            public List setUploadType(java.lang.String uploadType) {
              return (List) super.setUploadType(uploadType);
            }

            @Override
            public List setUploadProtocol(java.lang.String uploadProtocol) {
              return (List) super.setUploadProtocol(uploadProtocol);
            }

            /**
             * Required. Name of the page. Use the following structure in your request:
             * `organizations/{org}/sites/{site}/pages/{page}`
             */
            @com.google.api.client.util.Key
            private java.lang.String parent;

            /** Required. Name of the page. Use the following structure in your request:
           `organizations/{org}/sites/{site}/pages/{page}`
             */
            public java.lang.String getParent() {
              return parent;
            }

            /**
             * Required. Name of the page. Use the following structure in your request:
             * `organizations/{org}/sites/{site}/pages/{page}`
             */
            public List setParent(java.lang.String parent) {
              if (!getSuppressPatternChecks()) {
                com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                    "Parameter parent must conform to the pattern " +
                    "^organizations/[^/]+/sites/[^/]+/pages/[^/]+$");
              }
              this.parent = parent;
              return this;
            }

            @Override
            public List set(String parameterName, Object value) {
              return (List) super.set(parameterName, value);
            }
          }

        }
      }
      /**
       * An accessor for creating requests from the ResourceEntitlements collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.ResourceEntitlements.List request = apigee.resourceEntitlements().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public ResourceEntitlements resourceEntitlements() {
        return new ResourceEntitlements();
      }

      /**
       * The "resource-entitlements" collection of methods.
       */
      public class ResourceEntitlements {

        /**
         * Lists the resource audience entitlements.
         *
         * Create a request for the method "resource-entitlements.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the resource. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceEntitlement> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/resource-entitlements/[^/]+/[^/]+$");

          /**
           * Lists the resource audience entitlements.
           *
           * Create a request for the method "resource-entitlements.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceEntitlement.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/resource-entitlements/[^/]+/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the resource. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource. Use the following structure in your request:
         `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the resource. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/resource-entitlements/[^/]+/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Updates audience entitlements for a resource. Not a recognized rest pattern
         *
         * Create a request for the method "resource-entitlements.updateResourceEntitlement".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateResourceEntitlement#execute()} method to invoke the remote
         * operation.
         *
         * @param name Required. Name of the resource. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceEntitlementData}
         * @return the request
         */
        public UpdateResourceEntitlement updateResourceEntitlement(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceEntitlementData content) throws java.io.IOException {
          UpdateResourceEntitlement result = new UpdateResourceEntitlement(name, content);
          initialize(result);
          return result;
        }

        public class UpdateResourceEntitlement extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceEntitlement> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/resource-entitlements/[^/]+/[^/]+$");

          /**
           * Updates audience entitlements for a resource. Not a recognized rest pattern
           *
           * Create a request for the method "resource-entitlements.updateResourceEntitlement".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateResourceEntitlement#execute()} method to invoke the remote
           * operation. <p> {@link UpdateResourceEntitlement#initialize(com.google.api.client.googleapis.ser
           * vices.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
           * after invoking the constructor. </p>
           *
           * @param name Required. Name of the resource. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceEntitlementData}
           * @since 1.13
           */
          protected UpdateResourceEntitlement(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceEntitlementData content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ResourceEntitlement.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/resource-entitlements/[^/]+/[^/]+$");
            }
          }

          @Override
          public UpdateResourceEntitlement set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateResourceEntitlement) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateResourceEntitlement setAccessToken(java.lang.String accessToken) {
            return (UpdateResourceEntitlement) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateResourceEntitlement setAlt(java.lang.String alt) {
            return (UpdateResourceEntitlement) super.setAlt(alt);
          }

          @Override
          public UpdateResourceEntitlement setCallback(java.lang.String callback) {
            return (UpdateResourceEntitlement) super.setCallback(callback);
          }

          @Override
          public UpdateResourceEntitlement setFields(java.lang.String fields) {
            return (UpdateResourceEntitlement) super.setFields(fields);
          }

          @Override
          public UpdateResourceEntitlement setKey(java.lang.String key) {
            return (UpdateResourceEntitlement) super.setKey(key);
          }

          @Override
          public UpdateResourceEntitlement setOauthToken(java.lang.String oauthToken) {
            return (UpdateResourceEntitlement) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateResourceEntitlement setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateResourceEntitlement) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateResourceEntitlement setQuotaUser(java.lang.String quotaUser) {
            return (UpdateResourceEntitlement) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateResourceEntitlement setUploadType(java.lang.String uploadType) {
            return (UpdateResourceEntitlement) super.setUploadType(uploadType);
          }

          @Override
          public UpdateResourceEntitlement setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateResourceEntitlement) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the resource. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the resource. Use the following structure in your request:
         `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the resource. Use the following structure in your request:
           * `organizations/{org}/sites/{site}/resource-entitlements/{resourceType}/{resource}`
           */
          public UpdateResourceEntitlement setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/resource-entitlements/[^/]+/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public UpdateResourceEntitlement set(String parameterName, Object value) {
            return (UpdateResourceEntitlement) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Site collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Site.List request = apigee.site().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Site site() {
        return new Site();
      }

      /**
       * The "site" collection of methods.
       */
      public class Site {

        /**
         * Updates the custom analytics script for a portal.
         *
         * Create a request for the method "site.analytics".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Analytics#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AnalyticsUpdatePayload}
         * @return the request
         */
        public Analytics analytics(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AnalyticsUpdatePayload content) throws java.io.IOException {
          Analytics result = new Analytics(parent, content);
          initialize(result);
          return result;
        }

        public class Analytics extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/site/analytics";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Updates the custom analytics script for a portal.
           *
           * Create a request for the method "site.analytics".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Analytics#execute()} method to invoke the remote operation. <p>
           * {@link
           * Analytics#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AnalyticsUpdatePayload}
           * @since 1.13
           */
          protected Analytics(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1AnalyticsUpdatePayload content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Analytics set$Xgafv(java.lang.String $Xgafv) {
            return (Analytics) super.set$Xgafv($Xgafv);
          }

          @Override
          public Analytics setAccessToken(java.lang.String accessToken) {
            return (Analytics) super.setAccessToken(accessToken);
          }

          @Override
          public Analytics setAlt(java.lang.String alt) {
            return (Analytics) super.setAlt(alt);
          }

          @Override
          public Analytics setCallback(java.lang.String callback) {
            return (Analytics) super.setCallback(callback);
          }

          @Override
          public Analytics setFields(java.lang.String fields) {
            return (Analytics) super.setFields(fields);
          }

          @Override
          public Analytics setKey(java.lang.String key) {
            return (Analytics) super.setKey(key);
          }

          @Override
          public Analytics setOauthToken(java.lang.String oauthToken) {
            return (Analytics) super.setOauthToken(oauthToken);
          }

          @Override
          public Analytics setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Analytics) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Analytics setQuotaUser(java.lang.String quotaUser) {
            return (Analytics) super.setQuotaUser(quotaUser);
          }

          @Override
          public Analytics setUploadType(java.lang.String uploadType) {
            return (Analytics) super.setUploadType(uploadType);
          }

          @Override
          public Analytics setUploadProtocol(java.lang.String uploadProtocol) {
            return (Analytics) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Analytics setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Analytics set(String parameterName, Object value) {
            return (Analytics) super.set(parameterName, value);
          }
        }
        /**
         * Restricts portal registration by identifying the individual email addresses or email domains that
         * can create accounts on the portal.
         *
         * Create a request for the method "site.approvedEmails".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link ApprovedEmails#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApprovedEmailsPayload}
         * @return the request
         */
        public ApprovedEmails approvedEmails(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApprovedEmailsPayload content) throws java.io.IOException {
          ApprovedEmails result = new ApprovedEmails(parent, content);
          initialize(result);
          return result;
        }

        public class ApprovedEmails extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/site/approvedEmails";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Restricts portal registration by identifying the individual email addresses or email domains
           * that can create accounts on the portal.
           *
           * Create a request for the method "site.approvedEmails".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link ApprovedEmails#execute()} method to invoke the remote operation.
           * <p> {@link ApprovedEmails#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
           * ientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApprovedEmailsPayload}
           * @since 1.13
           */
          protected ApprovedEmails(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApprovedEmailsPayload content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public ApprovedEmails set$Xgafv(java.lang.String $Xgafv) {
            return (ApprovedEmails) super.set$Xgafv($Xgafv);
          }

          @Override
          public ApprovedEmails setAccessToken(java.lang.String accessToken) {
            return (ApprovedEmails) super.setAccessToken(accessToken);
          }

          @Override
          public ApprovedEmails setAlt(java.lang.String alt) {
            return (ApprovedEmails) super.setAlt(alt);
          }

          @Override
          public ApprovedEmails setCallback(java.lang.String callback) {
            return (ApprovedEmails) super.setCallback(callback);
          }

          @Override
          public ApprovedEmails setFields(java.lang.String fields) {
            return (ApprovedEmails) super.setFields(fields);
          }

          @Override
          public ApprovedEmails setKey(java.lang.String key) {
            return (ApprovedEmails) super.setKey(key);
          }

          @Override
          public ApprovedEmails setOauthToken(java.lang.String oauthToken) {
            return (ApprovedEmails) super.setOauthToken(oauthToken);
          }

          @Override
          public ApprovedEmails setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ApprovedEmails) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ApprovedEmails setQuotaUser(java.lang.String quotaUser) {
            return (ApprovedEmails) super.setQuotaUser(quotaUser);
          }

          @Override
          public ApprovedEmails setUploadType(java.lang.String uploadType) {
            return (ApprovedEmails) super.setUploadType(uploadType);
          }

          @Override
          public ApprovedEmails setUploadProtocol(java.lang.String uploadProtocol) {
            return (ApprovedEmails) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public ApprovedEmails setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public ApprovedEmails set(String parameterName, Object value) {
            return (ApprovedEmails) super.set(parameterName, value);
          }
        }
        /**
         * Clones an existing portal.
         *
         * Create a request for the method "site.clone".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Clone#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData}
         * @return the request
         */
        public Clone clone(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData content) throws java.io.IOException {
          Clone result = new Clone(parent, content);
          initialize(result);
          return result;
        }

        public class Clone extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Site> {

          private static final String REST_PATH = "v1/{+parent}/site/clone";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Clones an existing portal.
           *
           * Create a request for the method "site.clone".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Clone#execute()} method to invoke the remote operation. <p> {@link
           * Clone#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData}
           * @since 1.13
           */
          protected Clone(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SiteData content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Site.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Clone set$Xgafv(java.lang.String $Xgafv) {
            return (Clone) super.set$Xgafv($Xgafv);
          }

          @Override
          public Clone setAccessToken(java.lang.String accessToken) {
            return (Clone) super.setAccessToken(accessToken);
          }

          @Override
          public Clone setAlt(java.lang.String alt) {
            return (Clone) super.setAlt(alt);
          }

          @Override
          public Clone setCallback(java.lang.String callback) {
            return (Clone) super.setCallback(callback);
          }

          @Override
          public Clone setFields(java.lang.String fields) {
            return (Clone) super.setFields(fields);
          }

          @Override
          public Clone setKey(java.lang.String key) {
            return (Clone) super.setKey(key);
          }

          @Override
          public Clone setOauthToken(java.lang.String oauthToken) {
            return (Clone) super.setOauthToken(oauthToken);
          }

          @Override
          public Clone setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Clone) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Clone setQuotaUser(java.lang.String quotaUser) {
            return (Clone) super.setQuotaUser(quotaUser);
          }

          @Override
          public Clone setUploadType(java.lang.String uploadType) {
            return (Clone) super.setUploadType(uploadType);
          }

          @Override
          public Clone setUploadProtocol(java.lang.String uploadProtocol) {
            return (Clone) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Clone setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Clone set(String parameterName, Object value) {
            return (Clone) super.set(parameterName, value);
          }
        }
        /**
         * Sets the default visibility to all users (public), using the `defaultAnonAllowed` flag, for pages
         * and API products that are published on the portal.
         *
         * Create a request for the method "site.defaultanonallowed".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Defaultanonallowed#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DefaultAnonAllowed}
         * @return the request
         */
        public Defaultanonallowed defaultanonallowed(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DefaultAnonAllowed content) throws java.io.IOException {
          Defaultanonallowed result = new Defaultanonallowed(parent, content);
          initialize(result);
          return result;
        }

        public class Defaultanonallowed extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/site/defaultanonallowed";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Sets the default visibility to all users (public), using the `defaultAnonAllowed` flag, for
           * pages and API products that are published on the portal.
           *
           * Create a request for the method "site.defaultanonallowed".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Defaultanonallowed#execute()} method to invoke the remote
           * operation. <p> {@link Defaultanonallowed#initialize(com.google.api.client.googleapis.services.A
           * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DefaultAnonAllowed}
           * @since 1.13
           */
          protected Defaultanonallowed(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1DefaultAnonAllowed content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Defaultanonallowed set$Xgafv(java.lang.String $Xgafv) {
            return (Defaultanonallowed) super.set$Xgafv($Xgafv);
          }

          @Override
          public Defaultanonallowed setAccessToken(java.lang.String accessToken) {
            return (Defaultanonallowed) super.setAccessToken(accessToken);
          }

          @Override
          public Defaultanonallowed setAlt(java.lang.String alt) {
            return (Defaultanonallowed) super.setAlt(alt);
          }

          @Override
          public Defaultanonallowed setCallback(java.lang.String callback) {
            return (Defaultanonallowed) super.setCallback(callback);
          }

          @Override
          public Defaultanonallowed setFields(java.lang.String fields) {
            return (Defaultanonallowed) super.setFields(fields);
          }

          @Override
          public Defaultanonallowed setKey(java.lang.String key) {
            return (Defaultanonallowed) super.setKey(key);
          }

          @Override
          public Defaultanonallowed setOauthToken(java.lang.String oauthToken) {
            return (Defaultanonallowed) super.setOauthToken(oauthToken);
          }

          @Override
          public Defaultanonallowed setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Defaultanonallowed) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Defaultanonallowed setQuotaUser(java.lang.String quotaUser) {
            return (Defaultanonallowed) super.setQuotaUser(quotaUser);
          }

          @Override
          public Defaultanonallowed setUploadType(java.lang.String uploadType) {
            return (Defaultanonallowed) super.setUploadType(uploadType);
          }

          @Override
          public Defaultanonallowed setUploadProtocol(java.lang.String uploadProtocol) {
            return (Defaultanonallowed) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Defaultanonallowed setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Defaultanonallowed set(String parameterName, Object value) {
            return (Defaultanonallowed) super.set(parameterName, value);
          }
        }
        /**
         * Enables or updates the custom domain for a portal.
         *
         * Create a request for the method "site.domains".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Domains#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomDomainConfigData}
         * @return the request
         */
        public Domains domains(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomDomainConfigData content) throws java.io.IOException {
          Domains result = new Domains(parent, content);
          initialize(result);
          return result;
        }

        public class Domains extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomDomainConfig> {

          private static final String REST_PATH = "v1/{+parent}/site/domains";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Enables or updates the custom domain for a portal.
           *
           * Create a request for the method "site.domains".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Domains#execute()} method to invoke the remote operation. <p>
           * {@link
           * Domains#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomDomainConfigData}
           * @since 1.13
           */
          protected Domains(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomDomainConfigData content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomDomainConfig.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Domains set$Xgafv(java.lang.String $Xgafv) {
            return (Domains) super.set$Xgafv($Xgafv);
          }

          @Override
          public Domains setAccessToken(java.lang.String accessToken) {
            return (Domains) super.setAccessToken(accessToken);
          }

          @Override
          public Domains setAlt(java.lang.String alt) {
            return (Domains) super.setAlt(alt);
          }

          @Override
          public Domains setCallback(java.lang.String callback) {
            return (Domains) super.setCallback(callback);
          }

          @Override
          public Domains setFields(java.lang.String fields) {
            return (Domains) super.setFields(fields);
          }

          @Override
          public Domains setKey(java.lang.String key) {
            return (Domains) super.setKey(key);
          }

          @Override
          public Domains setOauthToken(java.lang.String oauthToken) {
            return (Domains) super.setOauthToken(oauthToken);
          }

          @Override
          public Domains setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Domains) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Domains setQuotaUser(java.lang.String quotaUser) {
            return (Domains) super.setQuotaUser(quotaUser);
          }

          @Override
          public Domains setUploadType(java.lang.String uploadType) {
            return (Domains) super.setUploadType(uploadType);
          }

          @Override
          public Domains setUploadProtocol(java.lang.String uploadProtocol) {
            return (Domains) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Domains setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Domains set(String parameterName, Object value) {
            return (Domains) super.set(parameterName, value);
          }
        }
        /**
         * Gets the `defaultAnonAllowed` flag setting for a portal. This flag defines the default visibility
         * for pages and API products that are published on the portal.
         *
         * Create a request for the method "site.getDefaultanonallowed".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetDefaultanonallowed#execute()} method to invoke the remote
         * operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public GetDefaultanonallowed getDefaultanonallowed(java.lang.String parent) throws java.io.IOException {
          GetDefaultanonallowed result = new GetDefaultanonallowed(parent);
          initialize(result);
          return result;
        }

        public class GetDefaultanonallowed extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse> {

          private static final String REST_PATH = "v1/{+parent}/site/defaultanonallowed";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Gets the `defaultAnonAllowed` flag setting for a portal. This flag defines the default
           * visibility for pages and API products that are published on the portal.
           *
           * Create a request for the method "site.getDefaultanonallowed".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetDefaultanonallowed#execute()} method to invoke the remote
           * operation. <p> {@link GetDefaultanonallowed#initialize(com.google.api.client.googleapis.service
           * s.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
           * invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected GetDefaultanonallowed(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1StringResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetDefaultanonallowed set$Xgafv(java.lang.String $Xgafv) {
            return (GetDefaultanonallowed) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetDefaultanonallowed setAccessToken(java.lang.String accessToken) {
            return (GetDefaultanonallowed) super.setAccessToken(accessToken);
          }

          @Override
          public GetDefaultanonallowed setAlt(java.lang.String alt) {
            return (GetDefaultanonallowed) super.setAlt(alt);
          }

          @Override
          public GetDefaultanonallowed setCallback(java.lang.String callback) {
            return (GetDefaultanonallowed) super.setCallback(callback);
          }

          @Override
          public GetDefaultanonallowed setFields(java.lang.String fields) {
            return (GetDefaultanonallowed) super.setFields(fields);
          }

          @Override
          public GetDefaultanonallowed setKey(java.lang.String key) {
            return (GetDefaultanonallowed) super.setKey(key);
          }

          @Override
          public GetDefaultanonallowed setOauthToken(java.lang.String oauthToken) {
            return (GetDefaultanonallowed) super.setOauthToken(oauthToken);
          }

          @Override
          public GetDefaultanonallowed setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetDefaultanonallowed) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetDefaultanonallowed setQuotaUser(java.lang.String quotaUser) {
            return (GetDefaultanonallowed) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetDefaultanonallowed setUploadType(java.lang.String uploadType) {
            return (GetDefaultanonallowed) super.setUploadType(uploadType);
          }

          @Override
          public GetDefaultanonallowed setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetDefaultanonallowed) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public GetDefaultanonallowed setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public GetDefaultanonallowed set(String parameterName, Object value) {
            return (GetDefaultanonallowed) super.set(parameterName, value);
          }
        }
        /**
         * Gets the custom domain configuration for a portal.
         *
         * Create a request for the method "site.getDomains".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link GetDomains#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public GetDomains getDomains(java.lang.String parent) throws java.io.IOException {
          GetDomains result = new GetDomains(parent);
          initialize(result);
          return result;
        }

        public class GetDomains extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomDomainConfig> {

          private static final String REST_PATH = "v1/{+parent}/site/domains";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Gets the custom domain configuration for a portal.
           *
           * Create a request for the method "site.getDomains".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link GetDomains#execute()} method to invoke the remote operation. <p>
           * {@link
           * GetDomains#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected GetDomains(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CustomDomainConfig.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public GetDomains set$Xgafv(java.lang.String $Xgafv) {
            return (GetDomains) super.set$Xgafv($Xgafv);
          }

          @Override
          public GetDomains setAccessToken(java.lang.String accessToken) {
            return (GetDomains) super.setAccessToken(accessToken);
          }

          @Override
          public GetDomains setAlt(java.lang.String alt) {
            return (GetDomains) super.setAlt(alt);
          }

          @Override
          public GetDomains setCallback(java.lang.String callback) {
            return (GetDomains) super.setCallback(callback);
          }

          @Override
          public GetDomains setFields(java.lang.String fields) {
            return (GetDomains) super.setFields(fields);
          }

          @Override
          public GetDomains setKey(java.lang.String key) {
            return (GetDomains) super.setKey(key);
          }

          @Override
          public GetDomains setOauthToken(java.lang.String oauthToken) {
            return (GetDomains) super.setOauthToken(oauthToken);
          }

          @Override
          public GetDomains setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (GetDomains) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public GetDomains setQuotaUser(java.lang.String quotaUser) {
            return (GetDomains) super.setQuotaUser(quotaUser);
          }

          @Override
          public GetDomains setUploadType(java.lang.String uploadType) {
            return (GetDomains) super.setUploadType(uploadType);
          }

          @Override
          public GetDomains setUploadProtocol(java.lang.String uploadProtocol) {
            return (GetDomains) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public GetDomains setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public GetDomains set(String parameterName, Object value) {
            return (GetDomains) super.set(parameterName, value);
          }
        }
        /**
         * Regenerates the secret key for a portal.
         *
         * Create a request for the method "site.key".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Key#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public Key key(java.lang.String parent) throws java.io.IOException {
          Key result = new Key(parent);
          initialize(result);
          return result;
        }

        public class Key extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/site/key";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Regenerates the secret key for a portal.
           *
           * Create a request for the method "site.key".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Key#execute()} method to invoke the remote operation. <p> {@link
           * Key#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected Key(java.lang.String parent) {
            super(Apigee.this, "PUT", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Key set$Xgafv(java.lang.String $Xgafv) {
            return (Key) super.set$Xgafv($Xgafv);
          }

          @Override
          public Key setAccessToken(java.lang.String accessToken) {
            return (Key) super.setAccessToken(accessToken);
          }

          @Override
          public Key setAlt(java.lang.String alt) {
            return (Key) super.setAlt(alt);
          }

          @Override
          public Key setCallback(java.lang.String callback) {
            return (Key) super.setCallback(callback);
          }

          @Override
          public Key setFields(java.lang.String fields) {
            return (Key) super.setFields(fields);
          }

          @Override
          public Key setKey(java.lang.String key) {
            return (Key) super.setKey(key);
          }

          @Override
          public Key setOauthToken(java.lang.String oauthToken) {
            return (Key) super.setOauthToken(oauthToken);
          }

          @Override
          public Key setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Key) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Key setQuotaUser(java.lang.String quotaUser) {
            return (Key) super.setQuotaUser(quotaUser);
          }

          @Override
          public Key setUploadType(java.lang.String uploadType) {
            return (Key) super.setUploadType(uploadType);
          }

          @Override
          public Key setUploadProtocol(java.lang.String uploadProtocol) {
            return (Key) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Key setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Key set(String parameterName, Object value) {
            return (Key) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Smtp collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Smtp.List request = apigee.smtp().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Smtp smtp() {
        return new Smtp();
      }

      /**
       * The "smtp" collection of methods.
       */
      public class Smtp {

        /**
         * Resets the default settings for the SMTP configuration for a portal.
         *
         * Create a request for the method "smtp.reset".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Reset#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
         * @return the request
         */
        public Reset reset(java.lang.String parent) throws java.io.IOException {
          Reset result = new Reset(parent);
          initialize(result);
          return result;
        }

        public class Reset extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+parent}/smtp/reset";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+$");

          /**
           * Resets the default settings for the SMTP configuration for a portal.
           *
           * Create a request for the method "smtp.reset".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Reset#execute()} method to invoke the remote operation. <p> {@link
           * Reset#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the portal. Use the following structure in your request:
         *        `organizations/{org}/sites/{site}`
           * @since 1.13
           */
          protected Reset(java.lang.String parent) {
            super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
          }

          @Override
          public Reset set$Xgafv(java.lang.String $Xgafv) {
            return (Reset) super.set$Xgafv($Xgafv);
          }

          @Override
          public Reset setAccessToken(java.lang.String accessToken) {
            return (Reset) super.setAccessToken(accessToken);
          }

          @Override
          public Reset setAlt(java.lang.String alt) {
            return (Reset) super.setAlt(alt);
          }

          @Override
          public Reset setCallback(java.lang.String callback) {
            return (Reset) super.setCallback(callback);
          }

          @Override
          public Reset setFields(java.lang.String fields) {
            return (Reset) super.setFields(fields);
          }

          @Override
          public Reset setKey(java.lang.String key) {
            return (Reset) super.setKey(key);
          }

          @Override
          public Reset setOauthToken(java.lang.String oauthToken) {
            return (Reset) super.setOauthToken(oauthToken);
          }

          @Override
          public Reset setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Reset) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Reset setQuotaUser(java.lang.String quotaUser) {
            return (Reset) super.setQuotaUser(quotaUser);
          }

          @Override
          public Reset setUploadType(java.lang.String uploadType) {
            return (Reset) super.setUploadType(uploadType);
          }

          @Override
          public Reset setUploadProtocol(java.lang.String uploadProtocol) {
            return (Reset) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the portal. Use the following structure in your request:
         `organizations/{org}/sites/{site}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the portal. Use the following structure in your request:
           * `organizations/{org}/sites/{site}`
           */
          public Reset setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Reset set(String parameterName, Object value) {
            return (Reset) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Specs collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Specs.List request = apigee.specs().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Specs specs() {
        return new Specs();
      }

      /**
       * The "specs" collection of methods.
       */
      public class Specs {

        /**
         * Lists details for the OpenAPI Specifications associated with an API.
         *
         * Create a request for the method "specs.listProxySpecs".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link ListProxySpecs#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the API. Use the following structure in your request:
         *        `organizations/{org}sites/{site}/specs/{api}`
         * @return the request
         */
        public ListProxySpecs listProxySpecs(java.lang.String name) throws java.io.IOException {
          ListProxySpecs result = new ListProxySpecs(name);
          initialize(result);
          return result;
        }

        public class ListProxySpecs extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListProxySpecsResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/specs/[^/]+$");

          /**
           * Lists details for the OpenAPI Specifications associated with an API.
           *
           * Create a request for the method "specs.listProxySpecs".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link ListProxySpecs#execute()} method to invoke the remote operation.
           * <p> {@link ListProxySpecs#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
           * ientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param name Required. Name of the API. Use the following structure in your request:
         *        `organizations/{org}sites/{site}/specs/{api}`
           * @since 1.13
           */
          protected ListProxySpecs(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListProxySpecsResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/specs/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public ListProxySpecs set$Xgafv(java.lang.String $Xgafv) {
            return (ListProxySpecs) super.set$Xgafv($Xgafv);
          }

          @Override
          public ListProxySpecs setAccessToken(java.lang.String accessToken) {
            return (ListProxySpecs) super.setAccessToken(accessToken);
          }

          @Override
          public ListProxySpecs setAlt(java.lang.String alt) {
            return (ListProxySpecs) super.setAlt(alt);
          }

          @Override
          public ListProxySpecs setCallback(java.lang.String callback) {
            return (ListProxySpecs) super.setCallback(callback);
          }

          @Override
          public ListProxySpecs setFields(java.lang.String fields) {
            return (ListProxySpecs) super.setFields(fields);
          }

          @Override
          public ListProxySpecs setKey(java.lang.String key) {
            return (ListProxySpecs) super.setKey(key);
          }

          @Override
          public ListProxySpecs setOauthToken(java.lang.String oauthToken) {
            return (ListProxySpecs) super.setOauthToken(oauthToken);
          }

          @Override
          public ListProxySpecs setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (ListProxySpecs) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public ListProxySpecs setQuotaUser(java.lang.String quotaUser) {
            return (ListProxySpecs) super.setQuotaUser(quotaUser);
          }

          @Override
          public ListProxySpecs setUploadType(java.lang.String uploadType) {
            return (ListProxySpecs) super.setUploadType(uploadType);
          }

          @Override
          public ListProxySpecs setUploadProtocol(java.lang.String uploadProtocol) {
            return (ListProxySpecs) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the API. Use the following structure in your request:
           * `organizations/{org}sites/{site}/specs/{api}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the API. Use the following structure in your request:
         `organizations/{org}sites/{site}/specs/{api}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the API. Use the following structure in your request:
           * `organizations/{org}sites/{site}/specs/{api}`
           */
          public ListProxySpecs setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/specs/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public ListProxySpecs set(String parameterName, Object value) {
            return (ListProxySpecs) super.set(parameterName, value);
          }
        }

      }
      /**
       * An accessor for creating requests from the Zones collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Zones.List request = apigee.zones().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Zones zones() {
        return new Zones();
      }

      /**
       * The "zones" collection of methods.
       */
      public class Zones {

        /**
         * Associates a portal with a zone.
         *
         * Create a request for the method "zones.associateSiteZone".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link AssociateSiteZone#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the zone. Use the following structure in your request:
         *        `organizations/{org}/zones/{zone}`
         * @return the request
         */
        public AssociateSiteZone associateSiteZone(java.lang.String name) throws java.io.IOException {
          AssociateSiteZone result = new AssociateSiteZone(name);
          initialize(result);
          return result;
        }

        public class AssociateSiteZone extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/sites/[^/]+/zones/[^/]+$");

          /**
           * Associates a portal with a zone.
           *
           * Create a request for the method "zones.associateSiteZone".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link AssociateSiteZone#execute()} method to invoke the remote operation.
           * <p> {@link AssociateSiteZone#initialize(com.google.api.client.googleapis.services.AbstractGoogl
           * eClientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param name Required. Name of the zone. Use the following structure in your request:
         *        `organizations/{org}/zones/{zone}`
           * @since 1.13
           */
          protected AssociateSiteZone(java.lang.String name) {
            super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/zones/[^/]+$");
            }
          }

          @Override
          public AssociateSiteZone set$Xgafv(java.lang.String $Xgafv) {
            return (AssociateSiteZone) super.set$Xgafv($Xgafv);
          }

          @Override
          public AssociateSiteZone setAccessToken(java.lang.String accessToken) {
            return (AssociateSiteZone) super.setAccessToken(accessToken);
          }

          @Override
          public AssociateSiteZone setAlt(java.lang.String alt) {
            return (AssociateSiteZone) super.setAlt(alt);
          }

          @Override
          public AssociateSiteZone setCallback(java.lang.String callback) {
            return (AssociateSiteZone) super.setCallback(callback);
          }

          @Override
          public AssociateSiteZone setFields(java.lang.String fields) {
            return (AssociateSiteZone) super.setFields(fields);
          }

          @Override
          public AssociateSiteZone setKey(java.lang.String key) {
            return (AssociateSiteZone) super.setKey(key);
          }

          @Override
          public AssociateSiteZone setOauthToken(java.lang.String oauthToken) {
            return (AssociateSiteZone) super.setOauthToken(oauthToken);
          }

          @Override
          public AssociateSiteZone setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (AssociateSiteZone) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public AssociateSiteZone setQuotaUser(java.lang.String quotaUser) {
            return (AssociateSiteZone) super.setQuotaUser(quotaUser);
          }

          @Override
          public AssociateSiteZone setUploadType(java.lang.String uploadType) {
            return (AssociateSiteZone) super.setUploadType(uploadType);
          }

          @Override
          public AssociateSiteZone setUploadProtocol(java.lang.String uploadProtocol) {
            return (AssociateSiteZone) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the zone. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the zone. Use the following structure in your request:
         `organizations/{org}/zones/{zone}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the zone. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}`
           */
          public AssociateSiteZone setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/sites/[^/]+/zones/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public AssociateSiteZone set(String parameterName, Object value) {
            return (AssociateSiteZone) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the System collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.System.List request = apigee.system().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public System system() {
      return new System();
    }

    /**
     * The "system" collection of methods.
     */
    public class System {

      /**
       * Gets any cross-organizational announcement that you want to display to customers on the UI.
       *
       * Create a request for the method "system.getAnnouncements".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetAnnouncements#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in
      your request:
       *        `organizations/{org}`
       * @return the request
       */
      public GetAnnouncements getAnnouncements(java.lang.String parent) throws java.io.IOException {
        GetAnnouncements result = new GetAnnouncements(parent);
        initialize(result);
        return result;
      }

      public class GetAnnouncements extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Announcement> {

        private static final String REST_PATH = "v1/{+parent}/system/announcements";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Gets any cross-organizational announcement that you want to display to customers on the UI.
         *
         * Create a request for the method "system.getAnnouncements".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetAnnouncements#execute()} method to invoke the remote operation.
         * <p> {@link GetAnnouncements#initialize(com.google.api.client.googleapis.services.AbstractGoogle
         * ClientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in
      your request:
       *        `organizations/{org}`
         * @since 1.13
         */
        protected GetAnnouncements(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Announcement.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetAnnouncements set$Xgafv(java.lang.String $Xgafv) {
          return (GetAnnouncements) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetAnnouncements setAccessToken(java.lang.String accessToken) {
          return (GetAnnouncements) super.setAccessToken(accessToken);
        }

        @Override
        public GetAnnouncements setAlt(java.lang.String alt) {
          return (GetAnnouncements) super.setAlt(alt);
        }

        @Override
        public GetAnnouncements setCallback(java.lang.String callback) {
          return (GetAnnouncements) super.setCallback(callback);
        }

        @Override
        public GetAnnouncements setFields(java.lang.String fields) {
          return (GetAnnouncements) super.setFields(fields);
        }

        @Override
        public GetAnnouncements setKey(java.lang.String key) {
          return (GetAnnouncements) super.setKey(key);
        }

        @Override
        public GetAnnouncements setOauthToken(java.lang.String oauthToken) {
          return (GetAnnouncements) super.setOauthToken(oauthToken);
        }

        @Override
        public GetAnnouncements setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetAnnouncements) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetAnnouncements setQuotaUser(java.lang.String quotaUser) {
          return (GetAnnouncements) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetAnnouncements setUploadType(java.lang.String uploadType) {
          return (GetAnnouncements) super.setUploadType(uploadType);
        }

        @Override
        public GetAnnouncements setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetAnnouncements) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public GetAnnouncements setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetAnnouncements set(String parameterName, Object value) {
          return (GetAnnouncements) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Teams collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Teams.List request = apigee.teams().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Teams teams() {
      return new Teams();
    }

    /**
     * The "teams" collection of methods.
     */
    public class Teams {

      /**
       * Lists all teams a user can access.
       *
       * Create a request for the method "teams.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in
      your request:
       *        `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEdgeTeamsResponse> {

        private static final String REST_PATH = "v1/{+parent}/teams";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists all teams a user can access.
         *
         * Create a request for the method "teams.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in
      your request:
       *        `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListEdgeTeamsResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }

    }
    /**
     * An accessor for creating requests from the Zone collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Zone.List request = apigee.zone().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Zone zone() {
      return new Zone();
    }

    /**
     * The "zone" collection of methods.
     */
    public class Zone {

      /**
       * Enables the audience feature in a zone.
       *
       * Create a request for the method "zone.enableaudiences".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Enableaudiences#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
       * @return the request
       */
      public Enableaudiences enableaudiences(java.lang.String parent) throws java.io.IOException {
        Enableaudiences result = new Enableaudiences(parent);
        initialize(result);
        return result;
      }

      public class Enableaudiences extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

        private static final String REST_PATH = "v1/{+parent}/enableaudiences";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/zone/[^/]+$");

        /**
         * Enables the audience feature in a zone.
         *
         * Create a request for the method "zone.enableaudiences".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Enableaudiences#execute()} method to invoke the remote operation.
         * <p> {@link Enableaudiences#initialize(com.google.api.client.googleapis.services.AbstractGoogleC
         * lientRequest)} must be called to initialize this instance immediately after invoking the
         * constructor. </p>
         *
         * @param parent Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
         * @since 1.13
         */
        protected Enableaudiences(java.lang.String parent) {
          super(Apigee.this, "POST", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/zone/[^/]+$");
          }
        }

        @Override
        public Enableaudiences set$Xgafv(java.lang.String $Xgafv) {
          return (Enableaudiences) super.set$Xgafv($Xgafv);
        }

        @Override
        public Enableaudiences setAccessToken(java.lang.String accessToken) {
          return (Enableaudiences) super.setAccessToken(accessToken);
        }

        @Override
        public Enableaudiences setAlt(java.lang.String alt) {
          return (Enableaudiences) super.setAlt(alt);
        }

        @Override
        public Enableaudiences setCallback(java.lang.String callback) {
          return (Enableaudiences) super.setCallback(callback);
        }

        @Override
        public Enableaudiences setFields(java.lang.String fields) {
          return (Enableaudiences) super.setFields(fields);
        }

        @Override
        public Enableaudiences setKey(java.lang.String key) {
          return (Enableaudiences) super.setKey(key);
        }

        @Override
        public Enableaudiences setOauthToken(java.lang.String oauthToken) {
          return (Enableaudiences) super.setOauthToken(oauthToken);
        }

        @Override
        public Enableaudiences setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Enableaudiences) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Enableaudiences setQuotaUser(java.lang.String quotaUser) {
          return (Enableaudiences) super.setQuotaUser(quotaUser);
        }

        @Override
        public Enableaudiences setUploadType(java.lang.String uploadType) {
          return (Enableaudiences) super.setUploadType(uploadType);
        }

        @Override
        public Enableaudiences setUploadProtocol(java.lang.String uploadProtocol) {
          return (Enableaudiences) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the zone. Use the following structure in your request:
       `organizations/{org}/zones/{zone}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        public Enableaudiences setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/zone/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Enableaudiences set(String parameterName, Object value) {
          return (Enableaudiences) super.set(parameterName, value);
        }
      }
      /**
       * Retrieves the audience feature flag setting for a zone.
       *
       * Create a request for the method "zone.getAudiencesenabled".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link GetAudiencesenabled#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
       * @return the request
       */
      public GetAudiencesenabled getAudiencesenabled(java.lang.String parent) throws java.io.IOException {
        GetAudiencesenabled result = new GetAudiencesenabled(parent);
        initialize(result);
        return result;
      }

      public class GetAudiencesenabled extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ZoneAudienceEnabledResponse> {

        private static final String REST_PATH = "v1/{+parent}/audiencesenabled";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/zone/[^/]+$");

        /**
         * Retrieves the audience feature flag setting for a zone.
         *
         * Create a request for the method "zone.getAudiencesenabled".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link GetAudiencesenabled#execute()} method to invoke the remote
         * operation. <p> {@link GetAudiencesenabled#initialize(com.google.api.client.googleapis.services.
         * AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
         * invoking the constructor. </p>
         *
         * @param parent Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
         * @since 1.13
         */
        protected GetAudiencesenabled(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ZoneAudienceEnabledResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/zone/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public GetAudiencesenabled set$Xgafv(java.lang.String $Xgafv) {
          return (GetAudiencesenabled) super.set$Xgafv($Xgafv);
        }

        @Override
        public GetAudiencesenabled setAccessToken(java.lang.String accessToken) {
          return (GetAudiencesenabled) super.setAccessToken(accessToken);
        }

        @Override
        public GetAudiencesenabled setAlt(java.lang.String alt) {
          return (GetAudiencesenabled) super.setAlt(alt);
        }

        @Override
        public GetAudiencesenabled setCallback(java.lang.String callback) {
          return (GetAudiencesenabled) super.setCallback(callback);
        }

        @Override
        public GetAudiencesenabled setFields(java.lang.String fields) {
          return (GetAudiencesenabled) super.setFields(fields);
        }

        @Override
        public GetAudiencesenabled setKey(java.lang.String key) {
          return (GetAudiencesenabled) super.setKey(key);
        }

        @Override
        public GetAudiencesenabled setOauthToken(java.lang.String oauthToken) {
          return (GetAudiencesenabled) super.setOauthToken(oauthToken);
        }

        @Override
        public GetAudiencesenabled setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (GetAudiencesenabled) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public GetAudiencesenabled setQuotaUser(java.lang.String quotaUser) {
          return (GetAudiencesenabled) super.setQuotaUser(quotaUser);
        }

        @Override
        public GetAudiencesenabled setUploadType(java.lang.String uploadType) {
          return (GetAudiencesenabled) super.setUploadType(uploadType);
        }

        @Override
        public GetAudiencesenabled setUploadProtocol(java.lang.String uploadProtocol) {
          return (GetAudiencesenabled) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the zone. Use the following structure in your request:
       `organizations/{org}/zones/{zone}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        public GetAudiencesenabled setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/zone/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public GetAudiencesenabled set(String parameterName, Object value) {
          return (GetAudiencesenabled) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the Audiencesenabled collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.Audiencesenabled.List request = apigee.audiencesenabled().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public Audiencesenabled audiencesenabled() {
        return new Audiencesenabled();
      }

      /**
       * The "audiencesenabled" collection of methods.
       */
      public class Audiencesenabled {

        /**
         * Lists all zones in an Apigee organization with the audience feature enabled.
         *
         * Create a request for the method "audiencesenabled.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of Apigee organization. Use the following structure in your
        request:
         *        `organizations/{org}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAudiencesEnabledForZonesInOrgResponse> {

          private static final String REST_PATH = "v1/{+parent}/zone/audiencesenabled";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+$");

          /**
           * Lists all zones in an Apigee organization with the audience feature enabled.
           *
           * Create a request for the method "audiencesenabled.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of Apigee organization. Use the following structure in your
        request:
         *        `organizations/{org}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListAudiencesEnabledForZonesInOrgResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of Apigee organization. Use the following structure in your request:
           * `organizations/{org}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of Apigee organization. Use the following structure in your request:
         `organizations/{org}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of Apigee organization. Use the following structure in your request:
           * `organizations/{org}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }

      }
    }
    /**
     * An accessor for creating requests from the Zones collection.
     *
     * <p>The typical use is:</p>
     * <pre>
     *   {@code Apigee apigee = new Apigee(...);}
     *   {@code Apigee.Zones.List request = apigee.zones().list(parameters ...)}
     * </pre>
     *
     * @return the resource collection
     */
    public Zones zones() {
      return new Zones();
    }

    /**
     * The "zones" collection of methods.
     */
    public class Zones {

      /**
       * Validates a certificate in a zone.
       *
       * Create a request for the method "zones.certificate".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Certificate#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the Apigee organization. Use the following structure in your
      request:
       *        `organizations/{org}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyCertificateRequest}
       * @return the request
       */
      public Certificate certificate(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyCertificateRequest content) throws java.io.IOException {
        Certificate result = new Certificate(parent, content);
        initialize(result);
        return result;
      }

      public class Certificate extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyCertificateResponse> {

        private static final String REST_PATH = "v1/{+parent}/zones/certificate";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Validates a certificate in a zone.
         *
         * Create a request for the method "zones.certificate".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Certificate#execute()} method to invoke the remote operation. <p>
         * {@link
         * Certificate#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the Apigee organization. Use the following structure in your
      request:
       *        `organizations/{org}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyCertificateRequest}
         * @since 1.13
         */
        protected Certificate(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyCertificateRequest content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1VerifyCertificateResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public Certificate set$Xgafv(java.lang.String $Xgafv) {
          return (Certificate) super.set$Xgafv($Xgafv);
        }

        @Override
        public Certificate setAccessToken(java.lang.String accessToken) {
          return (Certificate) super.setAccessToken(accessToken);
        }

        @Override
        public Certificate setAlt(java.lang.String alt) {
          return (Certificate) super.setAlt(alt);
        }

        @Override
        public Certificate setCallback(java.lang.String callback) {
          return (Certificate) super.setCallback(callback);
        }

        @Override
        public Certificate setFields(java.lang.String fields) {
          return (Certificate) super.setFields(fields);
        }

        @Override
        public Certificate setKey(java.lang.String key) {
          return (Certificate) super.setKey(key);
        }

        @Override
        public Certificate setOauthToken(java.lang.String oauthToken) {
          return (Certificate) super.setOauthToken(oauthToken);
        }

        @Override
        public Certificate setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Certificate) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Certificate setQuotaUser(java.lang.String quotaUser) {
          return (Certificate) super.setQuotaUser(quotaUser);
        }

        @Override
        public Certificate setUploadType(java.lang.String uploadType) {
          return (Certificate) super.setUploadType(uploadType);
        }

        @Override
        public Certificate setUploadProtocol(java.lang.String uploadProtocol) {
          return (Certificate) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the Apigee organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public Certificate setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Certificate set(String parameterName, Object value) {
          return (Certificate) super.set(parameterName, value);
        }
      }
      /**
       * Gets a zone.
       *
       * Create a request for the method "zones.get".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
       * @return the request
       */
      public Get get(java.lang.String name) throws java.io.IOException {
        Get result = new Get(name);
        initialize(result);
        return result;
      }

      public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetZoneResponse> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/zones/[^/]+$");

        /**
         * Gets a zone.
         *
         * Create a request for the method "zones.get".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
         * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
         * @since 1.13
         */
        protected Get(java.lang.String name) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetZoneResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/zones/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public Get set$Xgafv(java.lang.String $Xgafv) {
          return (Get) super.set$Xgafv($Xgafv);
        }

        @Override
        public Get setAccessToken(java.lang.String accessToken) {
          return (Get) super.setAccessToken(accessToken);
        }

        @Override
        public Get setAlt(java.lang.String alt) {
          return (Get) super.setAlt(alt);
        }

        @Override
        public Get setCallback(java.lang.String callback) {
          return (Get) super.setCallback(callback);
        }

        @Override
        public Get setFields(java.lang.String fields) {
          return (Get) super.setFields(fields);
        }

        @Override
        public Get setKey(java.lang.String key) {
          return (Get) super.setKey(key);
        }

        @Override
        public Get setOauthToken(java.lang.String oauthToken) {
          return (Get) super.setOauthToken(oauthToken);
        }

        @Override
        public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Get) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Get setQuotaUser(java.lang.String quotaUser) {
          return (Get) super.setQuotaUser(quotaUser);
        }

        @Override
        public Get setUploadType(java.lang.String uploadType) {
          return (Get) super.setUploadType(uploadType);
        }

        @Override
        public Get setUploadProtocol(java.lang.String uploadProtocol) {
          return (Get) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the zone. Use the following structure in your request:
       `organizations/{org}/zones/{zone}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        public Get setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/zones/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Get set(String parameterName, Object value) {
          return (Get) super.set(parameterName, value);
        }
      }
      /**
       * Lists the zones for an Apigee organization.
       *
       * Create a request for the method "zones.list".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name for the Apigee organization. Use the following structure in your
      request:
       *        `organizations/{org}`
       * @return the request
       */
      public List list(java.lang.String parent) throws java.io.IOException {
        List result = new List(parent);
        initialize(result);
        return result;
      }

      public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListZonesResponse> {

        private static final String REST_PATH = "v1/{+parent}/zones";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+$");

        /**
         * Lists the zones for an Apigee organization.
         *
         * Create a request for the method "zones.list".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
         * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
         * called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name for the Apigee organization. Use the following structure in your
      request:
       *        `organizations/{org}`
         * @since 1.13
         */
        protected List(java.lang.String parent) {
          super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListZonesResponse.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
        }

        @Override
        public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
          return super.executeUsingHead();
        }

        @Override
        public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
          return super.buildHttpRequestUsingHead();
        }

        @Override
        public List set$Xgafv(java.lang.String $Xgafv) {
          return (List) super.set$Xgafv($Xgafv);
        }

        @Override
        public List setAccessToken(java.lang.String accessToken) {
          return (List) super.setAccessToken(accessToken);
        }

        @Override
        public List setAlt(java.lang.String alt) {
          return (List) super.setAlt(alt);
        }

        @Override
        public List setCallback(java.lang.String callback) {
          return (List) super.setCallback(callback);
        }

        @Override
        public List setFields(java.lang.String fields) {
          return (List) super.setFields(fields);
        }

        @Override
        public List setKey(java.lang.String key) {
          return (List) super.setKey(key);
        }

        @Override
        public List setOauthToken(java.lang.String oauthToken) {
          return (List) super.setOauthToken(oauthToken);
        }

        @Override
        public List setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (List) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public List setQuotaUser(java.lang.String quotaUser) {
          return (List) super.setQuotaUser(quotaUser);
        }

        @Override
        public List setUploadType(java.lang.String uploadType) {
          return (List) super.setUploadType(uploadType);
        }

        @Override
        public List setUploadProtocol(java.lang.String uploadProtocol) {
          return (List) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name for the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name for the Apigee organization. Use the following structure in your request:
       `organizations/{org}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name for the Apigee organization. Use the following structure in your request:
         * `organizations/{org}`
         */
        public List setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public List set(String parameterName, Object value) {
          return (List) super.set(parameterName, value);
        }
      }
      /**
       * ** Note**: This feature is not available to Apigee hybrid at this time.
       *
       * Sends a test email to verify the SMTP settings for an identity provider. Sends the email to the
       * requester's email using the token.
       *
       * Create a request for the method "zones.testemail".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Testemail#execute()} method to invoke the remote operation.
       *
       * @param parent Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TestEmail}
       * @return the request
       */
      public Testemail testemail(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TestEmail content) throws java.io.IOException {
        Testemail result = new Testemail(parent, content);
        initialize(result);
        return result;
      }

      public class Testemail extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper> {

        private static final String REST_PATH = "v1/{+parent}/testemail";

        private final java.util.regex.Pattern PARENT_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/zones/[^/]+$");

        /**
         * ** Note**: This feature is not available to Apigee hybrid at this time.
         *
         * Sends a test email to verify the SMTP settings for an identity provider. Sends the email to the
         * requester's email using the token.
         *
         * Create a request for the method "zones.testemail".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Testemail#execute()} method to invoke the remote operation. <p>
         * {@link
         * Testemail#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
         * must be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param parent Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TestEmail}
         * @since 1.13
         */
        protected Testemail(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1TestEmail content) {
          super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ApiResponseWrapper.class);
          this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/zones/[^/]+$");
          }
        }

        @Override
        public Testemail set$Xgafv(java.lang.String $Xgafv) {
          return (Testemail) super.set$Xgafv($Xgafv);
        }

        @Override
        public Testemail setAccessToken(java.lang.String accessToken) {
          return (Testemail) super.setAccessToken(accessToken);
        }

        @Override
        public Testemail setAlt(java.lang.String alt) {
          return (Testemail) super.setAlt(alt);
        }

        @Override
        public Testemail setCallback(java.lang.String callback) {
          return (Testemail) super.setCallback(callback);
        }

        @Override
        public Testemail setFields(java.lang.String fields) {
          return (Testemail) super.setFields(fields);
        }

        @Override
        public Testemail setKey(java.lang.String key) {
          return (Testemail) super.setKey(key);
        }

        @Override
        public Testemail setOauthToken(java.lang.String oauthToken) {
          return (Testemail) super.setOauthToken(oauthToken);
        }

        @Override
        public Testemail setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Testemail) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Testemail setQuotaUser(java.lang.String quotaUser) {
          return (Testemail) super.setQuotaUser(quotaUser);
        }

        @Override
        public Testemail setUploadType(java.lang.String uploadType) {
          return (Testemail) super.setUploadType(uploadType);
        }

        @Override
        public Testemail setUploadProtocol(java.lang.String uploadProtocol) {
          return (Testemail) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        @com.google.api.client.util.Key
        private java.lang.String parent;

        /** Required. Name of the zone. Use the following structure in your request:
       `organizations/{org}/zones/{zone}`
         */
        public java.lang.String getParent() {
          return parent;
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        public Testemail setParent(java.lang.String parent) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                "Parameter parent must conform to the pattern " +
                "^organizations/[^/]+/zones/[^/]+$");
          }
          this.parent = parent;
          return this;
        }

        @Override
        public Testemail set(String parameterName, Object value) {
          return (Testemail) super.set(parameterName, value);
        }
      }
      /**
       * Updates a zone.
       *
       * Create a request for the method "zones.update".
       *
       * This request holds the parameters needed by the apigee server.  After setting any optional
       * parameters, call the {@link Update#execute()} method to invoke the remote operation.
       *
       * @param name Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
       * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Zone}
       * @return the request
       */
      public Update update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Zone content) throws java.io.IOException {
        Update result = new Update(name, content);
        initialize(result);
        return result;
      }

      public class Update extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateZoneResponse> {

        private static final String REST_PATH = "v1/{+name}";

        private final java.util.regex.Pattern NAME_PATTERN =
            java.util.regex.Pattern.compile("^organizations/[^/]+/zones/[^/]+$");

        /**
         * Updates a zone.
         *
         * Create a request for the method "zones.update".
         *
         * This request holds the parameters needed by the the apigee server.  After setting any optional
         * parameters, call the {@link Update#execute()} method to invoke the remote operation. <p> {@link
         * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
         * be called to initialize this instance immediately after invoking the constructor. </p>
         *
         * @param name Required. Name of the zone. Use the following structure in your request:
       *        `organizations/{org}/zones/{zone}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Zone}
         * @since 1.13
         */
        protected Update(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1Zone content) {
          super(Apigee.this, "PUT", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateZoneResponse.class);
          this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/zones/[^/]+$");
          }
        }

        @Override
        public Update set$Xgafv(java.lang.String $Xgafv) {
          return (Update) super.set$Xgafv($Xgafv);
        }

        @Override
        public Update setAccessToken(java.lang.String accessToken) {
          return (Update) super.setAccessToken(accessToken);
        }

        @Override
        public Update setAlt(java.lang.String alt) {
          return (Update) super.setAlt(alt);
        }

        @Override
        public Update setCallback(java.lang.String callback) {
          return (Update) super.setCallback(callback);
        }

        @Override
        public Update setFields(java.lang.String fields) {
          return (Update) super.setFields(fields);
        }

        @Override
        public Update setKey(java.lang.String key) {
          return (Update) super.setKey(key);
        }

        @Override
        public Update setOauthToken(java.lang.String oauthToken) {
          return (Update) super.setOauthToken(oauthToken);
        }

        @Override
        public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
          return (Update) super.setPrettyPrint(prettyPrint);
        }

        @Override
        public Update setQuotaUser(java.lang.String quotaUser) {
          return (Update) super.setQuotaUser(quotaUser);
        }

        @Override
        public Update setUploadType(java.lang.String uploadType) {
          return (Update) super.setUploadType(uploadType);
        }

        @Override
        public Update setUploadProtocol(java.lang.String uploadProtocol) {
          return (Update) super.setUploadProtocol(uploadProtocol);
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        @com.google.api.client.util.Key
        private java.lang.String name;

        /** Required. Name of the zone. Use the following structure in your request:
       `organizations/{org}/zones/{zone}`
         */
        public java.lang.String getName() {
          return name;
        }

        /**
         * Required. Name of the zone. Use the following structure in your request:
         * `organizations/{org}/zones/{zone}`
         */
        public Update setName(java.lang.String name) {
          if (!getSuppressPatternChecks()) {
            com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                "Parameter name must conform to the pattern " +
                "^organizations/[^/]+/zones/[^/]+$");
          }
          this.name = name;
          return this;
        }

        @Override
        public Update set(String parameterName, Object value) {
          return (Update) super.set(parameterName, value);
        }
      }

      /**
       * An accessor for creating requests from the IdentityProviders collection.
       *
       * <p>The typical use is:</p>
       * <pre>
       *   {@code Apigee apigee = new Apigee(...);}
       *   {@code Apigee.IdentityProviders.List request = apigee.identityProviders().list(parameters ...)}
       * </pre>
       *
       * @return the resource collection
       */
      public IdentityProviders identityProviders() {
        return new IdentityProviders();
      }

      /**
       * The "identity_providers" collection of methods.
       */
      public class IdentityProviders {

        /**
         * Creates an identity provider in a zone.
         *
         * Create a request for the method "identity_providers.create".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Create#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the zone. Use the following structure in your request:
         *        `organizations/{org}/zones/{zone}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProvider}
         * @return the request
         */
        public Create create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProvider content) throws java.io.IOException {
          Create result = new Create(parent, content);
          initialize(result);
          return result;
        }

        public class Create extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreateIdentityProviderResponse> {

          private static final String REST_PATH = "v1/{+parent}/identity_providers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/zones/[^/]+$");

          /**
           * Creates an identity provider in a zone.
           *
           * Create a request for the method "identity_providers.create".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Create#execute()} method to invoke the remote operation. <p> {@link
           * Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the zone. Use the following structure in your request:
         *        `organizations/{org}/zones/{zone}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProvider}
           * @since 1.13
           */
          protected Create(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProvider content) {
            super(Apigee.this, "POST", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1CreateIdentityProviderResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+$");
            }
          }

          @Override
          public Create set$Xgafv(java.lang.String $Xgafv) {
            return (Create) super.set$Xgafv($Xgafv);
          }

          @Override
          public Create setAccessToken(java.lang.String accessToken) {
            return (Create) super.setAccessToken(accessToken);
          }

          @Override
          public Create setAlt(java.lang.String alt) {
            return (Create) super.setAlt(alt);
          }

          @Override
          public Create setCallback(java.lang.String callback) {
            return (Create) super.setCallback(callback);
          }

          @Override
          public Create setFields(java.lang.String fields) {
            return (Create) super.setFields(fields);
          }

          @Override
          public Create setKey(java.lang.String key) {
            return (Create) super.setKey(key);
          }

          @Override
          public Create setOauthToken(java.lang.String oauthToken) {
            return (Create) super.setOauthToken(oauthToken);
          }

          @Override
          public Create setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Create) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Create setQuotaUser(java.lang.String quotaUser) {
            return (Create) super.setQuotaUser(quotaUser);
          }

          @Override
          public Create setUploadType(java.lang.String uploadType) {
            return (Create) super.setUploadType(uploadType);
          }

          @Override
          public Create setUploadProtocol(java.lang.String uploadProtocol) {
            return (Create) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the zone. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the zone. Use the following structure in your request:
         `organizations/{org}/zones/{zone}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the zone. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}`
           */
          public Create setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public Create set(String parameterName, Object value) {
            return (Create) super.set(parameterName, value);
          }
        }
        /**
         * Gets an identity provider in a zone.
         *
         * Create a request for the method "identity_providers.get".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Get#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the identity provider. Use the following structure in
        your request:
         *        `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
         * @return the request
         */
        public Get get(java.lang.String name) throws java.io.IOException {
          Get result = new Get(name);
          initialize(result);
          return result;
        }

        public class Get extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetIdentityProviderResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");

          /**
           * Gets an identity provider in a zone.
           *
           * Create a request for the method "identity_providers.get".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
           * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the identity provider. Use the following structure in
        your request:
         *        `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           * @since 1.13
           */
          protected Get(java.lang.String name) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1GetIdentityProviderResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public Get set$Xgafv(java.lang.String $Xgafv) {
            return (Get) super.set$Xgafv($Xgafv);
          }

          @Override
          public Get setAccessToken(java.lang.String accessToken) {
            return (Get) super.setAccessToken(accessToken);
          }

          @Override
          public Get setAlt(java.lang.String alt) {
            return (Get) super.setAlt(alt);
          }

          @Override
          public Get setCallback(java.lang.String callback) {
            return (Get) super.setCallback(callback);
          }

          @Override
          public Get setFields(java.lang.String fields) {
            return (Get) super.setFields(fields);
          }

          @Override
          public Get setKey(java.lang.String key) {
            return (Get) super.setKey(key);
          }

          @Override
          public Get setOauthToken(java.lang.String oauthToken) {
            return (Get) super.setOauthToken(oauthToken);
          }

          @Override
          public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Get) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Get setQuotaUser(java.lang.String quotaUser) {
            return (Get) super.setQuotaUser(quotaUser);
          }

          @Override
          public Get setUploadType(java.lang.String uploadType) {
            return (Get) super.setUploadType(uploadType);
          }

          @Override
          public Get setUploadProtocol(java.lang.String uploadProtocol) {
            return (Get) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the identity provider. Use the following structure in your request:
         `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          public Get setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Get set(String parameterName, Object value) {
            return (Get) super.set(parameterName, value);
          }
        }
        /**
         * Lists the identity providers in a zone. Underscore in URL
         *
         * Create a request for the method "identity_providers.list".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link List#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the zone. Use the following structure in your request:
         *        `organizations/{org}/zones/{zone}`
         * @return the request
         */
        public List list(java.lang.String parent) throws java.io.IOException {
          List result = new List(parent);
          initialize(result);
          return result;
        }

        public class List extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListIdentityProvidersResponse> {

          private static final String REST_PATH = "v1/{+parent}/identity_providers";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/zones/[^/]+$");

          /**
           * Lists the identity providers in a zone. Underscore in URL
           *
           * Create a request for the method "identity_providers.list".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
           * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
           * called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the zone. Use the following structure in your request:
         *        `organizations/{org}/zones/{zone}`
           * @since 1.13
           */
          protected List(java.lang.String parent) {
            super(Apigee.this, "GET", REST_PATH, null, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1ListIdentityProvidersResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+$");
            }
          }

          @Override
          public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
            return super.executeUsingHead();
          }

          @Override
          public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
            return super.buildHttpRequestUsingHead();
          }

          @Override
          public List set$Xgafv(java.lang.String $Xgafv) {
            return (List) super.set$Xgafv($Xgafv);
          }

          @Override
          public List setAccessToken(java.lang.String accessToken) {
            return (List) super.setAccessToken(accessToken);
          }

          @Override
          public List setAlt(java.lang.String alt) {
            return (List) super.setAlt(alt);
          }

          @Override
          public List setCallback(java.lang.String callback) {
            return (List) super.setCallback(callback);
          }

          @Override
          public List setFields(java.lang.String fields) {
            return (List) super.setFields(fields);
          }

          @Override
          public List setKey(java.lang.String key) {
            return (List) super.setKey(key);
          }

          @Override
          public List setOauthToken(java.lang.String oauthToken) {
            return (List) super.setOauthToken(oauthToken);
          }

          @Override
          public List setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (List) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public List setQuotaUser(java.lang.String quotaUser) {
            return (List) super.setQuotaUser(quotaUser);
          }

          @Override
          public List setUploadType(java.lang.String uploadType) {
            return (List) super.setUploadType(uploadType);
          }

          @Override
          public List setUploadProtocol(java.lang.String uploadProtocol) {
            return (List) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the zone. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the zone. Use the following structure in your request:
         `organizations/{org}/zones/{zone}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the zone. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}`
           */
          public List setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public List set(String parameterName, Object value) {
            return (List) super.set(parameterName, value);
          }
        }
        /**
         * Updates an identity provider in a zone.
         *
         * Create a request for the method "identity_providers.patch".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link Patch#execute()} method to invoke the remote operation.
         *
         * @param name Required. Name of the identity provider. Use the following structure in
        your request:
         *        `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProvider}
         * @return the request
         */
        public Patch patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProvider content) throws java.io.IOException {
          Patch result = new Patch(name, content);
          initialize(result);
          return result;
        }

        public class Patch extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateIdentityProviderResponse> {

          private static final String REST_PATH = "v1/{+name}";

          private final java.util.regex.Pattern NAME_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");

          /**
           * Updates an identity provider in a zone.
           *
           * Create a request for the method "identity_providers.patch".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link Patch#execute()} method to invoke the remote operation. <p> {@link
           * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
           * be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param name Required. Name of the identity provider. Use the following structure in
        your request:
         *        `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProvider}
           * @since 1.13
           */
          protected Patch(java.lang.String name, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProvider content) {
            super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateIdentityProviderResponse.class);
            this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");
            }
          }

          @Override
          public Patch set$Xgafv(java.lang.String $Xgafv) {
            return (Patch) super.set$Xgafv($Xgafv);
          }

          @Override
          public Patch setAccessToken(java.lang.String accessToken) {
            return (Patch) super.setAccessToken(accessToken);
          }

          @Override
          public Patch setAlt(java.lang.String alt) {
            return (Patch) super.setAlt(alt);
          }

          @Override
          public Patch setCallback(java.lang.String callback) {
            return (Patch) super.setCallback(callback);
          }

          @Override
          public Patch setFields(java.lang.String fields) {
            return (Patch) super.setFields(fields);
          }

          @Override
          public Patch setKey(java.lang.String key) {
            return (Patch) super.setKey(key);
          }

          @Override
          public Patch setOauthToken(java.lang.String oauthToken) {
            return (Patch) super.setOauthToken(oauthToken);
          }

          @Override
          public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (Patch) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public Patch setQuotaUser(java.lang.String quotaUser) {
            return (Patch) super.setQuotaUser(quotaUser);
          }

          @Override
          public Patch setUploadType(java.lang.String uploadType) {
            return (Patch) super.setUploadType(uploadType);
          }

          @Override
          public Patch setUploadProtocol(java.lang.String uploadProtocol) {
            return (Patch) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          @com.google.api.client.util.Key
          private java.lang.String name;

          /** Required. Name of the identity provider. Use the following structure in your request:
         `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          public java.lang.String getName() {
            return name;
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          public Patch setName(java.lang.String name) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(NAME_PATTERN.matcher(name).matches(),
                  "Parameter name must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");
            }
            this.name = name;
            return this;
          }

          @Override
          public Patch set(String parameterName, Object value) {
            return (Patch) super.set(parameterName, value);
          }
        }
        /**
         * Updates the certificate for an identity provider.
         *
         * Create a request for the method "identity_providers.updateCertificate".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateCertificate#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the identity provider. Use the following structure in your
        request:
         *        `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SamlCertificate}
         * @return the request
         */
        public UpdateCertificate updateCertificate(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SamlCertificate content) throws java.io.IOException {
          UpdateCertificate result = new UpdateCertificate(parent, content);
          initialize(result);
          return result;
        }

        public class UpdateCertificate extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateIdentityProviderCertificateResponse> {

          private static final String REST_PATH = "v1/{+parent}/certificate";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");

          /**
           * Updates the certificate for an identity provider.
           *
           * Create a request for the method "identity_providers.updateCertificate".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateCertificate#execute()} method to invoke the remote operation.
           * <p> {@link UpdateCertificate#initialize(com.google.api.client.googleapis.services.AbstractGoogl
           * eClientRequest)} must be called to initialize this instance immediately after invoking the
           * constructor. </p>
           *
           * @param parent Required. Name of the identity provider. Use the following structure in your
        request:
         *        `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SamlCertificate}
           * @since 1.13
           */
          protected UpdateCertificate(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1SamlCertificate content) {
            super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateIdentityProviderCertificateResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");
            }
          }

          @Override
          public UpdateCertificate set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateCertificate) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateCertificate setAccessToken(java.lang.String accessToken) {
            return (UpdateCertificate) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateCertificate setAlt(java.lang.String alt) {
            return (UpdateCertificate) super.setAlt(alt);
          }

          @Override
          public UpdateCertificate setCallback(java.lang.String callback) {
            return (UpdateCertificate) super.setCallback(callback);
          }

          @Override
          public UpdateCertificate setFields(java.lang.String fields) {
            return (UpdateCertificate) super.setFields(fields);
          }

          @Override
          public UpdateCertificate setKey(java.lang.String key) {
            return (UpdateCertificate) super.setKey(key);
          }

          @Override
          public UpdateCertificate setOauthToken(java.lang.String oauthToken) {
            return (UpdateCertificate) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateCertificate setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateCertificate) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateCertificate setQuotaUser(java.lang.String quotaUser) {
            return (UpdateCertificate) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateCertificate setUploadType(java.lang.String uploadType) {
            return (UpdateCertificate) super.setUploadType(uploadType);
          }

          @Override
          public UpdateCertificate setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateCertificate) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the identity provider. Use the following structure in your request:
         `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          public UpdateCertificate setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public UpdateCertificate set(String parameterName, Object value) {
            return (UpdateCertificate) super.set(parameterName, value);
          }
        }
        /**
         * Updates the configuration for an identity provider.
         *
         * Create a request for the method "identity_providers.updateConfig".
         *
         * This request holds the parameters needed by the apigee server.  After setting any optional
         * parameters, call the {@link UpdateConfig#execute()} method to invoke the remote operation.
         *
         * @param parent Required. Name of the identity provider. Use the following structure in
        your request:
         *        `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
         * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProviderConfig}
         * @return the request
         */
        public UpdateConfig updateConfig(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProviderConfig content) throws java.io.IOException {
          UpdateConfig result = new UpdateConfig(parent, content);
          initialize(result);
          return result;
        }

        public class UpdateConfig extends ApigeeRequest<com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateIdentityProviderConfigResponse> {

          private static final String REST_PATH = "v1/{+parent}/config";

          private final java.util.regex.Pattern PARENT_PATTERN =
              java.util.regex.Pattern.compile("^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");

          /**
           * Updates the configuration for an identity provider.
           *
           * Create a request for the method "identity_providers.updateConfig".
           *
           * This request holds the parameters needed by the the apigee server.  After setting any optional
           * parameters, call the {@link UpdateConfig#execute()} method to invoke the remote operation. <p>
           * {@link
           * UpdateConfig#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
           * must be called to initialize this instance immediately after invoking the constructor. </p>
           *
           * @param parent Required. Name of the identity provider. Use the following structure in
        your request:
         *        `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           * @param content the {@link com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProviderConfig}
           * @since 1.13
           */
          protected UpdateConfig(java.lang.String parent, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1IdentityProviderConfig content) {
            super(Apigee.this, "PATCH", REST_PATH, content, com.google.api.services.apigee.v1.model.GoogleCloudApigeeV1UpdateIdentityProviderConfigResponse.class);
            this.parent = com.google.api.client.util.Preconditions.checkNotNull(parent, "Required parameter parent must be specified.");
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");
            }
          }

          @Override
          public UpdateConfig set$Xgafv(java.lang.String $Xgafv) {
            return (UpdateConfig) super.set$Xgafv($Xgafv);
          }

          @Override
          public UpdateConfig setAccessToken(java.lang.String accessToken) {
            return (UpdateConfig) super.setAccessToken(accessToken);
          }

          @Override
          public UpdateConfig setAlt(java.lang.String alt) {
            return (UpdateConfig) super.setAlt(alt);
          }

          @Override
          public UpdateConfig setCallback(java.lang.String callback) {
            return (UpdateConfig) super.setCallback(callback);
          }

          @Override
          public UpdateConfig setFields(java.lang.String fields) {
            return (UpdateConfig) super.setFields(fields);
          }

          @Override
          public UpdateConfig setKey(java.lang.String key) {
            return (UpdateConfig) super.setKey(key);
          }

          @Override
          public UpdateConfig setOauthToken(java.lang.String oauthToken) {
            return (UpdateConfig) super.setOauthToken(oauthToken);
          }

          @Override
          public UpdateConfig setPrettyPrint(java.lang.Boolean prettyPrint) {
            return (UpdateConfig) super.setPrettyPrint(prettyPrint);
          }

          @Override
          public UpdateConfig setQuotaUser(java.lang.String quotaUser) {
            return (UpdateConfig) super.setQuotaUser(quotaUser);
          }

          @Override
          public UpdateConfig setUploadType(java.lang.String uploadType) {
            return (UpdateConfig) super.setUploadType(uploadType);
          }

          @Override
          public UpdateConfig setUploadProtocol(java.lang.String uploadProtocol) {
            return (UpdateConfig) super.setUploadProtocol(uploadProtocol);
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          @com.google.api.client.util.Key
          private java.lang.String parent;

          /** Required. Name of the identity provider. Use the following structure in your request:
         `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          public java.lang.String getParent() {
            return parent;
          }

          /**
           * Required. Name of the identity provider. Use the following structure in your request:
           * `organizations/{org}/zones/{zone}/identity_providers/{identity_provider}`
           */
          public UpdateConfig setParent(java.lang.String parent) {
            if (!getSuppressPatternChecks()) {
              com.google.api.client.util.Preconditions.checkArgument(PARENT_PATTERN.matcher(parent).matches(),
                  "Parameter parent must conform to the pattern " +
                  "^organizations/[^/]+/zones/[^/]+/identity_providers/[^/]+$");
            }
            this.parent = parent;
            return this;
          }

          @Override
          public UpdateConfig set(String parameterName, Object value) {
            return (UpdateConfig) super.set(parameterName, value);
          }
        }

      }
    }
  }

  /**
   * Builder for {@link Apigee}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
      setBatchPath(DEFAULT_BATCH_PATH);
    }

    /** Builds a new instance of {@link Apigee}. */
    @Override
    public Apigee build() {
      return new Apigee(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setBatchPath(String batchPath) {
      return (Builder) super.setBatchPath(batchPath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link ApigeeRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setApigeeRequestInitializer(
        ApigeeRequestInitializer apigeeRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(apigeeRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
