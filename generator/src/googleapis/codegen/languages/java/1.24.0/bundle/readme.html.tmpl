{% comment %}
Two optional layout options (maven and gradle) are supported in Java template.
Default template would be used if layout parameter is not provided.
This readme.html template file varies based on different layouts.
Beginning of the readme template for default layout.
{% endcomment %}{% if layout.name == "default" %}<html>
<title>{{ api.title }} {{ api.version }} Client Library for Java</title>
<body>
<h2>{{ api.title }} {{ api.version }} Client Library for Java</h2>

<h3>Overview</h3>
<p>High-level details about this library can be found at
<a href="https://developers.google.com/api-client-library/java/">https://developers.google.com/api-client-library/java/</a>
<ul>
  <li><a href='https://developers.google.com/api-client-library/java/google-api-java-client/release-notes'>Release Notes</a></li>
  <li><a href='http://javadoc.google-api-java-client.googlecode.com/hg/apis/{{ api.name }}/{{ api.version }}/index.html'>JavaDoc</a></li>
  <li><a href='https://developers.google.com/api-client-library/java/google-api-java-client/dev-guide'>Developer's Guide</a></li>
  <li><a href='http://groups.google.com/group/google-api-java-client'>Support</a></li>
</ul>

<h3>License</h3>
The license can be found <a href='LICENSE.txt'>here</a>.<br/>

<h3>Generated service-specific Library</h3>
The generated service-specific library can be found in the top level directory
of the zip file:
google-api-services-{{ api.name }}-{{ api.version  }}-rev{{ api.revision }}-{{ features.releaseVersion }}.jar

{% if options.include_dependencies %}
<h3>Eclipse</h3>
A .classpath file snippet that can be included in your project's .classpath has been provided <a href='classpath-include'>here</a>.
Please only use the classpathentry's you actually need (see below for details).

<h3>ProGuard</h3>
A ProGuard configuration file <a href="proguard-google-api-client.txt">proguard-google-api-client.txt</a>
is included for common settings for using the library. On Android projects, you may want to add a reference to
<code>proguard-google-api-client.txt</code> in the <code>project.properties</code> file under the
<code>proguard.config</code> property.

<h3>Dependencies</h3>
<p>
Dependent jars for
google-api-services-{{ api.name }}-{{ api.version  }}-rev{{ api.revision }}-{{ features.releaseVersion }}.jar
can be found in the <a href='libs'>libs</a> folder and the corresponding source
jars can be found in the <a href='libs-sources'>libs-sources</a> folder.
<br/><br/>
The dependency structure and licenses can be found in the
<a href='dependencies'>dependencies</a> directory.
</p>

<h3>Dependencies for all Platforms</h3>
The following are the jars from the <a href='libs'>libs</a> folder required for
applications on all platforms:
<ul>
  <li>google-api-client-{{ features.baseClientLibrary }}.jar</li>
  <li>google-oauth-client-{{ features.oauthClientLibrary }}.jar</li>
  <li>google-http-client-{{ features.httpClientLibrary }}.jar</li>
  <li>jsr305-{{ features.jsr305Version }}.jar</li>
  <li>google-http-client-gson-{{ features.httpClientLibrary }}.jar (when using GSON)
    <ul>
      <li>gson-{{ features.gsonVersion }}.jar</li>
    </ul>
  </li>
  <li>google-http-client-jackson2-{{ features.httpClientLibrary }}.jar (when using Jackson 2)
    <ul>
      <li>jackson-core-${{ features.jackson2CoreVersion }}.jar</li>
    </ul>
  </li>
  <li>google-http-client-jdo-{{ features.httpClientLibrary }}.jar (when using JDO)
    <ul>
      <li>jdo2-api-{{ features.jdo2ApiVersion }}.jar</li>
    </ul>
  </li>
</ul>

<h3>Android Dependencies</h3>
The following are the jars from the <a href='libs'>libs</a> folder required for
android applications or a newer compatible version of each dependency:
<ul>
  <li>google-api-client-android-{{ features.baseClientLibrary }}.jar (for SDK &gt;= 2.1)</li>
  <li>google-http-client-android-{{ features.httpClientLibrary }}.jar</li>
</ul>
The <a href='libs'>libs</a> folder also contains properties files that specify the location of source
jars for Android projects in Eclipse.<br/>
Please see the
<a href='https://developers.google.com/api-client-library/java/google-api-java-client/android'>Android</a>
for the Android Developer's Guide.

<h3>Google App Engine Dependencies</h3>
The following are the jars from the <a href='libs'>libs</a> folder required for
Google App Engine applications or a newer compatible version of each dependency:
<ul>
  <li>google-api-client-appengine-{{ features.baseClientLibrary }}.jar</li>
  <li>google-api-client-servlet-{{ features.baseClientLibrary }}.jar</li>
  <li>google-oauth-client-appengine-{{ features.oauthClientLibrary }}.jar</li>
  <li>google-oauth-client-servlet-{{ features.oauthClientLibrary }}.jar</li>
  <li>google-http-client-appengine-{{ features.httpClientLibrary }}.jar</li>
  <li>transaction-api-{{ features.transactionApiVersion }}.jar</li>
</ul>
Please see the
<a href='https://developers.google.com/api-client-library/java/google-api-java-client/app-engine'>GoogleAppEngine</a>
for the Google App Engine Developer's Guide.

<h3>Servlet Dependencies</h3>
The following are the jars from the <a href='libs'>libs</a> folder required for
Servlet applications or a newer compatible version of each dependency:
<ul>
  <li>google-api-client-servlet-{{ features.baseClientLibrary }}.jar</li>
  <li>google-oauth-client-{{ features.oauthClientLibrary }}.jar</li>
  <li>google-oauth-client-servlet-{{ features.oauthClientLibrary }}.jar</li>
  <li>commons-logging-{{ features.commonsLoggingVersion }}.jar</li>
  <li>httpclient-{{ features.httpClientVersion }}.jar</li>
  <li>httpcore-{{ features.httpCoreVersion }}.jar</li>
  <li>transaction-api-{{ features.transactionApiVersion }}.jar</li>
</ul>

<h3>General Purpose Java 5 Environment Dependencies</h3>
The following are the jars from the <a href='libs'>libs</a> folder required for
general purpose Java 5 applications (or a newer compatible version of each dependency):
<ul>
  <li>google-api-client-java6-{{ features.baseClientLibrary }}.jar</li>
  <li>google-oauth-client-java6-{{ features.oauthClientLibrary }}.jar
  <ul>
    <li>google-oauth-client-jetty-{{ features.oauthClientLibrary }}.jar (for Jetty 6)
      <ul>
        <li>jetty-{{ features.jettyVersion }}</li>
        <li>jetty-util-{{ features.jettyUtilVersion }}</li>
      </ul>
    </li>
  </ul></li>
  <li>google-oauth-client-java7-{{ features.oauthClientLibrary }}.jar</li>
  <li>commons-logging-{{ features.commonsLoggingVersion }}.jar</li>
  <li>httpclient-{{ features.httpClientVersion }}.jar</li>
  <li>httpcore-{{ features.httpCoreVersion }}.jar</li>
</ul>
{% endif %}

</body>
</html>
{% comment %}
Beginning of the readme template for maven/gradle layout.
{% endcomment %}
{% else %}<html>
<title>{{ api.maven.artifact_id }} {{ api.version }} Client Library for Java</title>
<body>
<h1>Overview</h1>
<p>This is a client library bundle using Google Cloud Endpoints. In order to use this API client library in your project, you need to build the library using {% if layout.name == "maven" %}Maven{% endif %}{% if layout.name == "gradle" %}Gradle{% endif %}.</p>
{% comment %}
Beginning of the readme template for maven layout.
{% endcomment %}
{% if layout.name == "maven" %}<h2>How to build API client library using Maven</h2>
<p>Under the root directory of the client bundle, run <b><i>"mvn install"</i></b> in the command console.</p>

<h2>How to use API client library in Maven project</h2>
<p><b>Step 1</b>: Add the following &lt;dependency&gt; section to your <b><i>pom.xml</i></b> file.</p>
<ul>
<pre style="background-color: #eee;">
    &lt;dependency&gt;
      &lt;groupId&gt;{{ api.maven.group_id }}&lt;/groupId&gt;
      &lt;artifactId&gt;{{ api.maven.artifact_id }}&lt;/artifactId&gt;
      &lt;version&gt;{{ api.maven.version }}&lt;/version&gt;
    &lt;/dependency&gt;
</pre>
</ul>
<p><b>Step 2</b>: Add one of the following &lt;dependency&gt; sections to your <b><i>pom.xml</i></b> file, based on your platform (Android/App Engine/Servlet). Google Cloud Endpoints API client is compatible with all supported Java platforms (with minimum Java version 5).</p>
<ul>
<li>
<b>For Android</b>
<pre style="background-color: #eee;">
    &lt;dependency&gt;
      &lt;groupId&gt;com.google.api-client&lt;/groupId&gt;
      &lt;artifactId&gt;google-api-client-android&lt;/artifactId&gt;
      &lt;version&gt;{{ features.baseClientLibrary }}&lt;/version&gt;
    &lt;/dependency&gt;
</pre>
</li>
<li>
<b>For App Engine</b>
<pre style="background-color: #eee;">
    &lt;dependency&gt;
      &lt;groupId&gt;com.google.api-client&lt;/groupId&gt;
      &lt;artifactId&gt;google-api-client-appengine&lt;/artifactId&gt;
      &lt;version&gt;{{ features.baseClientLibrary }}&lt;/version&gt;
    &lt;/dependency&gt;
</pre>
</li>
<li>
<b>For Java Servlet</b>
<pre style="background-color: #eee;">
    &lt;dependency&gt;
      &lt;groupId&gt;com.google.api-client&lt;/groupId&gt;
      &lt;artifactId&gt;google-api-client-servlet&lt;/artifactId&gt;
      &lt;version&gt;{{ features.baseClientLibrary }}&lt;/version&gt;
    &lt;/dependency&gt;
</pre>
</li>
</ul>
<p><b>Step 3</b>: Add one of the following &lt;dependency&gt; sections to your <b><i>pom.xml</i></b> file, or directly import AndroidJsonFactory into your Java source, based on your JsonFactory implementation (GSON/Jackson/AndroidJson).</p>
<ul>
<li>
<b>Using GsonFactory</b>
<pre style="background-color: #eee;">
  &lt;dependency&gt;
    &lt;groupId&gt;com.google.http-client&lt;/groupId&gt;
    &lt;artifactId&gt;google-http-client-gson&lt;/artifactId&gt;
    &lt;version&gt;{{ features.baseClientLibrary }}&lt;/version&gt;
  &lt;/dependency&gt;
</pre>
</li>
<li>
<b>Using JacksonFactory</b>
<pre style="background-color: #eee;">
  &lt;dependency&gt;
    &lt;groupId&gt;com.google.http-client&lt;/groupId&gt;
    &lt;artifactId&gt;google-http-client-jackson2&lt;/artifactId&gt;
    &lt;version&gt;{{ features.baseClientLibrary }}&lt;/version&gt;
  &lt;/dependency&gt;
</pre>
</li>
<li>
<b>Using AndroidJsonFactory (Android with minimum API level 11)</b><br/>
For Android with minimum API level 11, import AndroidJsonFactory into your Java source.
<pre style="background-color: #eee;">
  import com.google.api.client.extensions.android.json.AndroidJsonFactory;
</pre>
</li>
</ul>
<p><b>Step 4</b>: Refer to the "Creating the service object" and "Calling the API exposed by the Endpoint" sections of this <a href="https://developers.google.com/appengine/docs/java/endpoints/consume_android">Endpoints Java Documentation</a> to see how to use the client library in Android.</p>
{% endif %}
{% comment %}
Beginning of the readme template for gradle layout.
{% endcomment %}
{% if layout.name == "gradle" %}<h2>How to build API client library using Gradle</h2>
<p>Under the root directory of the client bundle, run <b><i>"gradle install"</i></b> in the command console. By running this command, this API client bundle will be built by Gradle and deployed to the local Maven repository. Since Gradle doesn't have a native repository system, a local Maven repository is used.</p>

<h2>How to use API client library in Gradle project</h2>
<p><b>Step 1</b>: Add the following <i>compile</i> section to your <b><i>build.gradle</i></b> file.</p>
<ul>
<pre style="background-color: #eee;">
  compile ([group: '{{ api.maven.group_id }}', name: '{{ api.maven.artifact_id }}', version: '{{ api.maven.version }}'])
</pre>
</ul>
<p><b>Step 2</b>: Add one of the following <i>compile</i> sections to your <b><i>build.gradle</i></b> file, based on your platform (Android/App Engine/Servlet). The Google Cloud Endpoints API client is compatible with all supported Java platforms (with minimum Java version 5).</p>
<ul>
<li>
<b>For Android</b>
<pre style="background-color: #eee;">
  compile ([group: 'com.google.api-client', name: 'google-api-client-android', version: '{{ features.baseClientLibrary }}'])
</pre>
</li>
<li>
<b>For App Engine</b>
<pre style="background-color: #eee;">
  compile ([group: 'com.google.api-client', name: 'google-api-client-appengine', version: '{{ features.baseClientLibrary }}'])
</pre>
</li>
<li>
<b>For Java Servlet</b>
<pre style="background-color: #eee;">
  compile ([group: 'com.google.api-client', name: 'google-api-client-servlet', version: '{{ features.baseClientLibrary }}'])
</pre>
</li>
</ul>
<p><b>Step 3</b>: Add one of the following <i>compile</i> sections to your <b><i>build.gradle</i></b> file, or directly import AndroidJsonFactory into your Java source, based on your JsonFactory implementation (GSON/Jackson/AndroidJson).</p>
<ul>
<li>
<b>Using GsonFactory</b>
<pre style="background-color: #eee;">
  compile ([group: 'com.google.http-client', name: 'google-http-client-gson', version: '{{ features.baseClientLibrary }}'])
</pre>
</li>
<li>
<b>Using JacksonFactory</b>
<pre style="background-color: #eee;">
  compile ([group: 'com.google.http-client', name: 'google-http-client-jackson2', version: '{{ features.baseClientLibrary }}'])
</pre>
</li>
<li>
<b>Using AndroidJsonFactory (Android with minimum API level 11)</b><br/>
For Android with minimum API level 11, import AndroidJsonFactory into your Java source.
<pre style="background-color: #eee;">
  import com.google.api.client.extensions.android.json.AndroidJsonFactory;
</pre>
</li>
</ul>
<p><b>Step 4</b>: Make sure local Maven repository is added to the repository section of <b><i>build.gradle</i></b> file.
<ul>
<pre style="background-color: #eee;">
  repositories {
    mavenCentral()
    <b>mavenLocal()</b>
  }
</pre>
</ul>
<p><b>Step 5</b>: Refer to the "Creating the service object" and "Calling the API exposed by the Endpoint" sections of this <a href="https://developers.google.com/appengine/docs/java/endpoints/consume_android">Endpoints Java Documentation</a> to see how to use the client library in Android.</p>
{% endif %}
</html>
{% endif %}
